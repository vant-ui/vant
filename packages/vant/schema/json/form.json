{
  "tagName": "Form",
  "pkgId": "vant",
  "type": "object",
  "properties": {
    "name": {
      "title": "Form 表单",
      "description": "组件名称"
    },
    "tagName": {
      "title": "Form",
      "description": "组件标签"
    },
    "advanceProps": {
      "title": "高级属性",
      "description": "高级属性",
      "type": "object",
      "properties": {
        "condition": {
          "title": "是否渲染",
          "description": "是否渲染",
          "type": "string",
          "valueType": "switch",
          "default": true
        }
      }
    },
    "hasChild": {
      "type": "boolean",
      "const": true,
      "title": "支持调用子组件",
      "description": "true:支持;false:不支持"
    },
    "props": {
      "type": "object",
      "title": "组件属性",
      "description": "组件属性",
      "required": [
        "colon",
        "disabled",
        "readonly",
        "showError",
        "labelWidth",
        "labelAlign",
        "inputAlign",
        "scrollToError",
        "validateFirst",
        "submitOnEnter",
        "showErrorMessage",
        "errorMessageAlign",
        "validateTrigger",
        "type",
        "default",
        "props",
        "emits",
        "consterrors",
        "name"
      ],
      "properties": {
        "colon": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "colon",
          "option": false,
          "valueType": "switch"
        },
        "disabled": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "disabled",
          "option": false,
          "valueType": "switch"
        },
        "readonly": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "readonly",
          "option": false,
          "valueType": "switch"
        },
        "showError": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "showError",
          "option": false,
          "valueType": "switch"
        },
        "labelWidth": {
          "enum": [],
          "type": [
            "numericProp"
          ],
          "title": "labelWidth",
          "option": false,
          "valueType": "text"
        },
        "labelAlign": {
          "enum": [],
          "type": [
            "String as PropType<FieldTextAlign>"
          ],
          "title": "labelAlign",
          "option": false,
          "valueType": "text"
        },
        "inputAlign": {
          "enum": [],
          "type": [
            "String as PropType<FieldTextAlign>"
          ],
          "title": "inputAlign",
          "option": false,
          "valueType": "text"
        },
        "scrollToError": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "scrollToError",
          "option": false,
          "valueType": "switch"
        },
        "validateFirst": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "validateFirst",
          "option": false,
          "valueType": "switch"
        },
        "submitOnEnter": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "submitOnEnter",
          "option": false,
          "valueType": "text"
        },
        "showErrorMessage": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "showErrorMessage",
          "option": false,
          "valueType": "text"
        },
        "errorMessageAlign": {
          "enum": [],
          "type": [
            "String as PropType<FieldTextAlign>"
          ],
          "title": "errorMessageAlign",
          "option": false,
          "valueType": "text"
        },
        "validateTrigger": {
          "enum": [],
          "type": [
            "{"
          ],
          "title": "validateTrigger",
          "option": false,
          "valueType": "text"
        },
        "type": {
          "enum": [],
          "type": [
            "[String Array] as PropType<"
          ],
          "title": "type",
          "option": false,
          "valueType": "text"
        },
        "default": {
          "enum": [],
          "type": [
            "'onBlur'"
          ],
          "title": "default",
          "option": false,
          "valueType": "text"
        },
        "props": {
          "enum": [],
          "type": [
            "formProps"
          ],
          "title": "props",
          "option": false,
          "valueType": "text"
        },
        "emits": {
          "enum": [],
          "type": [
            "['submit' 'failed']"
          ],
          "title": "emits",
          "option": false,
          "valueType": "text"
        },
        "consterrors": {
          "enum": [],
          "type": [
            "FieldValidateError[] = [];"
          ],
          "title": "consterrors",
          "option": false,
          "valueType": "text"
        },
        "returnprops.validateFirstvalidateSeq(name)": {
          "enum": [],
          "type": [
            "validateAll(name);"
          ],
          "title": "returnprops.validateFirstvalidateSeq(name)",
          "option": true,
          "valueType": "text"
        },
        "name": {
          "enum": [],
          "type": [
            "string"
          ],
          "title": "name",
          "option": false,
          "valueType": "text"
        },
        "options": {
          "enum": [],
          "type": [
            "boolean ",
            " ScrollIntoViewOptions"
          ],
          "title": "options",
          "option": true,
          "valueType": "text"
        }
      }
    },
    "events": {
      "type": "object",
      "title": "交互行为",
      "description": "组件动作事件",
      "required": [
        "constgetFieldsByNames=(names",
        "constvalidateSeq=(names",
        "returnfield.validate().then((error",
        "constvalidateAll=(names",
        "constvalidateField=(name",
        "matched.validate().then((error",
        "constvalidate=(name",
        "constresetValidation=(name",
        ".catch((errors",
        "constonSubmit=(event"
      ],
      "properties": {
        "constgetFieldsByNames=(names": {
          "value": "string[]) => {",
          "title": "constgetFieldsByNames=(names",
          "description": "constgetFieldsByNames=(names",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constvalidateSeq=(names": {
          "value": "string[]) =>",
          "title": "constvalidateSeq=(names",
          "description": "constvalidateSeq=(names",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "returnfield.validate().then((error": {
          "value": "FieldValidateError) => {",
          "title": "returnfield.validate().then((error",
          "description": "returnfield.validate().then((error",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constvalidateAll=(names": {
          "value": "string[]) =>",
          "title": "constvalidateAll=(names",
          "description": "constvalidateAll=(names",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constvalidateField=(name": {
          "value": "string) => {",
          "title": "constvalidateField=(name",
          "description": "constvalidateField=(name",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "matched.validate().then((error": {
          "value": "FieldValidateError) => {",
          "title": "matched.validate().then((error",
          "description": "matched.validate().then((error",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constvalidate=(name": {
          "value": "string | string[]) => {",
          "title": "constvalidate=(name",
          "description": "constvalidate=(name",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constresetValidation=(name": {
          "value": "string | string[]) => {",
          "title": "constresetValidation=(name",
          "description": "constresetValidation=(name",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        ".catch((errors": {
          "value": "FieldValidateError[]) => {",
          "title": ".catch((errors",
          "description": ".catch((errors",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonSubmit=(event": {
          "value": "Event) => {",
          "title": "constonSubmit=(event",
          "description": "constonSubmit=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        }
      }
    },
    "pkgId": {
      "title": "vant",
      "description": "组件库包名称"
    },
    "version": {
      "title": "4.0.2",
      "description": "组件库包版本"
    },
    "protoProps": {
      "type": "object",
      "title": "原生属性",
      "required": [],
      "properties": {
        "id": {
          "type": "string",
          "title": "唯一id",
          "valueType": "text",
          "description": "元素唯一标识"
        },
        "ref": {
          "type": "string",
          "title": "ref",
          "valueType": "text",
          "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
        },
        "style": {
          "type": "object",
          "title": "内联样式",
          "valueType": "object",
          "description": "组件内联样式(JSON格式)"
        },
        "className": {
          "type": "string",
          "title": "样式名",
          "valueType": "textarea",
          "description": "组件样式名"
        }
      },
      "description": "原生属性"
    },
    "lastModifyTime": {
      "type": "string",
      "title": "最后一次修改时间",
      "description": "2022-12-13"
    }
  },
  "lastModifyTime": "2022-12-13",
  "version": "4.0.2",
  "required": [
    null
  ],
  "description": "用于数据录入、校验，支持输入框、单选框、复选框、文件上传等类型，需要与 Field 输入框 组件搭配使用。",
  "groupKey": "Form Components",
  "groupName": "表单组件",
  "isHidden": 0,
  "framework": "vue"
}