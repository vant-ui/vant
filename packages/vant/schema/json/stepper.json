{
  "tagName": "Stepper",
  "pkgId": "vant",
  "type": "object",
  "properties": {
    "name": {
      "title": "Stepper 步进器",
      "description": "组件名称"
    },
    "tagName": {
      "title": "Stepper",
      "description": "组件标签"
    },
    "advanceProps": {
      "title": "高级属性",
      "description": "高级属性",
      "type": "object",
      "properties": {
        "condition": {
          "title": "是否渲染",
          "description": "是否渲染",
          "type": "string",
          "valueType": "switch",
          "default": true
        }
      }
    },
    "hasChild": {
      "type": "boolean",
      "const": true,
      "title": "支持调用子组件",
      "description": "true:支持;false:不支持"
    },
    "props": {
      "type": "object",
      "title": "组件属性",
      "description": "组件属性",
      "required": [
        "min",
        "max",
        "name",
        "step",
        "theme",
        "integer",
        "disabled",
        "showPlus",
        "showMinus",
        "showInput",
        "longPress",
        "autoFixed",
        "allowEmpty",
        "modelValue",
        "inputWidth",
        "buttonSize",
        "placeholder",
        "disablePlus",
        "disableMinus",
        "disableInput",
        "beforeChange",
        "defaultValue",
        "decimalLength",
        "props",
        "emits",
        "'update",
        "emit('update",
        "letactionType",
        "width",
        "height",
        "args",
        "letisLongPress",
        "letlongPressTimer",
        "//see",
        "onTouchend",
        "onTouchcancel",
        "emit('change',value,{name",
        "bem('minus',{disabled",
        "{[HAPTICS_FEEDBACK]",
        "bem('plus',{disabled"
      ],
      "properties": {
        "min": {
          "enum": [],
          "type": [
            "makeNumericProp(1)"
          ],
          "title": "min",
          "option": false,
          "valueType": "text"
        },
        "max": {
          "enum": [],
          "type": [
            "makeNumericProp(Infinity)"
          ],
          "title": "max",
          "option": false,
          "valueType": "text"
        },
        "name": {
          "enum": [],
          "type": [
            "makeNumericProp('')"
          ],
          "title": "name",
          "option": false,
          "valueType": "text"
        },
        "step": {
          "enum": [],
          "type": [
            "makeNumericProp(1)"
          ],
          "title": "step",
          "option": false,
          "valueType": "text"
        },
        "theme": {
          "enum": [],
          "type": [
            "String as PropType<StepperTheme>"
          ],
          "title": "theme",
          "option": false,
          "valueType": "text"
        },
        "integer": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "integer",
          "option": false,
          "valueType": "switch"
        },
        "disabled": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "disabled",
          "option": false,
          "valueType": "switch"
        },
        "showPlus": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "showPlus",
          "option": false,
          "valueType": "text"
        },
        "showMinus": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "showMinus",
          "option": false,
          "valueType": "text"
        },
        "showInput": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "showInput",
          "option": false,
          "valueType": "text"
        },
        "longPress": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "longPress",
          "option": false,
          "valueType": "text"
        },
        "autoFixed": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "autoFixed",
          "option": false,
          "valueType": "text"
        },
        "allowEmpty": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "allowEmpty",
          "option": false,
          "valueType": "switch"
        },
        "modelValue": {
          "enum": [],
          "type": [
            "numericProp"
          ],
          "title": "modelValue",
          "option": false,
          "valueType": "text"
        },
        "inputWidth": {
          "enum": [],
          "type": [
            "numericProp"
          ],
          "title": "inputWidth",
          "option": false,
          "valueType": "text"
        },
        "buttonSize": {
          "enum": [],
          "type": [
            "numericProp"
          ],
          "title": "buttonSize",
          "option": false,
          "valueType": "text"
        },
        "placeholder": {
          "enum": [],
          "type": [
            "String"
          ],
          "title": "placeholder",
          "option": false,
          "valueType": "text"
        },
        "disablePlus": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "disablePlus",
          "option": false,
          "valueType": "switch"
        },
        "disableMinus": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "disableMinus",
          "option": false,
          "valueType": "switch"
        },
        "disableInput": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "disableInput",
          "option": false,
          "valueType": "switch"
        },
        "beforeChange": {
          "enum": [],
          "type": [
            "Function as PropType<Interceptor>"
          ],
          "title": "beforeChange",
          "option": false,
          "valueType": "text"
        },
        "defaultValue": {
          "enum": [],
          "type": [
            "makeNumericProp(1)"
          ],
          "title": "defaultValue",
          "option": false,
          "valueType": "text"
        },
        "decimalLength": {
          "enum": [],
          "type": [
            "numericProp"
          ],
          "title": "decimalLength",
          "option": false,
          "valueType": "text"
        },
        "props": {
          "enum": [],
          "type": [
            "stepperProps"
          ],
          "title": "props",
          "option": false,
          "valueType": "text"
        },
        "emits": {
          "enum": [],
          "type": [
            "["
          ],
          "title": "emits",
          "option": false,
          "valueType": "text"
        },
        "'update": {
          "enum": [],
          "type": [
            "modelValue'"
          ],
          "title": "'update",
          "option": false,
          "valueType": "text"
        },
        "value=value===''0": {
          "enum": [],
          "type": [
            "+value;"
          ],
          "title": "value=value===''0",
          "option": true,
          "valueType": "text"
        },
        "value=Number.isNaN(value)+min": {
          "enum": [],
          "type": [
            "value;"
          ],
          "title": "value=Number.isNaN(value)+min",
          "option": true,
          "valueType": "text"
        },
        "value=autoFixedMath.max(Math.min(+max,value),+min)": {
          "enum": [],
          "type": [
            "value;"
          ],
          "title": "value=autoFixedMath.max(Math.min(+max,value),+min)",
          "option": true,
          "valueType": "text"
        },
        "emit('update": {
          "enum": [],
          "type": [
            "modelValue' value);"
          ],
          "title": "emit('update",
          "option": false,
          "valueType": "text"
        },
        "letactionType": {
          "enum": [
            "plus",
            "minus;"
          ],
          "type": [
            "string"
          ],
          "title": "letactionType",
          "option": false,
          "valueType": "select"
        },
        "width": {
          "enum": [],
          "type": [
            "addUnit(props.inputWidth)"
          ],
          "title": "width",
          "option": false,
          "valueType": "text"
        },
        "height": {
          "enum": [],
          "type": [
            "addUnit(props.buttonSize)"
          ],
          "title": "height",
          "option": false,
          "valueType": "text"
        },
        "args": {
          "enum": [],
          "type": [
            "[value]"
          ],
          "title": "args",
          "option": false,
          "valueType": "text"
        },
        "constdiff=actionType==='minus'-props.step": {
          "enum": [],
          "type": [
            "+props.step;"
          ],
          "title": "constdiff=actionType==='minus'-props.step",
          "option": true,
          "valueType": "text"
        },
        "setValue(isNumeric+formatted": {
          "enum": [],
          "type": [
            "formatted);"
          ],
          "title": "setValue(isNumeric+formatted",
          "option": true,
          "valueType": "text"
        },
        "letisLongPress": {
          "enum": [],
          "type": [
            "boolean;"
          ],
          "title": "letisLongPress",
          "option": false,
          "valueType": "text"
        },
        "letlongPressTimer": {
          "enum": [],
          "type": [
            "ReturnType<typeof setTimeout>;"
          ],
          "title": "letlongPressTimer",
          "option": false,
          "valueType": "text"
        },
        "//see": {
          "enum": [],
          "type": [
            "https://github.com/vant-ui/vant/issues/7690"
          ],
          "title": "//see",
          "option": false,
          "valueType": "text"
        },
        "onTouchend": {
          "enum": [],
          "type": [
            "onTouchEnd"
          ],
          "title": "onTouchend",
          "option": false,
          "valueType": "text"
        },
        "onTouchcancel": {
          "enum": [],
          "type": [
            "onTouchEnd"
          ],
          "title": "onTouchcancel",
          "option": false,
          "valueType": "text"
        },
        "emit('change',value,{name": {
          "enum": [],
          "type": [
            "props.name });"
          ],
          "title": "emit('change',value,{name",
          "option": false,
          "valueType": "text"
        },
        "bem('minus',{disabled": {
          "enum": [],
          "type": [
            "minusDisabled.value })"
          ],
          "title": "bem('minus',{disabled",
          "option": false,
          "valueType": "text"
        },
        "{[HAPTICS_FEEDBACK]": {
          "enum": [],
          "type": [
            "!plusDisabled.value }"
          ],
          "title": "{[HAPTICS_FEEDBACK]",
          "option": false,
          "valueType": "text"
        },
        "type={props.integer'tel'": {
          "enum": [],
          "type": [
            "'text'}"
          ],
          "title": "type={props.integer'tel'",
          "option": true,
          "valueType": "text"
        },
        "inputmode={props.integer'numeric'": {
          "enum": [],
          "type": [
            "'decimal'}"
          ],
          "title": "inputmode={props.integer'numeric'",
          "option": true,
          "valueType": "text"
        },
        "bem('plus',{disabled": {
          "enum": [],
          "type": [
            "plusDisabled.value })"
          ],
          "title": "bem('plus',{disabled",
          "option": false,
          "valueType": "text"
        }
      }
    },
    "events": {
      "type": "object",
      "title": "交互行为",
      "description": "组件动作事件",
      "required": [
        "constformat=(value",
        "constsetValue=(value",
        "constonInput=(event",
        "constonFocus=(event",
        "constonBlur=(event",
        "constonTouchEnd=(event",
        "constonMousedown=(event",
        "constcreateListeners=(type",
        "onClick",
        "onTouchstartPassive"
      ],
      "properties": {
        "constformat=(value": {
          "value": "Numeric autoFixed = true) => {",
          "title": "constformat=(value",
          "description": "constformat=(value",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constsetValue=(value": {
          "value": "Numeric) => {",
          "title": "constsetValue=(value",
          "description": "constsetValue=(value",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonInput=(event": {
          "value": "Event) => {",
          "title": "constonInput=(event",
          "description": "constonInput=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonFocus=(event": {
          "value": "Event) => {",
          "title": "constonFocus=(event",
          "description": "constonFocus=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonBlur=(event": {
          "value": "Event) => {",
          "title": "constonBlur=(event",
          "description": "constonBlur=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonTouchEnd=(event": {
          "value": "TouchEvent) => {",
          "title": "constonTouchEnd=(event",
          "description": "constonTouchEnd=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonMousedown=(event": {
          "value": "MouseEvent) => {",
          "title": "constonMousedown=(event",
          "description": "constonMousedown=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constcreateListeners=(type": {
          "value": "typeof actionType) => ({",
          "title": "constcreateListeners=(type",
          "description": "constcreateListeners=(type",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "onClick": {
          "value": "(event: MouseEvent) => {",
          "title": "onClick",
          "description": "onClick",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "onTouchstartPassive": {
          "value": "() => {",
          "title": "onTouchstartPassive",
          "description": "onTouchstartPassive",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        }
      }
    },
    "pkgId": {
      "title": "vant",
      "description": "组件库包名称"
    },
    "version": {
      "title": "4.0.2",
      "description": "组件库包版本"
    },
    "protoProps": {
      "type": "object",
      "title": "原生属性",
      "required": [],
      "properties": {
        "id": {
          "type": "string",
          "title": "唯一id",
          "valueType": "text",
          "description": "元素唯一标识"
        },
        "ref": {
          "type": "string",
          "title": "ref",
          "valueType": "text",
          "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
        },
        "style": {
          "type": "object",
          "title": "内联样式",
          "valueType": "object",
          "description": "组件内联样式(JSON格式)"
        },
        "className": {
          "type": "string",
          "title": "样式名",
          "valueType": "textarea",
          "description": "组件样式名"
        }
      },
      "description": "原生属性"
    },
    "lastModifyTime": {
      "type": "string",
      "title": "最后一次修改时间",
      "description": "2022-12-13"
    }
  },
  "lastModifyTime": "2022-12-13",
  "version": "4.0.2",
  "required": [
    null
  ],
  "description": "步进器由增加按钮、减少按钮和输入框组成，用于在一定范围内输入、调整数字。",
  "groupKey": "Form Components",
  "groupName": "表单组件",
  "isHidden": 0,
  "framework": "vue"
}