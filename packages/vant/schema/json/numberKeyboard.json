{
  "tagName": "NumberKeyboard",
  "pkgId": "vant",
  "type": "object",
  "properties": {
    "name": {
      "title": "NumberKeyboard 数字键盘",
      "description": "组件名称"
    },
    "tagName": {
      "title": "NumberKeyboard",
      "description": "组件标签"
    },
    "advanceProps": {
      "title": "高级属性",
      "description": "高级属性",
      "type": "object",
      "properties": {
        "condition": {
          "title": "是否渲染",
          "description": "是否渲染",
          "type": "string",
          "valueType": "switch",
          "default": true
        }
      }
    },
    "hasChild": {
      "type": "boolean",
      "const": true,
      "title": "支持调用子组件",
      "description": "true:支持;false:不支持"
    },
    "props": {
      "type": "object",
      "title": "组件属性",
      "description": "组件属性",
      "required": [
        "show",
        "title",
        "theme",
        "zIndex",
        "teleport",
        "maxlength",
        "modelValue",
        "transition",
        "blurOnClose",
        "showDeleteKey",
        "randomKeyOrder",
        "closeButtonText",
        "deleteButtonText",
        "closeButtonLoading",
        "hideOnClickOutside",
        "safeAreaInsetBottom",
        "extraKey",
        "type",
        "default",
        "functionshuffle(array",
        "inheritAttrs",
        "props",
        "emits",
        "'update",
        "constkeys",
        ".map((_,i)=>({text",
        "{text",
        "text",
        "emit('update",
        "constkeySlots",
        "v-slots={{delete",
        "useClickAway(root,onBlur,{eventName",
        "unfit",
        "'with-title'"
      ],
      "properties": {
        "show": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "show",
          "option": false,
          "valueType": "switch"
        },
        "title": {
          "enum": [],
          "type": [
            "String"
          ],
          "title": "title",
          "option": false,
          "valueType": "text"
        },
        "theme": {
          "enum": [],
          "type": [
            "makeStringProp<NumberKeyboardTheme>('default')"
          ],
          "title": "theme",
          "option": false,
          "valueType": "text"
        },
        "zIndex": {
          "enum": [],
          "type": [
            "numericProp"
          ],
          "title": "zIndex",
          "option": false,
          "valueType": "text"
        },
        "teleport": {
          "enum": [],
          "type": [
            "[String Object] as PropType<TeleportProps['to']>"
          ],
          "title": "teleport",
          "option": false,
          "valueType": "text"
        },
        "maxlength": {
          "enum": [],
          "type": [
            "makeNumericProp(Infinity)"
          ],
          "title": "maxlength",
          "option": false,
          "valueType": "text"
        },
        "modelValue": {
          "enum": [],
          "type": [
            "makeStringProp('')"
          ],
          "title": "modelValue",
          "option": false,
          "valueType": "text"
        },
        "transition": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "transition",
          "option": false,
          "valueType": "text"
        },
        "blurOnClose": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "blurOnClose",
          "option": false,
          "valueType": "text"
        },
        "showDeleteKey": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "showDeleteKey",
          "option": false,
          "valueType": "text"
        },
        "randomKeyOrder": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "randomKeyOrder",
          "option": false,
          "valueType": "switch"
        },
        "closeButtonText": {
          "enum": [],
          "type": [
            "String"
          ],
          "title": "closeButtonText",
          "option": false,
          "valueType": "text"
        },
        "deleteButtonText": {
          "enum": [],
          "type": [
            "String"
          ],
          "title": "deleteButtonText",
          "option": false,
          "valueType": "text"
        },
        "closeButtonLoading": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "closeButtonLoading",
          "option": false,
          "valueType": "switch"
        },
        "hideOnClickOutside": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "hideOnClickOutside",
          "option": false,
          "valueType": "text"
        },
        "safeAreaInsetBottom": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "safeAreaInsetBottom",
          "option": false,
          "valueType": "text"
        },
        "extraKey": {
          "enum": [],
          "type": [
            "{"
          ],
          "title": "extraKey",
          "option": false,
          "valueType": "text"
        },
        "type": {
          "enum": [],
          "type": [
            "props.showDeleteKey ? 'delete' : ''"
          ],
          "title": "type",
          "option": false,
          "valueType": "text"
        },
        "default": {
          "enum": [],
          "type": [
            "''"
          ],
          "title": "default",
          "option": false,
          "valueType": "text"
        },
        "functionshuffle(array": {
          "enum": [],
          "type": [
            "unknown[]) {"
          ],
          "title": "functionshuffle(array",
          "option": false,
          "valueType": "text"
        },
        "inheritAttrs": {
          "enum": [],
          "type": [
            "false"
          ],
          "title": "inheritAttrs",
          "option": false,
          "valueType": "text"
        },
        "props": {
          "enum": [],
          "type": [
            "number"
          ],
          "title": "props",
          "option": false,
          "valueType": "digit"
        },
        "emits": {
          "enum": [],
          "type": [
            "["
          ],
          "title": "emits",
          "option": false,
          "valueType": "text"
        },
        "'update": {
          "enum": [],
          "type": [
            "modelValue'"
          ],
          "title": "'update",
          "option": false,
          "valueType": "text"
        },
        "constkeys": {
          "enum": [],
          "type": [
            "KeyConfig[] = Array(9)"
          ],
          "title": "constkeys",
          "option": false,
          "valueType": "text"
        },
        ".map((_,i)=>({text": {
          "enum": [],
          "type": [
            "i + 1 }));"
          ],
          "title": ".map((_,i)=>({text",
          "option": false,
          "valueType": "text"
        },
        "{text": {
          "enum": [],
          "type": [
            "extraKeys[1] type: 'extra' }"
          ],
          "title": "{text",
          "option": false,
          "valueType": "text"
        },
        "text": {
          "enum": [],
          "type": [
            "props.showDeleteKey ? props.deleteButtonText : ''"
          ],
          "title": "text",
          "option": false,
          "valueType": "text"
        },
        "constextraKeys=Array.isArray(extraKey)extraKey": {
          "enum": [],
          "type": [
            "[extraKey];"
          ],
          "title": "constextraKeys=Array.isArray(extraKey)extraKey",
          "option": true,
          "valueType": "text"
        },
        "props.theme==='custom'genCustomKeys()": {
          "enum": [],
          "type": [
            "genDefaultKeys()"
          ],
          "title": "props.theme==='custom'genCustomKeys()",
          "option": true,
          "valueType": "text"
        },
        "constonAnimationEnd=()=>emit(props.show'show'": {
          "enum": [],
          "type": [
            "'hide');"
          ],
          "title": "constonAnimationEnd=()=>emit(props.show'show'",
          "option": true,
          "valueType": "text"
        },
        "emit('update": {
          "enum": [],
          "type": [
            "modelValue' value + text);"
          ],
          "title": "emit('update",
          "option": false,
          "valueType": "text"
        },
        "constkeySlots": {
          "enum": [],
          "type": [
            "Record<string Slot ",
            " undefined> = {};"
          ],
          "title": "constkeySlots",
          "option": false,
          "valueType": "text"
        },
        "v-slots={{delete": {
          "enum": [],
          "type": [
            "slots.delete }}"
          ],
          "title": "v-slots={{delete",
          "option": false,
          "valueType": "text"
        },
        "emit(value'show'": {
          "enum": [],
          "type": [
            "'hide');"
          ],
          "title": "emit(value'show'",
          "option": true,
          "valueType": "text"
        },
        "useClickAway(root,onBlur,{eventName": {
          "enum": [],
          "type": [
            "'touchstart' });"
          ],
          "title": "useClickAway(root,onBlur,{eventName",
          "option": false,
          "valueType": "text"
        },
        "<Transitionname={props.transition'van-slide-up'": {
          "enum": [],
          "type": [
            "''}>"
          ],
          "title": "<Transitionname={props.transition'van-slide-up'",
          "option": true,
          "valueType": "text"
        },
        "unfit": {
          "enum": [],
          "type": [
            "!props.safeAreaInsetBottom"
          ],
          "title": "unfit",
          "option": false,
          "valueType": "text"
        },
        "'with-title'": {
          "enum": [],
          "type": [
            "!!Title"
          ],
          "title": "'with-title'",
          "option": false,
          "valueType": "text"
        }
      }
    },
    "events": {
      "type": "object",
      "title": "交互行为",
      "description": "组件动作事件",
      "required": [
        "constgenDefaultKeys=()",
        "constonPress=(text"
      ],
      "properties": {
        "constgenDefaultKeys=()": {
          "value": "KeyConfig[] => [",
          "title": "constgenDefaultKeys=()",
          "description": "constgenDefaultKeys=()",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonPress=(text": {
          "value": "string type: KeyType) => {",
          "title": "constonPress=(text",
          "description": "constonPress=(text",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        }
      }
    },
    "pkgId": {
      "title": "vant",
      "description": "组件库包名称"
    },
    "version": {
      "title": "4.0.2",
      "description": "组件库包版本"
    },
    "protoProps": {
      "type": "object",
      "title": "原生属性",
      "required": [],
      "properties": {
        "id": {
          "type": "string",
          "title": "唯一id",
          "valueType": "text",
          "description": "元素唯一标识"
        },
        "ref": {
          "type": "string",
          "title": "ref",
          "valueType": "text",
          "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
        },
        "style": {
          "type": "object",
          "title": "内联样式",
          "valueType": "object",
          "description": "组件内联样式(JSON格式)"
        },
        "className": {
          "type": "string",
          "title": "样式名",
          "valueType": "textarea",
          "description": "组件样式名"
        }
      },
      "description": "原生属性"
    },
    "lastModifyTime": {
      "type": "string",
      "title": "最后一次修改时间",
      "description": "2022-12-13"
    }
  },
  "lastModifyTime": "2022-12-13",
  "version": "4.0.2",
  "required": [
    null
  ],
  "description": "虚拟数字键盘，可以配合密码输入框组件或自定义的输入框组件使用。",
  "groupKey": "Form Components",
  "groupName": "表单组件",
  "isHidden": 0,
  "framework": "vue"
}