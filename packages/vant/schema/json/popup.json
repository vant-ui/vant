{
  "tagName": "Popup",
  "pkgId": "vant",
  "type": "object",
  "properties": {
    "name": {
      "title": "Popup 弹出层",
      "description": "组件名称"
    },
    "tagName": {
      "title": "Popup",
      "description": "组件标签"
    },
    "advanceProps": {
      "title": "高级属性",
      "description": "高级属性",
      "type": "object",
      "properties": {
        "condition": {
          "title": "是否渲染",
          "description": "是否渲染",
          "type": "string",
          "valueType": "switch",
          "default": true
        }
      }
    },
    "hasChild": {
      "type": "boolean",
      "const": true,
      "title": "支持调用子组件",
      "description": "true:支持;false:不支持"
    },
    "props": {
      "type": "object",
      "title": "组件属性",
      "description": "组件属性",
      "required": [
        "round",
        "position",
        "closeIcon",
        "closeable",
        "transition",
        "iconPrefix",
        "closeOnPopstate",
        "closeIconPosition",
        "safeAreaInsetTop",
        "safeAreaInsetBottom",
        "inheritAttrs",
        "props",
        "emits",
        "'update",
        "letopened",
        "letshouldReopen",
        "conststyle",
        "zIndex",
        "",
        "emit('update",
        "v-slots={{default",
        "[position]",
        "'van-safe-area-top'",
        "'van-safe-area-bottom'"
      ],
      "properties": {
        "round": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "round",
          "option": false,
          "valueType": "switch"
        },
        "position": {
          "enum": [],
          "type": [
            "makeStringProp<PopupPosition>('center')"
          ],
          "title": "position",
          "option": false,
          "valueType": "text"
        },
        "closeIcon": {
          "enum": [],
          "type": [
            "makeStringProp('cross')"
          ],
          "title": "closeIcon",
          "option": false,
          "valueType": "text"
        },
        "closeable": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "closeable",
          "option": false,
          "valueType": "switch"
        },
        "transition": {
          "enum": [],
          "type": [
            "String"
          ],
          "title": "transition",
          "option": false,
          "valueType": "text"
        },
        "iconPrefix": {
          "enum": [],
          "type": [
            "String"
          ],
          "title": "iconPrefix",
          "option": false,
          "valueType": "text"
        },
        "closeOnPopstate": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "closeOnPopstate",
          "option": false,
          "valueType": "switch"
        },
        "closeIconPosition": {
          "enum": [],
          "type": [
            "makeStringProp<PopupCloseIconPosition>('top-right')"
          ],
          "title": "closeIconPosition",
          "option": false,
          "valueType": "text"
        },
        "safeAreaInsetTop": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "safeAreaInsetTop",
          "option": false,
          "valueType": "switch"
        },
        "safeAreaInsetBottom": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "safeAreaInsetBottom",
          "option": false,
          "valueType": "switch"
        },
        "inheritAttrs": {
          "enum": [],
          "type": [
            "false"
          ],
          "title": "inheritAttrs",
          "option": false,
          "valueType": "text"
        },
        "props": {
          "enum": [],
          "type": [
            "popupProps"
          ],
          "title": "props",
          "option": false,
          "valueType": "text"
        },
        "emits": {
          "enum": [],
          "type": [
            "["
          ],
          "title": "emits",
          "option": false,
          "valueType": "text"
        },
        "'update": {
          "enum": [],
          "type": [
            "show'"
          ],
          "title": "'update",
          "option": false,
          "valueType": "text"
        },
        "letopened": {
          "enum": [],
          "type": [
            "boolean;"
          ],
          "title": "letopened",
          "option": false,
          "valueType": "text"
        },
        "letshouldReopen": {
          "enum": [],
          "type": [
            "boolean;"
          ],
          "title": "letshouldReopen",
          "option": false,
          "valueType": "text"
        },
        "conststyle": {
          "enum": [],
          "type": [
            "CSSProperties = {"
          ],
          "title": "conststyle",
          "option": false,
          "valueType": "text"
        },
        "zIndex": {
          "enum": [],
          "type": [
            "zIndex.value"
          ],
          "title": "zIndex",
          "option": false,
          "valueType": "text"
        },
        "": {
          "enum": [],
          "type": [
            "'transitionDuration';"
          ],
          "title": "",
          "option": false,
          "valueType": "text"
        },
        "props.zIndex!==undefined+props.zIndex": {
          "enum": [],
          "type": [
            "useGlobalZIndex();"
          ],
          "title": "props.zIndex!==undefined+props.zIndex",
          "option": true,
          "valueType": "text"
        },
        "emit('update": {
          "enum": [],
          "type": [
            "show' true);"
          ],
          "title": "emit('update",
          "option": false,
          "valueType": "text"
        },
        "v-slots={{default": {
          "enum": [],
          "type": [
            "renderPopup }}"
          ],
          "title": "v-slots={{default",
          "option": false,
          "valueType": "text"
        },
        "role={props.closeOnClickOverlay'button'": {
          "enum": [],
          "type": [
            "undefined}"
          ],
          "title": "role={props.closeOnClickOverlay'button'",
          "option": true,
          "valueType": "text"
        },
        "tabindex={props.closeOnClickOverlay0": {
          "enum": [],
          "type": [
            "undefined}"
          ],
          "title": "tabindex={props.closeOnClickOverlay0",
          "option": true,
          "valueType": "text"
        },
        "[position]": {
          "enum": [],
          "type": [
            "position"
          ],
          "title": "[position]",
          "option": false,
          "valueType": "text"
        },
        "'van-safe-area-top'": {
          "enum": [],
          "type": [
            "safeAreaInsetTop"
          ],
          "title": "'van-safe-area-top'",
          "option": false,
          "valueType": "text"
        },
        "'van-safe-area-bottom'": {
          "enum": [],
          "type": [
            "safeAreaInsetBottom"
          ],
          "title": "'van-safe-area-bottom'",
          "option": false,
          "valueType": "text"
        },
        "position==='center''van-fade'": {
          "enum": [],
          "type": [
            "`van-popup-slide-${position}`;"
          ],
          "title": "position==='center''van-fade'",
          "option": true,
          "valueType": "text"
        }
      }
    },
    "events": {
      "type": "object",
      "title": "交互行为",
      "description": "组件动作事件",
      "required": [
        "constonClickOverlay=(event",
        "constonClickCloseIcon=(event",
        "constonKeydown=(event"
      ],
      "properties": {
        "constonClickOverlay=(event": {
          "value": "MouseEvent) => {",
          "title": "constonClickOverlay=(event",
          "description": "constonClickOverlay=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonClickCloseIcon=(event": {
          "value": "MouseEvent) => {",
          "title": "constonClickCloseIcon=(event",
          "description": "constonClickCloseIcon=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonKeydown=(event": {
          "value": "KeyboardEvent) => emit('keydown' event);",
          "title": "constonKeydown=(event",
          "description": "constonKeydown=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        }
      }
    },
    "pkgId": {
      "title": "vant",
      "description": "组件库包名称"
    },
    "version": {
      "title": "4.0.2",
      "description": "组件库包版本"
    },
    "protoProps": {
      "type": "object",
      "title": "原生属性",
      "required": [],
      "properties": {
        "id": {
          "type": "string",
          "title": "唯一id",
          "valueType": "text",
          "description": "元素唯一标识"
        },
        "ref": {
          "type": "string",
          "title": "ref",
          "valueType": "text",
          "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
        },
        "style": {
          "type": "object",
          "title": "内联样式",
          "valueType": "object",
          "description": "组件内联样式(JSON格式)"
        },
        "className": {
          "type": "string",
          "title": "样式名",
          "valueType": "textarea",
          "description": "组件样式名"
        }
      },
      "description": "原生属性"
    },
    "lastModifyTime": {
      "type": "string",
      "title": "最后一次修改时间",
      "description": "2022-12-13"
    }
  },
  "lastModifyTime": "2022-12-13",
  "version": "4.0.2",
  "required": [
    null
  ],
  "description": "弹出层容器，用于展示弹窗、信息提示等内容，支持多个弹出层叠加展示。",
  "groupKey": "Basic Components",
  "groupName": "基础组件",
  "isHidden": 0,
  "framework": "vue"
}