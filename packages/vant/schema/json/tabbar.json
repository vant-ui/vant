{
  "tagName": "Tabbar",
  "pkgId": "vant",
  "type": "object",
  "properties": {
    "name": {
      "title": "Tabbar 标签栏",
      "description": "组件名称"
    },
    "tagName": {
      "title": "Tabbar",
      "description": "组件标签"
    },
    "advanceProps": {
      "title": "高级属性",
      "description": "高级属性",
      "type": "object",
      "properties": {
        "condition": {
          "title": "是否渲染",
          "description": "是否渲染",
          "type": "string",
          "valueType": "switch",
          "default": true
        }
      }
    },
    "hasChild": {
      "type": "boolean",
      "const": true,
      "title": "支持调用子组件",
      "description": "true:支持;false:不支持"
    },
    "props": {
      "type": "object",
      "title": "组件属性",
      "description": "组件属性",
      "required": [
        "route",
        "fixed",
        "border",
        "zIndex",
        "placeholder",
        "activeColor",
        "beforeChange",
        "inactiveColor",
        "modelValue",
        "safeAreaInsetBottom",
        "type",
        "default",
        "props",
        "exportconstTABBAR_KEY",
        "emits",
        "[BORDER_TOP_BOTTOM]",
        "'van-safe-area-bottom'",
        "args",
        "emit('update"
      ],
      "properties": {
        "route": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "route",
          "option": false,
          "valueType": "switch"
        },
        "fixed": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "fixed",
          "option": false,
          "valueType": "text"
        },
        "border": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "border",
          "option": false,
          "valueType": "text"
        },
        "zIndex": {
          "enum": [],
          "type": [
            "numericProp"
          ],
          "title": "zIndex",
          "option": false,
          "valueType": "text"
        },
        "placeholder": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "placeholder",
          "option": false,
          "valueType": "switch"
        },
        "activeColor": {
          "enum": [],
          "type": [
            "String"
          ],
          "title": "activeColor",
          "option": false,
          "valueType": "text"
        },
        "beforeChange": {
          "enum": [],
          "type": [
            "Function as PropType<Interceptor>"
          ],
          "title": "beforeChange",
          "option": false,
          "valueType": "text"
        },
        "inactiveColor": {
          "enum": [],
          "type": [
            "String"
          ],
          "title": "inactiveColor",
          "option": false,
          "valueType": "text"
        },
        "modelValue": {
          "enum": [],
          "type": [
            "makeNumericProp(0)"
          ],
          "title": "modelValue",
          "option": false,
          "valueType": "text"
        },
        "safeAreaInsetBottom": {
          "enum": [],
          "type": [
            "{"
          ],
          "title": "safeAreaInsetBottom",
          "option": false,
          "valueType": "text"
        },
        "type": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "type",
          "option": false,
          "valueType": "switch"
        },
        "default": {
          "enum": [],
          "type": [
            "null"
          ],
          "title": "default",
          "option": false,
          "valueType": "text"
        },
        "props": {
          "enum": [],
          "type": [
            "tabbarProps"
          ],
          "title": "props",
          "option": false,
          "valueType": "text"
        },
        "exportconstTABBAR_KEY": {
          "enum": [],
          "type": [
            "InjectionKey<TabbarProvide> = Symbol(name);"
          ],
          "title": "exportconstTABBAR_KEY",
          "option": false,
          "valueType": "text"
        },
        "emits": {
          "enum": [],
          "type": [
            "['change' 'update:modelValue']"
          ],
          "title": "emits",
          "option": false,
          "valueType": "text"
        },
        "[BORDER_TOP_BOTTOM]": {
          "enum": [],
          "type": [
            "border"
          ],
          "title": "[BORDER_TOP_BOTTOM]",
          "option": false,
          "valueType": "text"
        },
        "'van-safe-area-bottom'": {
          "enum": [],
          "type": [
            "enableSafeArea()"
          ],
          "title": "'van-safe-area-bottom'",
          "option": false,
          "valueType": "text"
        },
        "args": {
          "enum": [],
          "type": [
            "[active]"
          ],
          "title": "args",
          "option": false,
          "valueType": "text"
        },
        "emit('update": {
          "enum": [],
          "type": [
            "modelValue' active);"
          ],
          "title": "emit('update",
          "option": false,
          "valueType": "text"
        }
      }
    },
    "events": {
      "type": "object",
      "title": "交互行为",
      "description": "组件动作事件",
      "required": [
        "setActive",
        "constsetActive=(active"
      ],
      "properties": {
        "setActive": {
          "value": "(active: Numeric afterChange: () => void) => void;",
          "title": "setActive",
          "description": "setActive",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constsetActive=(active": {
          "value": "Numeric afterChange: () => void) => {",
          "title": "constsetActive=(active",
          "description": "constsetActive=(active",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        }
      }
    },
    "pkgId": {
      "title": "vant",
      "description": "组件库包名称"
    },
    "version": {
      "title": "4.0.2",
      "description": "组件库包版本"
    },
    "protoProps": {
      "type": "object",
      "title": "原生属性",
      "required": [],
      "properties": {
        "id": {
          "type": "string",
          "title": "唯一id",
          "valueType": "text",
          "description": "元素唯一标识"
        },
        "ref": {
          "type": "string",
          "title": "ref",
          "valueType": "text",
          "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
        },
        "style": {
          "type": "object",
          "title": "内联样式",
          "valueType": "object",
          "description": "组件内联样式(JSON格式)"
        },
        "className": {
          "type": "string",
          "title": "样式名",
          "valueType": "textarea",
          "description": "组件样式名"
        }
      },
      "description": "原生属性"
    },
    "lastModifyTime": {
      "type": "string",
      "title": "最后一次修改时间",
      "description": "2022-12-13"
    }
  },
  "lastModifyTime": "2022-12-13",
  "version": "4.0.2",
  "required": [
    null
  ],
  "description": "底部导航栏，用于在不同页面之间进行切换。",
  "groupKey": "Navigation Components",
  "groupName": "导航组件",
  "isHidden": 0,
  "framework": "vue"
}