{
  "tagName": "Swipe",
  "pkgId": "vant",
  "type": "object",
  "properties": {
    "name": {
      "title": "Swipe 轮播",
      "description": "组件名称"
    },
    "tagName": {
      "title": "Swipe",
      "description": "组件标签"
    },
    "advanceProps": {
      "title": "高级属性",
      "description": "高级属性",
      "type": "object",
      "properties": {
        "condition": {
          "title": "是否渲染",
          "description": "是否渲染",
          "type": "string",
          "valueType": "switch",
          "default": true
        }
      }
    },
    "hasChild": {
      "type": "boolean",
      "const": true,
      "title": "支持调用子组件",
      "description": "true:支持;false:不支持"
    },
    "props": {
      "type": "object",
      "title": "组件属性",
      "description": "组件属性",
      "required": [
        "loop",
        "width",
        "height",
        "vertical",
        "autoplay",
        "duration",
        "touchable",
        "lazyRender",
        "initialSwipe",
        "indicatorColor",
        "showIndicators",
        "stopPropagation",
        "exportconstSWIPE_KEY",
        "props",
        "emits",
        "rect",
        "active",
        "swiping",
        "",
        "conststyle",
        "transitionDuration",
        "transform",
        "}",
        "pace",
        "emitChange",
        "move({pace",
        "letautoplayTimer",
        "//issue",
        "lettouchStartTime",
        "move({offset",
        "backgroundColor",
        "total",
        "<divclass={bem('indicators',{vertical",
        "target",
        "class={bem('track',{vertical"
      ],
      "properties": {
        "loop": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "loop",
          "option": false,
          "valueType": "text"
        },
        "width": {
          "enum": [],
          "type": [
            "root.value!.offsetWidth"
          ],
          "title": "width",
          "option": false,
          "valueType": "text"
        },
        "height": {
          "enum": [],
          "type": [
            "root.value!.offsetHeight"
          ],
          "title": "height",
          "option": false,
          "valueType": "text"
        },
        "vertical": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "vertical",
          "option": false,
          "valueType": "switch"
        },
        "autoplay": {
          "enum": [],
          "type": [
            "makeNumericProp(0)"
          ],
          "title": "autoplay",
          "option": false,
          "valueType": "text"
        },
        "duration": {
          "enum": [],
          "type": [
            "makeNumericProp(500)"
          ],
          "title": "duration",
          "option": false,
          "valueType": "text"
        },
        "touchable": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "touchable",
          "option": false,
          "valueType": "text"
        },
        "lazyRender": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "lazyRender",
          "option": false,
          "valueType": "switch"
        },
        "initialSwipe": {
          "enum": [],
          "type": [
            "makeNumericProp(0)"
          ],
          "title": "initialSwipe",
          "option": false,
          "valueType": "text"
        },
        "indicatorColor": {
          "enum": [],
          "type": [
            "String"
          ],
          "title": "indicatorColor",
          "option": false,
          "valueType": "text"
        },
        "showIndicators": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "showIndicators",
          "option": false,
          "valueType": "text"
        },
        "stopPropagation": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "stopPropagation",
          "option": false,
          "valueType": "text"
        },
        "exportconstSWIPE_KEY": {
          "enum": [],
          "type": [
            "InjectionKey<SwipeProvide> = Symbol(name);"
          ],
          "title": "exportconstSWIPE_KEY",
          "option": false,
          "valueType": "text"
        },
        "props": {
          "enum": [],
          "type": [
            "swipeProps"
          ],
          "title": "props",
          "option": false,
          "valueType": "text"
        },
        "emits": {
          "enum": [],
          "type": [
            "['change']"
          ],
          "title": "emits",
          "option": false,
          "valueType": "text"
        },
        "rect": {
          "enum": [],
          "type": [
            "null"
          ],
          "title": "rect",
          "option": false,
          "valueType": "text"
        },
        "offset": {
          "enum": [],
          "type": [
            "number"
          ],
          "title": "offset",
          "option": true,
          "valueType": "digit"
        },
        "active": {
          "enum": [],
          "type": [
            "activeIndicator.value"
          ],
          "title": "active",
          "option": false,
          "valueType": "text"
        },
        "swiping": {
          "enum": [],
          "type": [
            "false"
          ],
          "title": "swiping",
          "option": false,
          "valueType": "text"
        },
        "constsize=computed(()=>state[props.vertical'height'": {
          "enum": [],
          "type": [
            "'width']);"
          ],
          "title": "constsize=computed(()=>state[props.vertical'height'",
          "option": true,
          "valueType": "text"
        },
        "props.verticaltouch.deltaY.value": {
          "enum": [],
          "type": [
            "touch.deltaX.value"
          ],
          "title": "props.verticaltouch.deltaY.value",
          "option": true,
          "valueType": "text"
        },
        "constbase=props.verticalstate.rect.height": {
          "enum": [],
          "type": [
            "state.rect.width;"
          ],
          "title": "constbase=props.verticalstate.rect.height",
          "option": true,
          "valueType": "text"
        },
        "": {
          "enum": [],
          "type": [
            "undefined;"
          ],
          "title": "",
          "option": false,
          "valueType": "text"
        },
        "constexpect=props.vertical'vertical'": {
          "enum": [],
          "type": [
            "'horizontal';"
          ],
          "title": "constexpect=props.vertical'vertical'",
          "option": true,
          "valueType": "text"
        },
        "conststyle": {
          "enum": [],
          "type": [
            "CSSProperties = {"
          ],
          "title": "conststyle",
          "option": false,
          "valueType": "text"
        },
        "transitionDuration": {
          "enum": [],
          "type": [
            "`${state.swiping ? 0 : props.duration}ms`"
          ],
          "title": "transitionDuration",
          "option": false,
          "valueType": "text"
        },
        "transform": {
          "enum": [],
          "type": [
            "`translate${props.vertical ? 'Y' : 'X'}(${state.offset}px)`"
          ],
          "title": "transform",
          "option": false,
          "valueType": "text"
        },
        "constmainAxis=props.vertical'height'": {
          "enum": [],
          "type": [
            "'width';"
          ],
          "title": "constmainAxis=props.vertical'height'",
          "option": true,
          "valueType": "text"
        },
        "constcrossAxis=props.vertical'width'": {
          "enum": [],
          "type": [
            "'height';"
          ],
          "title": "constcrossAxis=props.vertical'width'",
          "option": true,
          "valueType": "text"
        },
        "style[crossAxis]=props[crossAxis]`${props[crossAxis]}px`": {
          "enum": [],
          "type": [
            "'';"
          ],
          "title": "style[crossAxis]=props[crossAxis]`${props[crossAxis]}px`",
          "option": true,
          "valueType": "text"
        },
        "}": {
          "enum": [],
          "type": [
            "{"
          ],
          "title": "}",
          "option": false,
          "valueType": "text"
        },
        "pace": {
          "enum": [],
          "type": [
            "targetIndex - state.active"
          ],
          "title": "pace",
          "option": false,
          "valueType": "text"
        },
        "emitChange": {
          "enum": [],
          "type": [
            "true"
          ],
          "title": "emitChange",
          "option": false,
          "valueType": "text"
        },
        "children[0].setOffset(outRightBoundtrackSize.value": {
          "enum": [],
          "type": [
            "0);"
          ],
          "title": "children[0].setOffset(outRightBoundtrackSize.value",
          "option": true,
          "valueType": "text"
        },
        "outLeftBound-trackSize.value": {
          "enum": [],
          "type": [
            "0"
          ],
          "title": "outLeftBound-trackSize.value",
          "option": true,
          "valueType": "text"
        },
        "move({pace": {
          "enum": [],
          "type": [
            "0 });"
          ],
          "title": "move({pace",
          "option": false,
          "valueType": "text"
        },
        "letautoplayTimer": {
          "enum": [],
          "type": [
            "ReturnType<typeof setTimeout>;"
          ],
          "title": "letautoplayTimer",
          "option": false,
          "valueType": "text"
        },
        "//issue": {
          "enum": [],
          "type": [
            "https://github.com/vant-ui/vant/issues/10052"
          ],
          "title": "//issue",
          "option": false,
          "valueType": "text"
        },
        "lettouchStartTime": {
          "enum": [],
          "type": [
            "number"
          ],
          "title": "lettouchStartTime",
          "option": false,
          "valueType": "digit"
        },
        "move({offset": {
          "enum": [],
          "type": [
            "delta.value });"
          ],
          "title": "move({offset",
          "option": false,
          "valueType": "text"
        },
        "pace=offset>0(delta.value>0-1": {
          "enum": [],
          "type": [
            "1) : 0;"
          ],
          "title": "pace=offset>0(delta.value>0-1",
          "option": true,
          "valueType": "text"
        },
        "pace=-Math[delta.value>0'ceil'": {
          "enum": [],
          "type": [
            "'floor']("
          ],
          "title": "pace=-Math[delta.value>0'ceil'",
          "option": true,
          "valueType": "text"
        },
        "targetIndex=state.active===00": {
          "enum": [],
          "type": [
            "index;"
          ],
          "title": "targetIndex=state.active===00",
          "option": true,
          "valueType": "text"
        },
        "backgroundColor": {
          "enum": [],
          "type": [
            "props.indicatorColor"
          ],
          "title": "backgroundColor",
          "option": false,
          "valueType": "text"
        },
        "total": {
          "enum": [],
          "type": [
            "count.value"
          ],
          "title": "total",
          "option": false,
          "valueType": "text"
        },
        "<divclass={bem('indicators',{vertical": {
          "enum": [],
          "type": [
            "props.vertical })}>"
          ],
          "title": "<divclass={bem('indicators',{vertical",
          "option": false,
          "valueType": "text"
        },
        "target": {
          "enum": [],
          "type": [
            "track"
          ],
          "title": "target",
          "option": false,
          "valueType": "text"
        },
        "class={bem('track',{vertical": {
          "enum": [],
          "type": [
            "props.vertical })}"
          ],
          "title": "class={bem('track',{vertical",
          "option": false,
          "valueType": "text"
        }
      }
    },
    "events": {
      "type": "object",
      "title": "交互行为",
      "description": "组件动作事件",
      "required": [
        "constgetTargetActive=(pace",
        "constgetTargetOffset=(targetActive",
        "constonTouchStart=(event",
        "constonTouchMove=(event",
        "constswipeTo=(index",
        "constrenderDot=(_"
      ],
      "properties": {
        "constgetTargetActive=(pace": {
          "value": "number) => {",
          "title": "constgetTargetActive=(pace",
          "description": "constgetTargetActive=(pace",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constgetTargetOffset=(targetActive": {
          "value": "number offset = 0) => {",
          "title": "constgetTargetOffset=(targetActive",
          "description": "constgetTargetOffset=(targetActive",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonTouchStart=(event": {
          "value": "TouchEvent) => {",
          "title": "constonTouchStart=(event",
          "description": "constonTouchStart=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonTouchMove=(event": {
          "value": "TouchEvent) => {",
          "title": "constonTouchMove=(event",
          "description": "constonTouchMove=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constswipeTo=(index": {
          "value": "number options: SwipeToOptions = {}) => {",
          "title": "constswipeTo=(index",
          "description": "constswipeTo=(index",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constrenderDot=(_": {
          "value": "number index: number) => {",
          "title": "constrenderDot=(_",
          "description": "constrenderDot=(_",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        }
      }
    },
    "pkgId": {
      "title": "vant",
      "description": "组件库包名称"
    },
    "version": {
      "title": "4.0.2",
      "description": "组件库包版本"
    },
    "protoProps": {
      "type": "object",
      "title": "原生属性",
      "required": [],
      "properties": {
        "id": {
          "type": "string",
          "title": "唯一id",
          "valueType": "text",
          "description": "元素唯一标识"
        },
        "ref": {
          "type": "string",
          "title": "ref",
          "valueType": "text",
          "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
        },
        "style": {
          "type": "object",
          "title": "内联样式",
          "valueType": "object",
          "description": "组件内联样式(JSON格式)"
        },
        "className": {
          "type": "string",
          "title": "样式名",
          "valueType": "textarea",
          "description": "组件样式名"
        }
      },
      "description": "原生属性"
    },
    "lastModifyTime": {
      "type": "string",
      "title": "最后一次修改时间",
      "description": "2022-12-13"
    }
  },
  "lastModifyTime": "2022-12-13",
  "version": "4.0.2",
  "required": [
    null
  ],
  "description": "用于循环播放一组图片或内容。",
  "groupKey": "Display Components",
  "groupName": "展示组件",
  "isHidden": 0,
  "framework": "vue"
}