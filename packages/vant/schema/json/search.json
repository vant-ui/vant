{
  "tagName": "Search",
  "pkgId": "vant",
  "type": "object",
  "properties": {
    "name": {
      "title": "Search 搜索",
      "description": "组件名称"
    },
    "tagName": {
      "title": "Search",
      "description": "组件标签"
    },
    "advanceProps": {
      "title": "高级属性",
      "description": "高级属性",
      "type": "object",
      "properties": {
        "condition": {
          "title": "是否渲染",
          "description": "是否渲染",
          "type": "string",
          "valueType": "switch",
          "default": true
        }
      }
    },
    "hasChild": {
      "type": "boolean",
      "const": true,
      "title": "支持调用子组件",
      "description": "true:支持;false:不支持"
    },
    "props": {
      "type": "object",
      "title": "组件属性",
      "description": "组件属性",
      "required": [
        "label",
        "shape",
        "leftIcon",
        "clearable",
        "actionText",
        "background",
        "showAction",
        "props",
        "emits",
        "'update",
        "emit('update",
        "id",
        "onUpdate",
        "class={bem({'show-action'",
        "style={{background"
      ],
      "properties": {
        "label": {
          "enum": [],
          "type": [
            "String"
          ],
          "title": "label",
          "option": false,
          "valueType": "text"
        },
        "shape": {
          "enum": [],
          "type": [
            "makeStringProp<SearchShape>('square')"
          ],
          "title": "shape",
          "option": false,
          "valueType": "text"
        },
        "leftIcon": {
          "enum": [],
          "type": [
            "makeStringProp('search')"
          ],
          "title": "leftIcon",
          "option": false,
          "valueType": "text"
        },
        "clearable": {
          "enum": [],
          "type": [
            "truthProp"
          ],
          "title": "clearable",
          "option": false,
          "valueType": "text"
        },
        "actionText": {
          "enum": [],
          "type": [
            "String"
          ],
          "title": "actionText",
          "option": false,
          "valueType": "text"
        },
        "background": {
          "enum": [],
          "type": [
            "String"
          ],
          "title": "background",
          "option": false,
          "valueType": "text"
        },
        "showAction": {
          "enum": [],
          "type": [
            "boolean"
          ],
          "title": "showAction",
          "option": false,
          "valueType": "switch"
        },
        "props": {
          "enum": [],
          "type": [
            "searchProps"
          ],
          "title": "props",
          "option": false,
          "valueType": "text"
        },
        "emits": {
          "enum": [],
          "type": [
            "["
          ],
          "title": "emits",
          "option": false,
          "valueType": "text"
        },
        "'update": {
          "enum": [],
          "type": [
            "modelValue'"
          ],
          "title": "'update",
          "option": false,
          "valueType": "text"
        },
        "emit('update": {
          "enum": [],
          "type": [
            "modelValue' '');"
          ],
          "title": "emit('update",
          "option": false,
          "valueType": "text"
        },
        "{slots.labelslots.label()": {
          "enum": [],
          "type": [
            "props.label}"
          ],
          "title": "{slots.labelslots.label()",
          "option": true,
          "valueType": "text"
        },
        "{slots.actionslots.action()": {
          "enum": [],
          "type": [
            "text}"
          ],
          "title": "{slots.actionslots.action()",
          "option": true,
          "valueType": "text"
        },
        "id": {
          "enum": [],
          "type": [
            "getInputId()"
          ],
          "title": "id",
          "option": false,
          "valueType": "text"
        },
        "onUpdate": {
          "enum": [],
          "type": [
            "modelValue={onInput}"
          ],
          "title": "onUpdate",
          "option": false,
          "valueType": "text"
        },
        "class={bem({'show-action'": {
          "enum": [],
          "type": [
            "props.showAction })}"
          ],
          "title": "class={bem({'show-action'",
          "option": false,
          "valueType": "text"
        },
        "style={{background": {
          "enum": [],
          "type": [
            "props.background }}"
          ],
          "title": "style={{background",
          "option": false,
          "valueType": "text"
        }
      }
    },
    "events": {
      "type": "object",
      "title": "交互行为",
      "description": "组件动作事件",
      "required": [
        "constonKeypress=(event",
        "constonBlur=(event",
        "constonFocus=(event",
        "constonClear=(event",
        "constonClickInput=(event",
        "constonClickLeftIcon=(event",
        "constonClickRightIcon=(event",
        "constonInput=(value"
      ],
      "properties": {
        "constonKeypress=(event": {
          "value": "KeyboardEvent) => {",
          "title": "constonKeypress=(event",
          "description": "constonKeypress=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonBlur=(event": {
          "value": "Event) => emit('blur' event);",
          "title": "constonBlur=(event",
          "description": "constonBlur=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonFocus=(event": {
          "value": "Event) => emit('focus' event);",
          "title": "constonFocus=(event",
          "description": "constonFocus=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonClear=(event": {
          "value": "MouseEvent) => emit('clear' event);",
          "title": "constonClear=(event",
          "description": "constonClear=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonClickInput=(event": {
          "value": "MouseEvent) => emit('clickInput' event);",
          "title": "constonClickInput=(event",
          "description": "constonClickInput=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonClickLeftIcon=(event": {
          "value": "MouseEvent) => emit('clickLeftIcon' event);",
          "title": "constonClickLeftIcon=(event",
          "description": "constonClickLeftIcon=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonClickRightIcon=(event": {
          "value": "MouseEvent) =>",
          "title": "constonClickRightIcon=(event",
          "description": "constonClickRightIcon=(event",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        },
        "constonInput=(value": {
          "value": "string) => emit('update:modelValue' value);",
          "title": "constonInput=(value",
          "description": "constonInput=(value",
          "type": "object",
          "properties": {
            "name": {
              "description": "函数名",
              "title": "函数名",
              "type": "string"
            }
          }
        }
      }
    },
    "pkgId": {
      "title": "vant",
      "description": "组件库包名称"
    },
    "version": {
      "title": "4.0.2",
      "description": "组件库包版本"
    },
    "protoProps": {
      "type": "object",
      "title": "原生属性",
      "required": [],
      "properties": {
        "id": {
          "type": "string",
          "title": "唯一id",
          "valueType": "text",
          "description": "元素唯一标识"
        },
        "ref": {
          "type": "string",
          "title": "ref",
          "valueType": "text",
          "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
        },
        "style": {
          "type": "object",
          "title": "内联样式",
          "valueType": "object",
          "description": "组件内联样式(JSON格式)"
        },
        "className": {
          "type": "string",
          "title": "样式名",
          "valueType": "textarea",
          "description": "组件样式名"
        }
      },
      "description": "原生属性"
    },
    "lastModifyTime": {
      "type": "string",
      "title": "最后一次修改时间",
      "description": "2022-12-13"
    }
  },
  "lastModifyTime": "2022-12-13",
  "version": "4.0.2",
  "required": [
    null
  ],
  "description": "用于搜索场景的输入框组件。",
  "groupKey": "Form Components",
  "groupName": "表单组件",
  "isHidden": 0,
  "framework": "vue"
}