[
  {
    "tagName": "Badge",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Badge 徽标",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Badge",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "dot",
          "max",
          "tag",
          "color",
          "offset",
          "content",
          "showZero",
          "position",
          "props",
          "conststyle",
          "background",
          "{dot"
        ],
        "properties": {
          "dot": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "dot",
            "option": false,
            "valueType": "switch"
          },
          "max": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "max",
            "option": false,
            "valueType": "text"
          },
          "tag": {
            "enum": [],
            "type": [
              "makeStringProp<keyof HTMLElementTagNameMap>('div')"
            ],
            "title": "tag",
            "option": false,
            "valueType": "text"
          },
          "color": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "color",
            "option": false,
            "valueType": "text"
          },
          "offset": {
            "enum": [],
            "type": [
              "Array as unknown as PropType<[Numeric Numeric]>"
            ],
            "title": "offset",
            "option": false,
            "valueType": "text"
          },
          "content": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "content",
            "option": false,
            "valueType": "text"
          },
          "showZero": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showZero",
            "option": false,
            "valueType": "text"
          },
          "position": {
            "enum": [],
            "type": [
              "makeStringProp<BadgePosition>('top-right')"
            ],
            "title": "position",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "badgeProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "conststyle": {
            "enum": [],
            "type": [
              "CSSProperties = {"
            ],
            "title": "conststyle",
            "option": false,
            "valueType": "text"
          },
          "background": {
            "enum": [],
            "type": [
              "props.color"
            ],
            "title": "background",
            "option": false,
            "valueType": "text"
          },
          "style.right=x.startsWith('-')x.replace('-','')": {
            "enum": [],
            "type": [
              "`-${x}`;"
            ],
            "title": "style.right=x.startsWith('-')x.replace('-','')",
            "option": true,
            "valueType": "text"
          },
          "{dot": {
            "enum": [],
            "type": [
              "props.dot fixed: !!slots.default }"
            ],
            "title": "{dot",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "在右上角展示徽标数字或小红点。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Cell",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Cell 单元格",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Cell",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "props",
          "",
          "constclasses",
          "borderless"
        ],
        "properties": {
          "props": {
            "enum": [],
            "type": [
              "cellProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "{slots.labelslots.label()": {
            "enum": [],
            "type": [
              "props.label}"
            ],
            "title": "{slots.labelslots.label()",
            "option": true,
            "valueType": "text"
          },
          "{slots.titleslots.title()": {
            "enum": [],
            "type": [
              "<span>{props.title}</span>}"
            ],
            "title": "{slots.titleslots.title()",
            "option": true,
            "valueType": "text"
          },
          "{slotslot()": {
            "enum": [],
            "type": [
              "<span>{props.value}</span>}"
            ],
            "title": "{slotslot()",
            "option": true,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "'arrow';"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          },
          "constclasses": {
            "enum": [],
            "type": [
              "Record<string boolean ",
              " undefined> = {"
            ],
            "title": "constclasses",
            "option": false,
            "valueType": "text"
          },
          "borderless": {
            "enum": [],
            "type": [
              "!border"
            ],
            "title": "borderless",
            "option": false,
            "valueType": "text"
          },
          "role={clickable'button'": {
            "enum": [],
            "type": [
              "undefined}"
            ],
            "title": "role={clickable'button'",
            "option": true,
            "valueType": "text"
          },
          "tabindex={clickable0": {
            "enum": [],
            "type": [
              "undefined}"
            ],
            "title": "tabindex={clickable0",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "单元格为列表中的单个展示项。",
    "groupKey": "Basic Components",
    "groupName": "基础组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Image",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Image 图片",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Image",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "src",
          "alt",
          "fit",
          "position",
          "round",
          "block",
          "width",
          "height",
          "radius",
          "lazyLoad",
          "iconSize",
          "showError",
          "errorIcon",
          "iconPrefix",
          "showLoading",
          "loadingIcon",
          "props",
          "emits",
          "conststyle",
          "class",
          "style",
          "objectFit",
          "objectPosition",
          "//https",
          "class={bem({round"
        ],
        "properties": {
          "src": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "src",
            "option": false,
            "valueType": "text"
          },
          "alt": {
            "enum": [],
            "type": [
              "props.alt"
            ],
            "title": "alt",
            "option": false,
            "valueType": "text"
          },
          "fit": {
            "enum": [],
            "type": [
              "String as PropType<ImageFit>"
            ],
            "title": "fit",
            "option": false,
            "valueType": "text"
          },
          "position": {
            "enum": [],
            "type": [
              "String as PropType<ImagePosition>"
            ],
            "title": "position",
            "option": false,
            "valueType": "text"
          },
          "round": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "round",
            "option": false,
            "valueType": "switch"
          },
          "block": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "block",
            "option": false,
            "valueType": "switch"
          },
          "width": {
            "enum": [],
            "type": [
              "addUnit(props.width)"
            ],
            "title": "width",
            "option": false,
            "valueType": "text"
          },
          "height": {
            "enum": [],
            "type": [
              "addUnit(props.height)"
            ],
            "title": "height",
            "option": false,
            "valueType": "text"
          },
          "radius": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "radius",
            "option": false,
            "valueType": "text"
          },
          "lazyLoad": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "lazyLoad",
            "option": false,
            "valueType": "switch"
          },
          "iconSize": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "iconSize",
            "option": false,
            "valueType": "text"
          },
          "showError": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showError",
            "option": false,
            "valueType": "text"
          },
          "errorIcon": {
            "enum": [],
            "type": [
              "makeStringProp('photo-fail')"
            ],
            "title": "errorIcon",
            "option": false,
            "valueType": "text"
          },
          "iconPrefix": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "iconPrefix",
            "option": false,
            "valueType": "text"
          },
          "showLoading": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showLoading",
            "option": false,
            "valueType": "text"
          },
          "loadingIcon": {
            "enum": [],
            "type": [
              "makeStringProp('photo')"
            ],
            "title": "loadingIcon",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "imageProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['load' 'error']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "conststyle": {
            "enum": [],
            "type": [
              "CSSProperties = {"
            ],
            "title": "conststyle",
            "option": false,
            "valueType": "text"
          },
          "class": {
            "enum": [],
            "type": [
              "bem('img')"
            ],
            "title": "class",
            "option": false,
            "valueType": "text"
          },
          "style": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "style",
            "option": false,
            "valueType": "text"
          },
          "objectFit": {
            "enum": [],
            "type": [
              "props.fit"
            ],
            "title": "objectFit",
            "option": false,
            "valueType": "text"
          },
          "objectPosition": {
            "enum": [],
            "type": [
              "props.position"
            ],
            "title": "objectPosition",
            "option": false,
            "valueType": "text"
          },
          "//https": {
            "enum": [],
            "type": [
              "//github.com/youzan/vant/issues/11335"
            ],
            "title": "//https",
            "option": false,
            "valueType": "text"
          },
          "class={bem({round": {
            "enum": [],
            "type": [
              "props.round block: props.block })}"
            ],
            "title": "class={bem({round",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constonLoad=(event",
          "constonError=(event",
          "constrenderIcon=(name",
          "constonLazyLoaded=({el}",
          "constonLazyLoadError=({el}"
        ],
        "properties": {
          "constonLoad=(event": {
            "value": "Event) => {",
            "title": "constonLoad=(event",
            "description": "constonLoad=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonError=(event": {
            "value": "Event) => {",
            "title": "constonError=(event",
            "description": "constonError=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderIcon=(name": {
            "value": "string className: unknown slot?: Slot) => {",
            "title": "constrenderIcon=(name",
            "description": "constrenderIcon=(name",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonLazyLoaded=({el}": {
            "value": "{ el: HTMLElement }) => {",
            "title": "constonLazyLoaded=({el}",
            "description": "constonLazyLoaded=({el}",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonLazyLoadError=({el}": {
            "value": "{ el: HTMLElement }) => {",
            "title": "constonLazyLoadError=({el}",
            "description": "constonLazyLoadError=({el}",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "增强版的 img 标签，提供多种图片填充模式，支持图片懒加载、加载中提示、加载失败提示。",
    "groupKey": "Basic Components",
    "groupName": "基础组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Button",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Button 按钮",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Button",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "tag",
          "text",
          "icon",
          "type",
          "size",
          "color",
          "block",
          "plain",
          "round",
          "square",
          "loading",
          "hairline",
          "disabled",
          "iconPrefix",
          "nativeType",
          "loadingSize",
          "loadingText",
          "loadingType",
          "iconPosition",
          "props",
          "emits",
          "conststyle",
          "{[BORDER_SURROUND]"
        ],
        "properties": {
          "tag": {
            "enum": [],
            "type": [
              "makeStringProp<keyof HTMLElementTagNameMap>('button')"
            ],
            "title": "tag",
            "option": false,
            "valueType": "text"
          },
          "text": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "text",
            "option": false,
            "valueType": "text"
          },
          "icon": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "icon",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "makeStringProp<ButtonType>('default')"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "size": {
            "enum": [],
            "type": [
              "makeStringProp<ButtonSize>('normal')"
            ],
            "title": "size",
            "option": false,
            "valueType": "text"
          },
          "color": {
            "enum": [],
            "type": [
              "plain ? color : 'white'"
            ],
            "title": "color",
            "option": false,
            "valueType": "text"
          },
          "block": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "block",
            "option": false,
            "valueType": "switch"
          },
          "plain": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "plain",
            "option": false,
            "valueType": "switch"
          },
          "round": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "round",
            "option": false,
            "valueType": "switch"
          },
          "square": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "square",
            "option": false,
            "valueType": "switch"
          },
          "loading": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "loading",
            "option": false,
            "valueType": "switch"
          },
          "hairline": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "hairline",
            "option": false,
            "valueType": "switch"
          },
          "disabled": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "switch"
          },
          "iconPrefix": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "iconPrefix",
            "option": false,
            "valueType": "text"
          },
          "nativeType": {
            "enum": [],
            "type": [
              "makeStringProp<ButtonNativeType>('button')"
            ],
            "title": "nativeType",
            "option": false,
            "valueType": "text"
          },
          "loadingSize": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "loadingSize",
            "option": false,
            "valueType": "text"
          },
          "loadingText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "loadingText",
            "option": false,
            "valueType": "text"
          },
          "loadingType": {
            "enum": [],
            "type": [
              "String as PropType<LoadingType>"
            ],
            "title": "loadingType",
            "option": false,
            "valueType": "text"
          },
          "iconPosition": {
            "enum": [],
            "type": [
              "makeStringProp<ButtonIconPosition>('left')"
            ],
            "title": "iconPosition",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "buttonProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['click']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "text=slots.defaultslots.default()": {
            "enum": [],
            "type": [
              "props.text;"
            ],
            "title": "text=slots.defaultslots.default()",
            "option": true,
            "valueType": "text"
          },
          "conststyle": {
            "enum": [],
            "type": [
              "CSSProperties = {"
            ],
            "title": "conststyle",
            "option": false,
            "valueType": "text"
          },
          "{[BORDER_SURROUND]": {
            "enum": [],
            "type": [
              "hairline }"
            ],
            "title": "{[BORDER_SURROUND]",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constonClick=(event"
        ],
        "properties": {
          "constonClick=(event": {
            "value": "MouseEvent) => {",
            "title": "constonClick=(event",
            "description": "constonClick=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "按钮用于触发一个操作，如提交表单。",
    "groupKey": "Basic Components",
    "groupName": "基础组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Popup",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Popup 弹出层",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Popup",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "round",
          "position",
          "closeIcon",
          "closeable",
          "transition",
          "iconPrefix",
          "closeOnPopstate",
          "closeIconPosition",
          "safeAreaInsetTop",
          "safeAreaInsetBottom",
          "inheritAttrs",
          "props",
          "emits",
          "'update",
          "letopened",
          "letshouldReopen",
          "conststyle",
          "zIndex",
          "",
          "emit('update",
          "v-slots={{default",
          "[position]",
          "'van-safe-area-top'",
          "'van-safe-area-bottom'"
        ],
        "properties": {
          "round": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "round",
            "option": false,
            "valueType": "switch"
          },
          "position": {
            "enum": [],
            "type": [
              "makeStringProp<PopupPosition>('center')"
            ],
            "title": "position",
            "option": false,
            "valueType": "text"
          },
          "closeIcon": {
            "enum": [],
            "type": [
              "makeStringProp('cross')"
            ],
            "title": "closeIcon",
            "option": false,
            "valueType": "text"
          },
          "closeable": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "closeable",
            "option": false,
            "valueType": "switch"
          },
          "transition": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "transition",
            "option": false,
            "valueType": "text"
          },
          "iconPrefix": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "iconPrefix",
            "option": false,
            "valueType": "text"
          },
          "closeOnPopstate": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "closeOnPopstate",
            "option": false,
            "valueType": "switch"
          },
          "closeIconPosition": {
            "enum": [],
            "type": [
              "makeStringProp<PopupCloseIconPosition>('top-right')"
            ],
            "title": "closeIconPosition",
            "option": false,
            "valueType": "text"
          },
          "safeAreaInsetTop": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "safeAreaInsetTop",
            "option": false,
            "valueType": "switch"
          },
          "safeAreaInsetBottom": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "safeAreaInsetBottom",
            "option": false,
            "valueType": "switch"
          },
          "inheritAttrs": {
            "enum": [],
            "type": [
              "false"
            ],
            "title": "inheritAttrs",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "popupProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "["
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "'update": {
            "enum": [],
            "type": [
              "show'"
            ],
            "title": "'update",
            "option": false,
            "valueType": "text"
          },
          "letopened": {
            "enum": [],
            "type": [
              "boolean;"
            ],
            "title": "letopened",
            "option": false,
            "valueType": "text"
          },
          "letshouldReopen": {
            "enum": [],
            "type": [
              "boolean;"
            ],
            "title": "letshouldReopen",
            "option": false,
            "valueType": "text"
          },
          "conststyle": {
            "enum": [],
            "type": [
              "CSSProperties = {"
            ],
            "title": "conststyle",
            "option": false,
            "valueType": "text"
          },
          "zIndex": {
            "enum": [],
            "type": [
              "zIndex.value"
            ],
            "title": "zIndex",
            "option": false,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "'transitionDuration';"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          },
          "props.zIndex!==undefined+props.zIndex": {
            "enum": [],
            "type": [
              "useGlobalZIndex();"
            ],
            "title": "props.zIndex!==undefined+props.zIndex",
            "option": true,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "show' true);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "v-slots={{default": {
            "enum": [],
            "type": [
              "renderPopup }}"
            ],
            "title": "v-slots={{default",
            "option": false,
            "valueType": "text"
          },
          "role={props.closeOnClickOverlay'button'": {
            "enum": [],
            "type": [
              "undefined}"
            ],
            "title": "role={props.closeOnClickOverlay'button'",
            "option": true,
            "valueType": "text"
          },
          "tabindex={props.closeOnClickOverlay0": {
            "enum": [],
            "type": [
              "undefined}"
            ],
            "title": "tabindex={props.closeOnClickOverlay0",
            "option": true,
            "valueType": "text"
          },
          "[position]": {
            "enum": [],
            "type": [
              "position"
            ],
            "title": "[position]",
            "option": false,
            "valueType": "text"
          },
          "'van-safe-area-top'": {
            "enum": [],
            "type": [
              "safeAreaInsetTop"
            ],
            "title": "'van-safe-area-top'",
            "option": false,
            "valueType": "text"
          },
          "'van-safe-area-bottom'": {
            "enum": [],
            "type": [
              "safeAreaInsetBottom"
            ],
            "title": "'van-safe-area-bottom'",
            "option": false,
            "valueType": "text"
          },
          "position==='center''van-fade'": {
            "enum": [],
            "type": [
              "`van-popup-slide-${position}`;"
            ],
            "title": "position==='center''van-fade'",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constonClickOverlay=(event",
          "constonClickCloseIcon=(event",
          "constonKeydown=(event"
        ],
        "properties": {
          "constonClickOverlay=(event": {
            "value": "MouseEvent) => {",
            "title": "constonClickOverlay=(event",
            "description": "constonClickOverlay=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickCloseIcon=(event": {
            "value": "MouseEvent) => {",
            "title": "constonClickCloseIcon=(event",
            "description": "constonClickCloseIcon=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonKeydown=(event": {
            "value": "KeyboardEvent) => emit('keydown' event);",
            "title": "constonKeydown=(event",
            "description": "constonKeydown=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "弹出层容器，用于展示弹窗、信息提示等内容，支持多个弹出层叠加展示。",
    "groupKey": "Basic Components",
    "groupName": "基础组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Toast",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Toast 轻提示",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Toast",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "icon",
          "show",
          "type",
          "overlay",
          "message",
          "iconSize",
          "duration",
          "position",
          "teleport",
          "wordBreak",
          "className",
          "iconPrefix",
          "transition",
          "loadingType",
          "forbidClick",
          "overlayClass",
          "overlayStyle",
          "closeOnClick",
          "closeOnClickOverlay",
          "props",
          "emits",
          "lettimer",
          ")",
          "{[props.type]",
          "onUpdate"
        ],
        "properties": {
          "icon": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "icon",
            "option": false,
            "valueType": "text"
          },
          "show": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "show",
            "option": false,
            "valueType": "switch"
          },
          "type": {
            "enum": [],
            "type": [
              "makeStringProp<ToastType>('text')"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "overlay": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "overlay",
            "option": false,
            "valueType": "switch"
          },
          "message": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "message",
            "option": false,
            "valueType": "text"
          },
          "iconSize": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "iconSize",
            "option": false,
            "valueType": "text"
          },
          "duration": {
            "enum": [],
            "type": [
              "makeNumberProp(2000)"
            ],
            "title": "duration",
            "option": false,
            "valueType": "text"
          },
          "position": {
            "enum": [],
            "type": [
              "makeStringProp<ToastPosition>('middle')"
            ],
            "title": "position",
            "option": false,
            "valueType": "text"
          },
          "teleport": {
            "enum": [],
            "type": [
              "[String Object] as PropType<TeleportProps['to']>"
            ],
            "title": "teleport",
            "option": false,
            "valueType": "text"
          },
          "wordBreak": {
            "enum": [],
            "type": [
              "String as PropType<ToastWordBreak>"
            ],
            "title": "wordBreak",
            "option": false,
            "valueType": "text"
          },
          "className": {
            "enum": [],
            "type": [
              "unknownProp"
            ],
            "title": "className",
            "option": false,
            "valueType": "text"
          },
          "iconPrefix": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "iconPrefix",
            "option": false,
            "valueType": "text"
          },
          "transition": {
            "enum": [],
            "type": [
              "makeStringProp('van-fade')"
            ],
            "title": "transition",
            "option": false,
            "valueType": "text"
          },
          "loadingType": {
            "enum": [],
            "type": [
              "String as PropType<LoadingType>"
            ],
            "title": "loadingType",
            "option": false,
            "valueType": "text"
          },
          "forbidClick": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "forbidClick",
            "option": false,
            "valueType": "switch"
          },
          "overlayClass": {
            "enum": [],
            "type": [
              "unknownProp"
            ],
            "title": "overlayClass",
            "option": false,
            "valueType": "text"
          },
          "overlayStyle": {
            "enum": [],
            "type": [
              "Object as PropType<CSSProperties>"
            ],
            "title": "overlayStyle",
            "option": false,
            "valueType": "text"
          },
          "closeOnClick": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "closeOnClick",
            "option": false,
            "valueType": "switch"
          },
          "closeOnClickOverlay": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "closeOnClickOverlay",
            "option": false,
            "valueType": "switch"
          },
          "props": {
            "enum": [],
            "type": [
              "toastProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['update:show']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "lettimer": {
            "enum": [],
            "type": [
              "ReturnType<typeof setTimeout>;"
            ],
            "title": "lettimer",
            "option": false,
            "valueType": "text"
          },
          ")": {
            "enum": [],
            "type": [
              "("
            ],
            "title": ")",
            "option": false,
            "valueType": "text"
          },
          "props.wordBreak==='normal''break-normal'": {
            "enum": [],
            "type": [
              "props.wordBreak"
            ],
            "title": "props.wordBreak==='normal''break-normal'",
            "option": true,
            "valueType": "text"
          },
          "{[props.type]": {
            "enum": [],
            "type": [
              "!props.icon }"
            ],
            "title": "{[props.type]",
            "option": false,
            "valueType": "text"
          },
          "onUpdate": {
            "enum": [],
            "type": [
              "show={updateShow}"
            ],
            "title": "onUpdate",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constupdateShow=(show"
        ],
        "properties": {
          "constupdateShow=(show": {
            "value": "boolean) => emit('update:show' show);",
            "title": "constupdateShow=(show",
            "description": "constupdateShow=(show",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "在页面中间弹出黑色半透明提示，用于消息通知、加载提示、操作结果提示等场景。",
    "groupKey": "Basic Components",
    "groupName": "基础组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "CheckboxGroup",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "CheckboxGroup 复选框",
        "description": "组件名称"
      },
      "tagName": {
        "title": "CheckboxGroup",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "max",
          "disabled",
          "iconSize",
          "direction",
          "modelValue",
          "checkedColor",
          "exportconstCHECKBOX_GROUP_KEY",
          "props",
          "emits",
          "options={checked"
        ],
        "properties": {
          "max": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "max",
            "option": false,
            "valueType": "text"
          },
          "disabled": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "switch"
          },
          "iconSize": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "iconSize",
            "option": false,
            "valueType": "text"
          },
          "direction": {
            "enum": [],
            "type": [
              "String as PropType<CheckerDirection>"
            ],
            "title": "direction",
            "option": false,
            "valueType": "text"
          },
          "modelValue": {
            "enum": [],
            "type": [
              "makeArrayProp<unknown>()"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "text"
          },
          "checkedColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "checkedColor",
            "option": false,
            "valueType": "text"
          },
          "exportconstCHECKBOX_GROUP_KEY": {
            "enum": [],
            "type": [
              "InjectionKey<CheckboxGroupProvide> ="
            ],
            "title": "exportconstCHECKBOX_GROUP_KEY",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "checkboxGroupProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['change' 'update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "options={checked": {
            "enum": [],
            "type": [
              "options };"
            ],
            "title": "options={checked",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constupdateValue=(value",
          "consttoggleAll=(options",
          "constcheckedChildren=children.filter((item",
          "constnames=checkedChildren.map((item"
        ],
        "properties": {
          "constupdateValue=(value": {
            "value": "unknown[]) => emit('update:modelValue' value);",
            "title": "constupdateValue=(value",
            "description": "constupdateValue=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "consttoggleAll=(options": {
            "value": "CheckboxGroupToggleAllOptions = {}) => {",
            "title": "consttoggleAll=(options",
            "description": "consttoggleAll=(options",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constcheckedChildren=children.filter((item": {
            "value": "any) => {",
            "title": "constcheckedChildren=children.filter((item",
            "description": "constcheckedChildren=children.filter((item",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constnames=checkedChildren.map((item": {
            "value": "any) => item.name);",
            "title": "constnames=checkedChildren.map((item",
            "description": "constnames=checkedChildren.map((item",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "复选框容器",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Checkbox",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Checkbox 复选框",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Checkbox",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "bindGroup",
          "props",
          "emits",
          "emit('update"
        ],
        "properties": {
          "bindGroup": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "bindGroup",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "checkboxProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['change' 'update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' newValue);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constsetParentValue=(checked"
        ],
        "properties": {
          "constsetParentValue=(checked": {
            "value": "boolean) => {",
            "title": "constsetParentValue=(checked",
            "description": "constsetParentValue=(checked",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "在一组备选项中进行多选。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Calendar",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Calendar 日历",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Calendar",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "show",
          "type",
          "title",
          "color",
          "round",
          "readonly",
          "poppable",
          "maxRange",
          "position",
          "teleport",
          "showMark",
          "showTitle",
          "rowHeight",
          "confirmText",
          "rangePrompt",
          "lazyRender",
          "showConfirm",
          "defaultDate",
          "allowSameDay",
          "showSubtitle",
          "closeOnPopstate",
          "showRangePrompt",
          "confirmDisabledText",
          "closeOnClickOverlay",
          "safeAreaInsetTop",
          "safeAreaInsetBottom",
          "minDate",
          "validator",
          "default",
          "maxDate",
          "firstDayOfWeek",
          "props",
          "emits",
          "'update",
          "date",
          "letbodyHeight",
          "constsubtitle=ref<{text",
          "text",
          "constmonths",
          "",
          "//https",
          "disabledDays",
          "startDay",
          "{'van-safe-area-bottom'",
          "v-slots={{default",
          "onUpdate"
        ],
        "properties": {
          "show": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "show",
            "option": false,
            "valueType": "switch"
          },
          "type": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "title": {
            "enum": [],
            "type": [
              "month.getTitle()"
            ],
            "title": "title",
            "option": false,
            "valueType": "text"
          },
          "color": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "color",
            "option": false,
            "valueType": "text"
          },
          "round": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "round",
            "option": false,
            "valueType": "text"
          },
          "readonly": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "readonly",
            "option": false,
            "valueType": "switch"
          },
          "poppable": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "poppable",
            "option": false,
            "valueType": "text"
          },
          "maxRange": {
            "enum": [],
            "type": [
              "makeNumericProp(null)"
            ],
            "title": "maxRange",
            "option": false,
            "valueType": "text"
          },
          "position": {
            "enum": [],
            "type": [
              "makeStringProp<PopupPosition>('bottom')"
            ],
            "title": "position",
            "option": false,
            "valueType": "text"
          },
          "teleport": {
            "enum": [],
            "type": [
              "[String Object] as PropType<TeleportProps['to']>"
            ],
            "title": "teleport",
            "option": false,
            "valueType": "text"
          },
          "showMark": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showMark",
            "option": false,
            "valueType": "text"
          },
          "showTitle": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showTitle",
            "option": false,
            "valueType": "text"
          },
          "rowHeight": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "rowHeight",
            "option": false,
            "valueType": "text"
          },
          "confirmText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "confirmText",
            "option": false,
            "valueType": "text"
          },
          "rangePrompt": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "rangePrompt",
            "option": false,
            "valueType": "text"
          },
          "lazyRender": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "lazyRender",
            "option": false,
            "valueType": "text"
          },
          "showConfirm": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showConfirm",
            "option": false,
            "valueType": "text"
          },
          "defaultDate": {
            "enum": [],
            "type": [
              "Date"
            ],
            "title": "defaultDate",
            "option": false,
            "valueType": "Date"
          },
          "allowSameDay": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "allowSameDay",
            "option": false,
            "valueType": "switch"
          },
          "showSubtitle": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showSubtitle",
            "option": false,
            "valueType": "text"
          },
          "closeOnPopstate": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "closeOnPopstate",
            "option": false,
            "valueType": "text"
          },
          "showRangePrompt": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showRangePrompt",
            "option": false,
            "valueType": "text"
          },
          "confirmDisabledText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "confirmDisabledText",
            "option": false,
            "valueType": "text"
          },
          "closeOnClickOverlay": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "closeOnClickOverlay",
            "option": false,
            "valueType": "text"
          },
          "safeAreaInsetTop": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "safeAreaInsetTop",
            "option": false,
            "valueType": "switch"
          },
          "safeAreaInsetBottom": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "safeAreaInsetBottom",
            "option": false,
            "valueType": "text"
          },
          "minDate": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "minDate",
            "option": false,
            "valueType": "text"
          },
          "validator": {
            "enum": [],
            "type": [
              "Date"
            ],
            "title": "validator",
            "option": false,
            "valueType": "Date"
          },
          "default": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "maxDate": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "maxDate",
            "option": false,
            "valueType": "text"
          },
          "firstDayOfWeek": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "firstDayOfWeek",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "calendarProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "["
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "'update": {
            "enum": [],
            "type": [
              "show'"
            ],
            "title": "'update",
            "option": false,
            "valueType": "text"
          },
          "date": {
            "enum": [],
            "type": [
              "Date"
            ],
            "title": "date",
            "option": false,
            "valueType": "Date"
          },
          "allowSameDaymaxDate": {
            "enum": [],
            "type": [
              "Date"
            ],
            "title": "allowSameDaymaxDate",
            "option": true,
            "valueType": "Date"
          },
          "allowSameDayminDate": {
            "enum": [],
            "type": [
              "Date"
            ],
            "title": "allowSameDayminDate",
            "option": true,
            "valueType": "Date"
          },
          "letbodyHeight": {
            "enum": [],
            "type": [
              "number"
            ],
            "title": "letbodyHeight",
            "option": false,
            "valueType": "digit"
          },
          "constsubtitle=ref<{text": {
            "enum": [],
            "type": [
              "Date"
            ],
            "title": "constsubtitle=ref<{text",
            "option": false,
            "valueType": "Date"
          },
          "text": {
            "enum": [],
            "type": [
              "currentMonth.getTitle()"
            ],
            "title": "text",
            "option": false,
            "valueType": "text"
          },
          "props.firstDayOfWeek+props.firstDayOfWeek%7": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "props.firstDayOfWeek+props.firstDayOfWeek%7",
            "option": true,
            "valueType": "text"
          },
          "constmonths": {
            "enum": [],
            "type": [
              "Date"
            ],
            "title": "constmonths",
            "option": false,
            "valueType": "Date"
          },
          "": {
            "enum": [],
            "type": [
              "Date"
            ],
            "title": "",
            "option": false,
            "valueType": "Date"
          },
          "//https": {
            "enum": [],
            "type": [
              "//github.com/vant-ui/vant/issues/5640"
            ],
            "title": "//https",
            "option": false,
            "valueType": "text"
          },
          "disabledDays": {
            "enum": [],
            "type": [
              "CalendarDayItem[]"
            ],
            "title": "disabledDays",
            "option": false,
            "valueType": "text"
          },
          "startDay": {
            "enum": [],
            "type": [
              "Date"
            ],
            "title": "startDay",
            "option": false,
            "valueType": "Date"
          },
          "consttext=disabledprops.confirmDisabledText": {
            "enum": [],
            "type": [
              "props.confirmText;"
            ],
            "title": "consttext=disabledprops.confirmDisabledText",
            "option": true,
            "valueType": "text"
          },
          "{slotslot({disabled})": {
            "enum": [
              "t(confirm)}"
            ],
            "type": [
              "string"
            ],
            "title": "{slotslot({disabled})",
            "option": true,
            "valueType": "select"
          },
          "{'van-safe-area-bottom'": {
            "enum": [],
            "type": [
              "props.safeAreaInsetBottom }"
            ],
            "title": "{'van-safe-area-bottom'",
            "option": false,
            "valueType": "text"
          },
          "v-slots={{default": {
            "enum": [],
            "type": [
              "renderCalendar }}"
            ],
            "title": "v-slots={{default",
            "option": false,
            "valueType": "text"
          },
          "onUpdate": {
            "enum": [],
            "type": [
              "show={updateShow}"
            ],
            "title": "onUpdate",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "formatter",
          "default",
          "validator",
          "constscrollToDate=(targetDate",
          "constcheckRange=(date",
          "constselect=(date",
          "constsetCurrentDate=(date",
          ")",
          "constonClickDay=(item",
          "(dateItem",
          "constupdateShow=(value",
          "constrenderMonth=(date",
          "onClickSubtitle={(event"
        ],
        "properties": {
          "formatter": {
            "value": "Function as PropType<(item: CalendarDayItem) => CalendarDayItem>",
            "title": "formatter",
            "description": "formatter",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "default": {
            "value": "() => {",
            "title": "default",
            "description": "default",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "validator": {
            "value": "(val: number) => val >= 0 && val <= 6",
            "title": "validator",
            "description": "validator",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constscrollToDate=(targetDate": {
            "value": "Date) => {",
            "title": "constscrollToDate=(targetDate",
            "description": "constscrollToDate=(targetDate",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constcheckRange=(date": {
            "value": "[Date Date]) => {",
            "title": "constcheckRange=(date",
            "description": "constcheckRange=(date",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constselect=(date": {
            "value": "Date | Date[] complete?: boolean) => {",
            "title": "constselect=(date",
            "description": "constselect=(date",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constsetCurrentDate=(date": {
            "value": "Date | Date[]) => {",
            "title": "constsetCurrentDate=(date",
            "description": "constsetCurrentDate=(date",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          ")": {
            "value": "Date | undefined =>",
            "title": ")",
            "description": ")",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickDay=(item": {
            "value": "CalendarDayItem) => {",
            "title": "constonClickDay=(item",
            "description": "constonClickDay=(item",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "(dateItem": {
            "value": "Date) => compareDay(dateItem date) === 0",
            "title": "(dateItem",
            "description": "(dateItem",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constupdateShow=(value": {
            "value": "boolean) => emit('update:show' value);",
            "title": "constupdateShow=(value",
            "description": "constupdateShow=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderMonth=(date": {
            "value": "Date index: number) => {",
            "title": "constrenderMonth=(date",
            "description": "constrenderMonth=(date",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "onClickSubtitle={(event": {
            "value": "MouseEvent) => emit('clickSubtitle' event)}",
            "title": "onClickSubtitle={(event",
            "description": "onClickSubtitle={(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "日历组件用于选择日期或日期区间。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Field",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Field 输入框",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Field",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "rows",
          "type",
          "rules",
          "autosize",
          "labelWidth",
          "labelClass",
          "labelAlign",
          "showWordLimit",
          "errorMessageAlign",
          "colon",
          "default",
          "props",
          "emits",
          "'update",
          "status",
          "focused",
          "validateMessage",
          "const{parent",
          "message",
          "name",
          "//see",
          "value",
          "trigger",
          "//https",
          "emit('update",
          "return{width",
          "error",
          "custom",
          "'min-height'",
          "id",
          "ref",
          "class",
          "disabled",
          "readonly",
          "autofocus",
          "placeholder",
          "autocomplete",
          "enterkeyhint",
          "'aria-labelledby'",
          "onClick",
          "onChange",
          "onCompositionend",
          "onCompositionstart",
          ")",
          "title",
          "extra",
          "[`label-${labelAlign}`]",
          "bem('label',[labelAlign,{required"
        ],
        "properties": {
          "rows": {
            "enum": [],
            "type": [
              "props.rows !== undefined ? +props.rows : undefined"
            ],
            "title": "rows",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "type",
            "option": false,
            "valueType": "switch"
          },
          "rules": {
            "enum": [],
            "type": [
              "Array as PropType<FieldRule[]>"
            ],
            "title": "rules",
            "option": false,
            "valueType": "text"
          },
          "autosize": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "autosize",
            "option": false,
            "valueType": "switch"
          },
          "labelWidth": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "labelWidth",
            "option": false,
            "valueType": "text"
          },
          "labelClass": {
            "enum": [],
            "type": [
              "unknownProp"
            ],
            "title": "labelClass",
            "option": false,
            "valueType": "text"
          },
          "labelAlign": {
            "enum": [],
            "type": [
              "String as PropType<FieldTextAlign>"
            ],
            "title": "labelAlign",
            "option": false,
            "valueType": "text"
          },
          "showWordLimit": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "showWordLimit",
            "option": false,
            "valueType": "switch"
          },
          "errorMessageAlign": {
            "enum": [],
            "type": [
              "String as PropType<FieldTextAlign>"
            ],
            "title": "errorMessageAlign",
            "option": false,
            "valueType": "text"
          },
          "colon": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "colon",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "null"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "fieldProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "["
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "'update": {
            "enum": [],
            "type": [
              "modelValue'"
            ],
            "title": "'update",
            "option": false,
            "valueType": "text"
          },
          "status": {
            "enum": [],
            "type": [
              "state.status"
            ],
            "title": "status",
            "option": false,
            "valueType": "text"
          },
          "focused": {
            "enum": [],
            "type": [
              "false"
            ],
            "title": "focused",
            "option": false,
            "valueType": "text"
          },
          "validateMessage": {
            "enum": [],
            "type": [
              "''"
            ],
            "title": "validateMessage",
            "option": false,
            "valueType": "text"
          },
          "const{parent": {
            "enum": [],
            "type": [
              "form } = useParent(FORM_KEY);"
            ],
            "title": "const{parent",
            "option": false,
            "valueType": "text"
          },
          "message": {
            "enum": [],
            "type": [
              "state.validateMessage"
            ],
            "title": "message",
            "option": false,
            "valueType": "text"
          },
          "name": {
            "enum": [],
            "type": [
              "props.name"
            ],
            "title": "name",
            "option": false,
            "valueType": "text"
          },
          "//see": {
            "enum": [],
            "type": [
              "https://github.com/vant-ui/vant/issues/5033"
            ],
            "title": "//see",
            "option": false,
            "valueType": "text"
          },
          "value": {
            "enum": [],
            "type": [
              "renderFieldBody"
            ],
            "title": "value",
            "option": false,
            "valueType": "text"
          },
          "trigger": {
            "enum": [],
            "type": [
              "FieldFormatTrigger = 'onChange'"
            ],
            "title": "trigger",
            "option": false,
            "valueType": "text"
          },
          "//https": {
            "enum": [],
            "type": [
              "//github.com/youzan/vant/issues/11289"
            ],
            "title": "//https",
            "option": false,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' '');"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "return{width": {
            "enum": [],
            "type": [
              "addUnit(labelWidth) };"
            ],
            "title": "return{width",
            "option": false,
            "valueType": "text"
          },
          "error": {
            "enum": [],
            "type": [
              "showError.value"
            ],
            "title": "error",
            "option": false,
            "valueType": "text"
          },
          "custom": {
            "enum": [],
            "type": [
              "!!slots.input"
            ],
            "title": "custom",
            "option": false,
            "valueType": "text"
          },
          "'min-height'": {
            "enum": [],
            "type": [
              "props.type === 'textarea' && !props.autosize"
            ],
            "title": "'min-height'",
            "option": false,
            "valueType": "text"
          },
          "id": {
            "enum": [],
            "type": [
              "getInputId()"
            ],
            "title": "id",
            "option": false,
            "valueType": "text"
          },
          "ref": {
            "enum": [],
            "type": [
              "inputRef"
            ],
            "title": "ref",
            "option": false,
            "valueType": "text"
          },
          "class": {
            "enum": [],
            "type": [
              "controlClass"
            ],
            "title": "class",
            "option": false,
            "valueType": "text"
          },
          "disabled": {
            "enum": [],
            "type": [
              "getProp('disabled')"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "text"
          },
          "readonly": {
            "enum": [],
            "type": [
              "getProp('readonly')"
            ],
            "title": "readonly",
            "option": false,
            "valueType": "text"
          },
          "autofocus": {
            "enum": [],
            "type": [
              "props.autofocus"
            ],
            "title": "autofocus",
            "option": false,
            "valueType": "text"
          },
          "placeholder": {
            "enum": [],
            "type": [
              "props.placeholder"
            ],
            "title": "placeholder",
            "option": false,
            "valueType": "text"
          },
          "autocomplete": {
            "enum": [],
            "type": [
              "props.autocomplete"
            ],
            "title": "autocomplete",
            "option": false,
            "valueType": "text"
          },
          "enterkeyhint": {
            "enum": [],
            "type": [
              "props.enterkeyhint"
            ],
            "title": "enterkeyhint",
            "option": false,
            "valueType": "text"
          },
          "'aria-labelledby'": {
            "enum": [],
            "type": [
              "props.label ? `${id}-label` : undefined"
            ],
            "title": "'aria-labelledby'",
            "option": false,
            "valueType": "text"
          },
          "onClick": {
            "enum": [],
            "type": [
              "onClickInput"
            ],
            "title": "onClick",
            "option": false,
            "valueType": "text"
          },
          "onChange": {
            "enum": [],
            "type": [
              "endComposing"
            ],
            "title": "onChange",
            "option": false,
            "valueType": "text"
          },
          "onCompositionend": {
            "enum": [],
            "type": [
              "endComposing"
            ],
            "title": "onCompositionend",
            "option": false,
            "valueType": "text"
          },
          "onCompositionstart": {
            "enum": [],
            "type": [
              "startComposing"
            ],
            "title": "onCompositionstart",
            "option": false,
            "valueType": "text"
          },
          ")": {
            "enum": [],
            "type": [
              "("
            ],
            "title": ")",
            "option": false,
            "valueType": "text"
          },
          "{slotslot({message})": {
            "enum": [],
            "type": [
              "message}"
            ],
            "title": "{slotslot({message})",
            "option": true,
            "valueType": "text"
          },
          "constcolon=getProp('colon')'": {
            "enum": [],
            "type": [
              "' : '';"
            ],
            "title": "constcolon=getProp('colon')'",
            "option": true,
            "valueType": "text"
          },
          "labelAlign==='top'[LeftIcon,Label]": {
            "enum": [],
            "type": [
              "Label;"
            ],
            "title": "labelAlign==='top'[LeftIcon,Label]",
            "option": true,
            "valueType": "text"
          },
          "title": {
            "enum": [
              "labelAlign===top?renderTitle:null"
            ],
            "type": [
              "string"
            ],
            "title": "title",
            "option": false,
            "valueType": "select"
          },
          "extra": {
            "enum": [],
            "type": [
              "slots.extra"
            ],
            "title": "extra",
            "option": false,
            "valueType": "text"
          },
          "[`label-${labelAlign}`]": {
            "enum": [],
            "type": [
              "labelAlign"
            ],
            "title": "[`label-${labelAlign}`]",
            "option": false,
            "valueType": "text"
          },
          "bem('label',[labelAlign,{required": {
            "enum": [],
            "type": [
              "props.required }])"
            ],
            "title": "bem('label',[labelAlign,{required",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constgetProp=<TextendsFieldFormSharedProps>(key",
          "construnRules=(rules",
          "constvalidateWithTrigger=(trigger",
          "constlimitValueLength=(value",
          "constonInput=(event",
          "constonFocus=(event",
          "constonBlur=(event",
          "constonClickInput=(event",
          "constonClickLeftIcon=(event",
          "constonClickRightIcon=(event",
          "constonClear=(event",
          "constonKeypress=(event",
          "target",
          "icon"
        ],
        "properties": {
          "constgetProp=<TextendsFieldFormSharedProps>(key": {
            "value": "T) => {",
            "title": "constgetProp=<TextendsFieldFormSharedProps>(key",
            "description": "constgetProp=<TextendsFieldFormSharedProps>(key",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "construnRules=(rules": {
            "value": "FieldRule[]) =>",
            "title": "construnRules=(rules",
            "description": "construnRules=(rules",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constvalidateWithTrigger=(trigger": {
            "value": "FieldValidateTrigger) => {",
            "title": "constvalidateWithTrigger=(trigger",
            "description": "constvalidateWithTrigger=(trigger",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constlimitValueLength=(value": {
            "value": "string) => {",
            "title": "constlimitValueLength=(value",
            "description": "constlimitValueLength=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonInput=(event": {
            "value": "Event) => {",
            "title": "constonInput=(event",
            "description": "constonInput=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonFocus=(event": {
            "value": "Event) => {",
            "title": "constonFocus=(event",
            "description": "constonFocus=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonBlur=(event": {
            "value": "Event) => {",
            "title": "constonBlur=(event",
            "description": "constonBlur=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickInput=(event": {
            "value": "MouseEvent) => emit('clickInput' event);",
            "title": "constonClickInput=(event",
            "description": "constonClickInput=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickLeftIcon=(event": {
            "value": "MouseEvent) => emit('clickLeftIcon' event);",
            "title": "constonClickLeftIcon=(event",
            "description": "constonClickLeftIcon=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickRightIcon=(event": {
            "value": "MouseEvent) =>",
            "title": "constonClickRightIcon=(event",
            "description": "constonClickRightIcon=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClear=(event": {
            "value": "TouchEvent) => {",
            "title": "constonClear=(event",
            "description": "constonClear=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonKeypress=(event": {
            "value": "KeyboardEvent) => {",
            "title": "constonKeypress=(event",
            "description": "constonKeypress=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "target": {
            "value": "computed(() => clearIconRef.value?.$el)",
            "title": "target",
            "description": "target",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "icon": {
            "value": "LeftIcon && labelAlign !== 'top' ? () => LeftIcon : null",
            "title": "icon",
            "description": "icon",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用户可以在文本框内输入或编辑文字。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Form",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Form 表单",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Form",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "colon",
          "disabled",
          "readonly",
          "showError",
          "labelWidth",
          "labelAlign",
          "inputAlign",
          "scrollToError",
          "validateFirst",
          "submitOnEnter",
          "showErrorMessage",
          "errorMessageAlign",
          "validateTrigger",
          "type",
          "default",
          "props",
          "emits",
          "consterrors",
          "name"
        ],
        "properties": {
          "colon": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "colon",
            "option": false,
            "valueType": "switch"
          },
          "disabled": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "switch"
          },
          "readonly": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "readonly",
            "option": false,
            "valueType": "switch"
          },
          "showError": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "showError",
            "option": false,
            "valueType": "switch"
          },
          "labelWidth": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "labelWidth",
            "option": false,
            "valueType": "text"
          },
          "labelAlign": {
            "enum": [],
            "type": [
              "String as PropType<FieldTextAlign>"
            ],
            "title": "labelAlign",
            "option": false,
            "valueType": "text"
          },
          "inputAlign": {
            "enum": [],
            "type": [
              "String as PropType<FieldTextAlign>"
            ],
            "title": "inputAlign",
            "option": false,
            "valueType": "text"
          },
          "scrollToError": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "scrollToError",
            "option": false,
            "valueType": "switch"
          },
          "validateFirst": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "validateFirst",
            "option": false,
            "valueType": "switch"
          },
          "submitOnEnter": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "submitOnEnter",
            "option": false,
            "valueType": "text"
          },
          "showErrorMessage": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showErrorMessage",
            "option": false,
            "valueType": "text"
          },
          "errorMessageAlign": {
            "enum": [],
            "type": [
              "String as PropType<FieldTextAlign>"
            ],
            "title": "errorMessageAlign",
            "option": false,
            "valueType": "text"
          },
          "validateTrigger": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "validateTrigger",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "[String Array] as PropType<"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "'onBlur'"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "formProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['submit' 'failed']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "consterrors": {
            "enum": [],
            "type": [
              "FieldValidateError[] = [];"
            ],
            "title": "consterrors",
            "option": false,
            "valueType": "text"
          },
          "returnprops.validateFirstvalidateSeq(name)": {
            "enum": [],
            "type": [
              "validateAll(name);"
            ],
            "title": "returnprops.validateFirstvalidateSeq(name)",
            "option": true,
            "valueType": "text"
          },
          "name": {
            "enum": [],
            "type": [
              "string"
            ],
            "title": "name",
            "option": false,
            "valueType": "text"
          },
          "options": {
            "enum": [],
            "type": [
              "boolean ",
              " ScrollIntoViewOptions"
            ],
            "title": "options",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constgetFieldsByNames=(names",
          "constvalidateSeq=(names",
          "returnfield.validate().then((error",
          "constvalidateAll=(names",
          "constvalidateField=(name",
          "matched.validate().then((error",
          "constvalidate=(name",
          "constresetValidation=(name",
          ".catch((errors",
          "constonSubmit=(event"
        ],
        "properties": {
          "constgetFieldsByNames=(names": {
            "value": "string[]) => {",
            "title": "constgetFieldsByNames=(names",
            "description": "constgetFieldsByNames=(names",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constvalidateSeq=(names": {
            "value": "string[]) =>",
            "title": "constvalidateSeq=(names",
            "description": "constvalidateSeq=(names",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "returnfield.validate().then((error": {
            "value": "FieldValidateError) => {",
            "title": "returnfield.validate().then((error",
            "description": "returnfield.validate().then((error",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constvalidateAll=(names": {
            "value": "string[]) =>",
            "title": "constvalidateAll=(names",
            "description": "constvalidateAll=(names",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constvalidateField=(name": {
            "value": "string) => {",
            "title": "constvalidateField=(name",
            "description": "constvalidateField=(name",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "matched.validate().then((error": {
            "value": "FieldValidateError) => {",
            "title": "matched.validate().then((error",
            "description": "matched.validate().then((error",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constvalidate=(name": {
            "value": "string | string[]) => {",
            "title": "constvalidate=(name",
            "description": "constvalidate=(name",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constresetValidation=(name": {
            "value": "string | string[]) => {",
            "title": "constresetValidation=(name",
            "description": "constresetValidation=(name",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          ".catch((errors": {
            "value": "FieldValidateError[]) => {",
            "title": ".catch((errors",
            "description": ".catch((errors",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonSubmit=(event": {
            "value": "Event) => {",
            "title": "constonSubmit=(event",
            "description": "constonSubmit=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于数据录入、校验，支持输入框、单选框、复选框、文件上传等类型，需要与 Field 输入框 组件搭配使用。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "DatePicker",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "DatePicker 日期选择",
        "description": "组件名称"
      },
      "tagName": {
        "title": "DatePicker",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "columnsType",
          "type",
          "minDate",
          "validator",
          "maxDate",
          "props",
          "emits",
          "",
          "`[Vant]DatePicker",
          "emit('update",
          "immediate"
        ],
        "properties": {
          "columnsType": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "columnsType",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "Date"
            ],
            "title": "type",
            "option": false,
            "valueType": "Date"
          },
          "minDate": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "minDate",
            "option": false,
            "valueType": "text"
          },
          "validator": {
            "enum": [],
            "type": [
              "Date"
            ],
            "title": "validator",
            "option": false,
            "valueType": "Date"
          },
          "maxDate": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "maxDate",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "datePickerProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['confirm' 'cancel' 'change' 'update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "constminMonth=isMinYear(year)props.minDate.getMonth()+1": {
            "enum": [],
            "type": [
              "1;"
            ],
            "title": "constminMonth=isMinYear(year)props.minDate.getMonth()+1",
            "option": true,
            "valueType": "text"
          },
          "constmaxMonth=isMaxYear(year)props.maxDate.getMonth()+1": {
            "enum": [],
            "type": [
              "12;"
            ],
            "title": "constmaxMonth=isMaxYear(year)props.maxDate.getMonth()+1",
            "option": true,
            "valueType": "text"
          },
          "isMinYear(year)&&isMinMonth(month)props.minDate.getDate()": {
            "enum": [],
            "type": [
              "1;"
            ],
            "title": "isMinYear(year)&&isMinMonth(month)props.minDate.getDate()",
            "option": true,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "getMonthEndDay(year month);"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          },
          "`[Vant]DatePicker": {
            "enum": [],
            "type": [
              "unsupported columns type: ${type}`"
            ],
            "title": "`[Vant]DatePicker",
            "option": false,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' newValues);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "immediate": {
            "enum": [],
            "type": [
              "true"
            ],
            "title": "immediate",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "default",
          "constisMinYear=(year",
          "constisMaxYear=(year",
          "constisMinMonth=(month",
          "constisMaxMonth=(month",
          "constgetValue=(type",
          "constonChange=(...args",
          "constonCancel=(...args",
          "constonConfirm=(...args"
        ],
        "properties": {
          "default": {
            "value": "() => new Date(currentYear + 10 11 31)",
            "title": "default",
            "description": "default",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constisMinYear=(year": {
            "value": "number) => year === props.minDate.getFullYear();",
            "title": "constisMinYear=(year",
            "description": "constisMinYear=(year",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constisMaxYear=(year": {
            "value": "number) => year === props.maxDate.getFullYear();",
            "title": "constisMaxYear=(year",
            "description": "constisMaxYear=(year",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constisMinMonth=(month": {
            "value": "number) =>",
            "title": "constisMinMonth=(month",
            "description": "constisMinMonth=(month",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constisMaxMonth=(month": {
            "value": "number) =>",
            "title": "constisMaxMonth=(month",
            "description": "constisMaxMonth=(month",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constgetValue=(type": {
            "value": "DatePickerColumnType) => {",
            "title": "constgetValue=(type",
            "description": "constgetValue=(type",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonChange=(...args": {
            "value": "unknown[]) => emit('change' ...args);",
            "title": "constonChange=(...args",
            "description": "constonChange=(...args",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonCancel=(...args": {
            "value": "unknown[]) => emit('cancel' ...args);",
            "title": "constonCancel=(...args",
            "description": "constonCancel=(...args",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonConfirm=(...args": {
            "value": "unknown[]) => emit('confirm' ...args);",
            "title": "constonConfirm=(...args",
            "description": "constonConfirm=(...args",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "日期选择器，用于选择年、月、日，通常与弹出层组件配合使用。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "NumberKeyboard",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "NumberKeyboard 数字键盘",
        "description": "组件名称"
      },
      "tagName": {
        "title": "NumberKeyboard",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "show",
          "title",
          "theme",
          "zIndex",
          "teleport",
          "maxlength",
          "modelValue",
          "transition",
          "blurOnClose",
          "showDeleteKey",
          "randomKeyOrder",
          "closeButtonText",
          "deleteButtonText",
          "closeButtonLoading",
          "hideOnClickOutside",
          "safeAreaInsetBottom",
          "extraKey",
          "type",
          "default",
          "functionshuffle(array",
          "inheritAttrs",
          "props",
          "emits",
          "'update",
          "constkeys",
          ".map((_,i)=>({text",
          "{text",
          "text",
          "emit('update",
          "constkeySlots",
          "v-slots={{delete",
          "useClickAway(root,onBlur,{eventName",
          "unfit",
          "'with-title'"
        ],
        "properties": {
          "show": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "show",
            "option": false,
            "valueType": "switch"
          },
          "title": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "title",
            "option": false,
            "valueType": "text"
          },
          "theme": {
            "enum": [],
            "type": [
              "makeStringProp<NumberKeyboardTheme>('default')"
            ],
            "title": "theme",
            "option": false,
            "valueType": "text"
          },
          "zIndex": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "zIndex",
            "option": false,
            "valueType": "text"
          },
          "teleport": {
            "enum": [],
            "type": [
              "[String Object] as PropType<TeleportProps['to']>"
            ],
            "title": "teleport",
            "option": false,
            "valueType": "text"
          },
          "maxlength": {
            "enum": [],
            "type": [
              "makeNumericProp(Infinity)"
            ],
            "title": "maxlength",
            "option": false,
            "valueType": "text"
          },
          "modelValue": {
            "enum": [],
            "type": [
              "makeStringProp('')"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "text"
          },
          "transition": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "transition",
            "option": false,
            "valueType": "text"
          },
          "blurOnClose": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "blurOnClose",
            "option": false,
            "valueType": "text"
          },
          "showDeleteKey": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showDeleteKey",
            "option": false,
            "valueType": "text"
          },
          "randomKeyOrder": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "randomKeyOrder",
            "option": false,
            "valueType": "switch"
          },
          "closeButtonText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "closeButtonText",
            "option": false,
            "valueType": "text"
          },
          "deleteButtonText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "deleteButtonText",
            "option": false,
            "valueType": "text"
          },
          "closeButtonLoading": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "closeButtonLoading",
            "option": false,
            "valueType": "switch"
          },
          "hideOnClickOutside": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "hideOnClickOutside",
            "option": false,
            "valueType": "text"
          },
          "safeAreaInsetBottom": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "safeAreaInsetBottom",
            "option": false,
            "valueType": "text"
          },
          "extraKey": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "extraKey",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "props.showDeleteKey ? 'delete' : ''"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "''"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "functionshuffle(array": {
            "enum": [],
            "type": [
              "unknown[]) {"
            ],
            "title": "functionshuffle(array",
            "option": false,
            "valueType": "text"
          },
          "inheritAttrs": {
            "enum": [],
            "type": [
              "false"
            ],
            "title": "inheritAttrs",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "number"
            ],
            "title": "props",
            "option": false,
            "valueType": "digit"
          },
          "emits": {
            "enum": [],
            "type": [
              "["
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "'update": {
            "enum": [],
            "type": [
              "modelValue'"
            ],
            "title": "'update",
            "option": false,
            "valueType": "text"
          },
          "constkeys": {
            "enum": [],
            "type": [
              "KeyConfig[] = Array(9)"
            ],
            "title": "constkeys",
            "option": false,
            "valueType": "text"
          },
          ".map((_,i)=>({text": {
            "enum": [],
            "type": [
              "i + 1 }));"
            ],
            "title": ".map((_,i)=>({text",
            "option": false,
            "valueType": "text"
          },
          "{text": {
            "enum": [],
            "type": [
              "extraKeys[1] type: 'extra' }"
            ],
            "title": "{text",
            "option": false,
            "valueType": "text"
          },
          "text": {
            "enum": [],
            "type": [
              "props.showDeleteKey ? props.deleteButtonText : ''"
            ],
            "title": "text",
            "option": false,
            "valueType": "text"
          },
          "constextraKeys=Array.isArray(extraKey)extraKey": {
            "enum": [],
            "type": [
              "[extraKey];"
            ],
            "title": "constextraKeys=Array.isArray(extraKey)extraKey",
            "option": true,
            "valueType": "text"
          },
          "props.theme==='custom'genCustomKeys()": {
            "enum": [],
            "type": [
              "genDefaultKeys()"
            ],
            "title": "props.theme==='custom'genCustomKeys()",
            "option": true,
            "valueType": "text"
          },
          "constonAnimationEnd=()=>emit(props.show'show'": {
            "enum": [],
            "type": [
              "'hide');"
            ],
            "title": "constonAnimationEnd=()=>emit(props.show'show'",
            "option": true,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' value + text);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "constkeySlots": {
            "enum": [],
            "type": [
              "Record<string Slot ",
              " undefined> = {};"
            ],
            "title": "constkeySlots",
            "option": false,
            "valueType": "text"
          },
          "v-slots={{delete": {
            "enum": [],
            "type": [
              "slots.delete }}"
            ],
            "title": "v-slots={{delete",
            "option": false,
            "valueType": "text"
          },
          "emit(value'show'": {
            "enum": [],
            "type": [
              "'hide');"
            ],
            "title": "emit(value'show'",
            "option": true,
            "valueType": "text"
          },
          "useClickAway(root,onBlur,{eventName": {
            "enum": [],
            "type": [
              "'touchstart' });"
            ],
            "title": "useClickAway(root,onBlur,{eventName",
            "option": false,
            "valueType": "text"
          },
          "<Transitionname={props.transition'van-slide-up'": {
            "enum": [],
            "type": [
              "''}>"
            ],
            "title": "<Transitionname={props.transition'van-slide-up'",
            "option": true,
            "valueType": "text"
          },
          "unfit": {
            "enum": [],
            "type": [
              "!props.safeAreaInsetBottom"
            ],
            "title": "unfit",
            "option": false,
            "valueType": "text"
          },
          "'with-title'": {
            "enum": [],
            "type": [
              "!!Title"
            ],
            "title": "'with-title'",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constgenDefaultKeys=()",
          "constonPress=(text"
        ],
        "properties": {
          "constgenDefaultKeys=()": {
            "value": "KeyConfig[] => [",
            "title": "constgenDefaultKeys=()",
            "description": "constgenDefaultKeys=()",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonPress=(text": {
            "value": "string type: KeyType) => {",
            "title": "constonPress=(text",
            "description": "constonPress=(text",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "虚拟数字键盘，可以配合密码输入框组件或自定义的输入框组件使用。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "PasswordInput",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "PasswordInput 密码输入框",
        "description": "组件名称"
      },
      "tagName": {
        "title": "PasswordInput",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "info",
          "mask",
          "value",
          "gutter",
          "length",
          "focused",
          "errorInfo",
          "props",
          "emits",
          "constPoints",
          "style={marginLeft",
          "{[BORDER_LEFT]",
          "bem('item',{focus",
          "<istyle={{visibility",
          ")",
          "class={[bem('security'),{[BORDER_SURROUND]"
        ],
        "properties": {
          "info": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "info",
            "option": false,
            "valueType": "text"
          },
          "mask": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "mask",
            "option": false,
            "valueType": "text"
          },
          "value": {
            "enum": [],
            "type": [
              "makeStringProp('')"
            ],
            "title": "value",
            "option": false,
            "valueType": "text"
          },
          "gutter": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "gutter",
            "option": false,
            "valueType": "text"
          },
          "length": {
            "enum": [],
            "type": [
              "makeNumericProp(6)"
            ],
            "title": "length",
            "option": false,
            "valueType": "text"
          },
          "focused": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "focused",
            "option": false,
            "valueType": "switch"
          },
          "errorInfo": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "errorInfo",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "passwordInputProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['focus']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "constPoints": {
            "enum": [],
            "type": [
              "JSX.Element[] = [];"
            ],
            "title": "constPoints",
            "option": false,
            "valueType": "text"
          },
          "style={marginLeft": {
            "enum": [],
            "type": [
              "addUnit(gutter) };"
            ],
            "title": "style={marginLeft",
            "option": false,
            "valueType": "text"
          },
          "{[BORDER_LEFT]": {
            "enum": [],
            "type": [
              "showBorder }"
            ],
            "title": "{[BORDER_LEFT]",
            "option": false,
            "valueType": "text"
          },
          "bem('item',{focus": {
            "enum": [],
            "type": [
              "showCursor })"
            ],
            "title": "bem('item',{focus",
            "option": false,
            "valueType": "text"
          },
          "<istyle={{visibility": {
            "enum": [],
            "type": [
              "char ? 'visible' : 'hidden' }} />"
            ],
            "title": "<istyle={{visibility",
            "option": false,
            "valueType": "text"
          },
          ")": {
            "enum": [],
            "type": [
              "("
            ],
            "title": ")",
            "option": false,
            "valueType": "text"
          },
          "class={[bem('security'),{[BORDER_SURROUND]": {
            "enum": [],
            "type": [
              "!props.gutter }]}"
            ],
            "title": "class={[bem('security'),{[BORDER_SURROUND]",
            "option": false,
            "valueType": "text"
          },
          "<divclass={bem(props.errorInfo'error-info'": {
            "enum": [],
            "type": [
              "'info')}>"
            ],
            "title": "<divclass={bem(props.errorInfo'error-info'",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constonTouchStart=(event"
        ],
        "properties": {
          "constonTouchStart=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchStart=(event",
            "description": "constonTouchStart=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "带网格的输入框组件，可以用于输入密码、短信验证码等场景，通常与数字键盘组件配合使用。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Radio",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Radio 单选框",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Radio",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "props",
          "emits",
          "emit('update"
        ],
        "properties": {
          "props": {
            "enum": [],
            "type": [
              "checkerProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "constvalue=parentparent.props.modelValue": {
            "enum": [],
            "type": [
              "props.modelValue;"
            ],
            "title": "constvalue=parentparent.props.modelValue",
            "option": true,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' props.name);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "在一组备选项中进行单选。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Picker",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Picker 选择器",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Picker",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "columns",
          "modelValue",
          "toolbarPosition",
          "columnsFieldNames",
          "props",
          "emits",
          "selectedValues",
          "selectedOptions",
          "selectedIndexes",
          "v-slots={{option",
          "constframeStyle={height",
          "backgroundSize",
          "constcolumnsStyle={height",
          "{immediate",
          "letlastEmittedModelValue",
          "{deep",
          "emit('update",
          "target"
        ],
        "properties": {
          "columns": {
            "enum": [],
            "type": [
              "makeArrayProp<PickerOption ",
              " PickerColumn>()"
            ],
            "title": "columns",
            "option": false,
            "valueType": "text"
          },
          "modelValue": {
            "enum": [],
            "type": [
              "makeArrayProp<Numeric>()"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "text"
          },
          "toolbarPosition": {
            "enum": [],
            "type": [
              "makeStringProp<PickerToolbarPosition>('top')"
            ],
            "title": "toolbarPosition",
            "option": false,
            "valueType": "text"
          },
          "columnsFieldNames": {
            "enum": [],
            "type": [
              "Object as PropType<PickerFieldNames>"
            ],
            "title": "columnsFieldNames",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "pickerProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['confirm' 'cancel' 'change' 'clickOption' 'update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "selectedValues": {
            "enum": [],
            "type": [
              "selectedValues.value.slice(0)"
            ],
            "title": "selectedValues",
            "option": false,
            "valueType": "text"
          },
          "selectedOptions": {
            "enum": [],
            "type": [
              "selectedOptions.value"
            ],
            "title": "selectedOptions",
            "option": false,
            "valueType": "text"
          },
          "selectedIndexes": {
            "enum": [],
            "type": [
              "selectedIndexes.value"
            ],
            "title": "selectedIndexes",
            "option": false,
            "valueType": "text"
          },
          "options.lengthoptions[0][fields.value.value]": {
            "enum": [],
            "type": [
              "undefined"
            ],
            "title": "options.lengthoptions[0][fields.value.value]",
            "option": true,
            "valueType": "text"
          },
          "v-slots={{option": {
            "enum": [],
            "type": [
              "slots.option }}"
            ],
            "title": "v-slots={{option",
            "option": false,
            "valueType": "text"
          },
          "constframeStyle={height": {
            "enum": [],
            "type": [
              "`${optionHeight.value}px` };"
            ],
            "title": "constframeStyle={height",
            "option": false,
            "valueType": "text"
          },
          "backgroundSize": {
            "enum": [],
            "type": [
              "`100% ${(wrapHeight - optionHeight.value) / 2}px`"
            ],
            "title": "backgroundSize",
            "option": false,
            "valueType": "text"
          },
          "constcolumnsStyle={height": {
            "enum": [],
            "type": [
              "`${wrapHeight}px` };"
            ],
            "title": "constcolumnsStyle={height",
            "option": false,
            "valueType": "text"
          },
          "{immediate": {
            "enum": [],
            "type": [
              "true }"
            ],
            "title": "{immediate",
            "option": false,
            "valueType": "text"
          },
          "letlastEmittedModelValue": {
            "enum": [],
            "type": [
              "Numeric[];"
            ],
            "title": "letlastEmittedModelValue",
            "option": false,
            "valueType": "text"
          },
          "{deep": {
            "enum": [],
            "type": [
              "true }"
            ],
            "title": "{deep",
            "option": false,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' lastEmittedModelValue);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "target": {
            "enum": [],
            "type": [
              "columnsRef"
            ],
            "title": "target",
            "option": false,
            "valueType": "text"
          },
          "{props.toolbarPosition==='top'renderToolbar()": {
            "enum": [],
            "type": [
              "null}"
            ],
            "title": "{props.toolbarPosition==='top'renderToolbar()",
            "option": true,
            "valueType": "text"
          },
          "{props.loading<Loadingclass={bem('loading')}/>": {
            "enum": [],
            "type": [
              "null}"
            ],
            "title": "{props.loading<Loadingclass={bem('loading')}/>",
            "option": true,
            "valueType": "text"
          },
          "{props.toolbarPosition==='bottom'renderToolbar()": {
            "enum": [],
            "type": [
              "null}"
            ],
            "title": "{props.toolbarPosition==='bottom'renderToolbar()",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constsetValue=(index",
          "constonChange=(value",
          "constonClickOption=(currentOption",
          "onChange={(value",
          "onClickOption={(option",
          "constrenderMask=(wrapHeight"
        ],
        "properties": {
          "constsetValue=(index": {
            "value": "number value: Numeric) => {",
            "title": "constsetValue=(index",
            "description": "constsetValue=(index",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonChange=(value": {
            "value": "Numeric columnIndex: number) => {",
            "title": "constonChange=(value",
            "description": "constonChange=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickOption=(currentOption": {
            "value": "PickerOption columnIndex: number) =>",
            "title": "constonClickOption=(currentOption",
            "description": "constonClickOption=(currentOption",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "onChange={(value": {
            "value": "Numeric) => onChange(value columnIndex)}",
            "title": "onChange={(value",
            "description": "onChange={(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "onClickOption={(option": {
            "value": "PickerOption) =>",
            "title": "onClickOption={(option",
            "description": "onClickOption={(option",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderMask=(wrapHeight": {
            "value": "number) => {",
            "title": "constrenderMask=(wrapHeight",
            "description": "constrenderMask=(wrapHeight",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "提供多个选项集合供用户选择，支持单列选择、多列选择和级联选择，通常与弹出层组件配合使用。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "PickerGroup",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "PickerGroup 选择器组",
        "description": "组件名称"
      },
      "tagName": {
        "title": "PickerGroup",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "tabs",
          "props",
          "emits"
        ],
        "properties": {
          "tabs": {
            "enum": [],
            "type": [
              "makeArrayProp<string>()"
            ],
            "title": "tabs",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "pickerGroupProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['confirm' 'cancel']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于结合多个 Picker 选择器组件，在一次交互中完成多个值的选择。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Search",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Search 搜索",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Search",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "label",
          "shape",
          "leftIcon",
          "clearable",
          "actionText",
          "background",
          "showAction",
          "props",
          "emits",
          "'update",
          "emit('update",
          "id",
          "onUpdate",
          "class={bem({'show-action'",
          "style={{background"
        ],
        "properties": {
          "label": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "label",
            "option": false,
            "valueType": "text"
          },
          "shape": {
            "enum": [],
            "type": [
              "makeStringProp<SearchShape>('square')"
            ],
            "title": "shape",
            "option": false,
            "valueType": "text"
          },
          "leftIcon": {
            "enum": [],
            "type": [
              "makeStringProp('search')"
            ],
            "title": "leftIcon",
            "option": false,
            "valueType": "text"
          },
          "clearable": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "clearable",
            "option": false,
            "valueType": "text"
          },
          "actionText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "actionText",
            "option": false,
            "valueType": "text"
          },
          "background": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "background",
            "option": false,
            "valueType": "text"
          },
          "showAction": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "showAction",
            "option": false,
            "valueType": "switch"
          },
          "props": {
            "enum": [],
            "type": [
              "searchProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "["
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "'update": {
            "enum": [],
            "type": [
              "modelValue'"
            ],
            "title": "'update",
            "option": false,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' '');"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "{slots.labelslots.label()": {
            "enum": [],
            "type": [
              "props.label}"
            ],
            "title": "{slots.labelslots.label()",
            "option": true,
            "valueType": "text"
          },
          "{slots.actionslots.action()": {
            "enum": [],
            "type": [
              "text}"
            ],
            "title": "{slots.actionslots.action()",
            "option": true,
            "valueType": "text"
          },
          "id": {
            "enum": [],
            "type": [
              "getInputId()"
            ],
            "title": "id",
            "option": false,
            "valueType": "text"
          },
          "onUpdate": {
            "enum": [],
            "type": [
              "modelValue={onInput}"
            ],
            "title": "onUpdate",
            "option": false,
            "valueType": "text"
          },
          "class={bem({'show-action'": {
            "enum": [],
            "type": [
              "props.showAction })}"
            ],
            "title": "class={bem({'show-action'",
            "option": false,
            "valueType": "text"
          },
          "style={{background": {
            "enum": [],
            "type": [
              "props.background }}"
            ],
            "title": "style={{background",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constonKeypress=(event",
          "constonBlur=(event",
          "constonFocus=(event",
          "constonClear=(event",
          "constonClickInput=(event",
          "constonClickLeftIcon=(event",
          "constonClickRightIcon=(event",
          "constonInput=(value"
        ],
        "properties": {
          "constonKeypress=(event": {
            "value": "KeyboardEvent) => {",
            "title": "constonKeypress=(event",
            "description": "constonKeypress=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonBlur=(event": {
            "value": "Event) => emit('blur' event);",
            "title": "constonBlur=(event",
            "description": "constonBlur=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonFocus=(event": {
            "value": "Event) => emit('focus' event);",
            "title": "constonFocus=(event",
            "description": "constonFocus=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClear=(event": {
            "value": "MouseEvent) => emit('clear' event);",
            "title": "constonClear=(event",
            "description": "constonClear=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickInput=(event": {
            "value": "MouseEvent) => emit('clickInput' event);",
            "title": "constonClickInput=(event",
            "description": "constonClickInput=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickLeftIcon=(event": {
            "value": "MouseEvent) => emit('clickLeftIcon' event);",
            "title": "constonClickLeftIcon=(event",
            "description": "constonClickLeftIcon=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickRightIcon=(event": {
            "value": "MouseEvent) =>",
            "title": "constonClickRightIcon=(event",
            "description": "constonClickRightIcon=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonInput=(value": {
            "value": "string) => emit('update:modelValue' value);",
            "title": "constonInput=(value",
            "description": "constonInput=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于搜索场景的输入框组件。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Rate",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Rate 评分",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Rate",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "size",
          "icon",
          "color",
          "count",
          "gutter",
          "readonly",
          "disabled",
          "voidIcon",
          "allowHalf",
          "voidColor",
          "touchable",
          "iconPrefix",
          "modelValue",
          "disabledColor",
          "props",
          "emits",
          "letranges",
          "left",
          "top",
          "height",
          "score",
          "letgroupRefRect",
          "emit('update",
          "paddingRight",
          "class={bem('icon',{disabled,full",
          "style={{width",
          "class={bem('icon',['half',{disabled,full",
          "target"
        ],
        "properties": {
          "size": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "size",
            "option": false,
            "valueType": "text"
          },
          "icon": {
            "enum": [],
            "type": [
              "makeStringProp('star')"
            ],
            "title": "icon",
            "option": false,
            "valueType": "text"
          },
          "color": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "color",
            "option": false,
            "valueType": "text"
          },
          "count": {
            "enum": [],
            "type": [
              "makeNumericProp(5)"
            ],
            "title": "count",
            "option": false,
            "valueType": "text"
          },
          "gutter": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "gutter",
            "option": false,
            "valueType": "text"
          },
          "readonly": {
            "enum": [],
            "type": [
              "props.readonly"
            ],
            "title": "readonly",
            "option": false,
            "valueType": "text"
          },
          "disabled": {
            "enum": [],
            "type": [
              "props.disabled"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "text"
          },
          "voidIcon": {
            "enum": [],
            "type": [
              "makeStringProp('star-o')"
            ],
            "title": "voidIcon",
            "option": false,
            "valueType": "text"
          },
          "allowHalf": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "allowHalf",
            "option": false,
            "valueType": "switch"
          },
          "voidColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "voidColor",
            "option": false,
            "valueType": "text"
          },
          "touchable": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "touchable",
            "option": false,
            "valueType": "text"
          },
          "iconPrefix": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "iconPrefix",
            "option": false,
            "valueType": "text"
          },
          "modelValue": {
            "enum": [],
            "type": [
              "makeNumberProp(0)"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "text"
          },
          "disabledColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "disabledColor",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "rateProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['change' 'update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "letranges": {
            "enum": [],
            "type": [
              "Array<{"
            ],
            "title": "letranges",
            "option": false,
            "valueType": "text"
          },
          "left": {
            "enum": [],
            "type": [
              "rect.left"
            ],
            "title": "left",
            "option": false,
            "valueType": "text"
          },
          "top": {
            "enum": [],
            "type": [
              "rect.top"
            ],
            "title": "top",
            "option": false,
            "valueType": "text"
          },
          "height": {
            "enum": [],
            "type": [
              "rect.height"
            ],
            "title": "height",
            "option": false,
            "valueType": "text"
          },
          "score": {
            "enum": [],
            "type": [
              "index + 1"
            ],
            "title": "score",
            "option": false,
            "valueType": "text"
          },
          "letgroupRefRect": {
            "enum": [],
            "type": [
              "DOMRect;"
            ],
            "title": "letgroupRefRect",
            "option": false,
            "valueType": "text"
          },
          "constcurTop=y<groupRefRect.topminRectTop": {
            "enum": [],
            "type": [
              "maxRectTop;"
            ],
            "title": "constcurTop=y<groupRefRect.topminRectTop",
            "option": true,
            "valueType": "text"
          },
          "returnprops.allowHalf0.5": {
            "enum": [],
            "type": [
              "1;"
            ],
            "title": "returnprops.allowHalf0.5",
            "option": true,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' index);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "paddingRight": {
            "enum": [],
            "type": [
              "addUnit(gutter)"
            ],
            "title": "paddingRight",
            "option": false,
            "valueType": "text"
          },
          "allowHalfgetScoreByPosition(event.clientX,event.clientY)": {
            "enum": [],
            "type": [
              "score"
            ],
            "title": "allowHalfgetScoreByPosition(event.clientX,event.clientY)",
            "option": true,
            "valueType": "text"
          },
          "tabindex={disabledundefined": {
            "enum": [],
            "type": [
              "0}"
            ],
            "title": "tabindex={disabledundefined",
            "option": true,
            "valueType": "text"
          },
          "name={isFullicon": {
            "enum": [],
            "type": [
              "voidIcon}"
            ],
            "title": "name={isFullicon",
            "option": true,
            "valueType": "text"
          },
          "class={bem('icon',{disabled,full": {
            "enum": [],
            "type": [
              "isFull })}"
            ],
            "title": "class={bem('icon',{disabled,full",
            "option": false,
            "valueType": "text"
          },
          "color={disableddisabledColor": {
            "enum": [],
            "type": [
              "isVoid ? voidColor : color}"
            ],
            "title": "color={disableddisabledColor",
            "option": true,
            "valueType": "text"
          },
          "style={{width": {
            "enum": [],
            "type": [
              "item.value + 'em' }}"
            ],
            "title": "style={{width",
            "option": false,
            "valueType": "text"
          },
          "name={isVoidvoidIcon": {
            "enum": [],
            "type": [
              "icon}"
            ],
            "title": "name={isVoidvoidIcon",
            "option": true,
            "valueType": "text"
          },
          "class={bem('icon',['half',{disabled,full": {
            "enum": [],
            "type": [
              "!isVoid }])}"
            ],
            "title": "class={bem('icon',['half',{disabled,full",
            "option": false,
            "valueType": "text"
          },
          "target": {
            "enum": [],
            "type": [
              "groupRef"
            ],
            "title": "target",
            "option": false,
            "valueType": "text"
          },
          "tabindex={props.disabledundefined": {
            "enum": [],
            "type": [
              "0}"
            ],
            "title": "tabindex={props.disabledundefined",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constgetScoreByPosition=(x",
          "constselect=(index",
          "constonTouchStart=(event",
          "constonTouchMove=(event",
          "constrenderStar=(item",
          "constonClickItem=(event"
        ],
        "properties": {
          "constgetScoreByPosition=(x": {
            "value": "number y: number) => {",
            "title": "constgetScoreByPosition=(x",
            "description": "constgetScoreByPosition=(x",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constselect=(index": {
            "value": "number) => {",
            "title": "constselect=(index",
            "description": "constselect=(index",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonTouchStart=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchStart=(event",
            "description": "constonTouchStart=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonTouchMove=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchMove=(event",
            "description": "constonTouchMove=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderStar=(item": {
            "value": "RateListItem index: number) => {",
            "title": "constrenderStar=(item",
            "description": "constrenderStar=(item",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickItem=(event": {
            "value": "MouseEvent) => {",
            "title": "constonClickItem=(event",
            "description": "constonClickItem=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于对事物进行评级操作。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Slider",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Slider 滑块",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Slider",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "min",
          "max",
          "step",
          "range",
          "reverse",
          "disabled",
          "readonly",
          "vertical",
          "barHeight",
          "buttonSize",
          "activeColor",
          "inactiveColor",
          "modelValue",
          "type",
          "default",
          "props",
          "emits",
          "letbuttonIndex",
          "letcurrent",
          "letstartValue",
          "background",
          "[crossAxis]",
          "conststyle",
          "[mainAxis]",
          "emit('update",
          "",
          "target"
        ],
        "properties": {
          "min": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "min",
            "option": false,
            "valueType": "text"
          },
          "max": {
            "enum": [],
            "type": [
              "makeNumericProp(100)"
            ],
            "title": "max",
            "option": false,
            "valueType": "text"
          },
          "step": {
            "enum": [],
            "type": [
              "makeNumericProp(1)"
            ],
            "title": "step",
            "option": false,
            "valueType": "text"
          },
          "range": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "range",
            "option": false,
            "valueType": "switch"
          },
          "reverse": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "reverse",
            "option": false,
            "valueType": "switch"
          },
          "disabled": {
            "enum": [],
            "type": [
              "props.disabled"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "text"
          },
          "readonly": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "readonly",
            "option": false,
            "valueType": "switch"
          },
          "vertical": {
            "enum": [],
            "type": [
              "props.vertical"
            ],
            "title": "vertical",
            "option": false,
            "valueType": "text"
          },
          "barHeight": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "barHeight",
            "option": false,
            "valueType": "text"
          },
          "buttonSize": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "buttonSize",
            "option": false,
            "valueType": "text"
          },
          "activeColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "activeColor",
            "option": false,
            "valueType": "text"
          },
          "inactiveColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "inactiveColor",
            "option": false,
            "valueType": "text"
          },
          "modelValue": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "[Number Array] as PropType<SliderValue>"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "sliderProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['change' 'dragEnd' 'dragStart' 'update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "letbuttonIndex": {
            "enum": [],
            "type": [
              "0 ",
              " 1;"
            ],
            "title": "letbuttonIndex",
            "option": false,
            "valueType": "text"
          },
          "letcurrent": {
            "enum": [],
            "type": [
              "SliderValue;"
            ],
            "title": "letcurrent",
            "option": false,
            "valueType": "text"
          },
          "letstartValue": {
            "enum": [],
            "type": [
              "SliderValue;"
            ],
            "title": "letstartValue",
            "option": false,
            "valueType": "text"
          },
          "constcrossAxis=props.vertical'width'": {
            "enum": [],
            "type": [
              "'height';"
            ],
            "title": "constcrossAxis=props.vertical'width'",
            "option": true,
            "valueType": "text"
          },
          "background": {
            "enum": [],
            "type": [
              "props.activeColor"
            ],
            "title": "background",
            "option": false,
            "valueType": "text"
          },
          "[crossAxis]": {
            "enum": [],
            "type": [
              "addUnit(props.barHeight)"
            ],
            "title": "[crossAxis]",
            "option": false,
            "valueType": "text"
          },
          "constmainAxis=props.vertical'height'": {
            "enum": [],
            "type": [
              "'width';"
            ],
            "title": "constmainAxis=props.vertical'height'",
            "option": true,
            "valueType": "text"
          },
          "conststyle": {
            "enum": [],
            "type": [
              "CSSProperties = {"
            ],
            "title": "conststyle",
            "option": false,
            "valueType": "text"
          },
          "[mainAxis]": {
            "enum": [],
            "type": [
              "calcMainAxis()"
            ],
            "title": "[mainAxis]",
            "option": false,
            "valueType": "text"
          },
          "returnprops.reverse'bottom'": {
            "enum": [],
            "type": [
              "'top';"
            ],
            "title": "returnprops.reverse'bottom'",
            "option": true,
            "valueType": "text"
          },
          "returnprops.reverse'right'": {
            "enum": [],
            "type": [
              "'left';"
            ],
            "title": "returnprops.reverse'right'",
            "option": true,
            "valueType": "text"
          },
          "returnleft>right[right,left]": {
            "enum": [],
            "type": [
              "[left right];"
            ],
            "title": "returnleft>right[right,left]",
            "option": true,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' value);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "consttotal=verticalrect.height": {
            "enum": [],
            "type": [
              "rect.width;"
            ],
            "title": "consttotal=verticalrect.height",
            "option": true,
            "valueType": "text"
          },
          "constdelta=props.verticaltouch.deltaY.value": {
            "enum": [],
            "type": [
              "touch.deltaX.value;"
            ],
            "title": "constdelta=props.verticaltouch.deltaY.value",
            "option": true,
            "valueType": "text"
          },
          "consttotal=props.verticalrect.height": {
            "enum": [],
            "type": [
              "rect.width;"
            ],
            "title": "consttotal=props.verticalrect.height",
            "option": true,
            "valueType": "text"
          },
          "constindex=props.reverse1-buttonIndex": {
            "enum": [],
            "type": [
              "buttonIndex;"
            ],
            "title": "constindex=props.reverse1-buttonIndex",
            "option": true,
            "valueType": "text"
          },
          "returnbem('button-wrapper',props.reverse'left'": {
            "enum": [],
            "type": [
              "'right');"
            ],
            "title": "returnbem('button-wrapper',props.reverse'left'",
            "option": true,
            "valueType": "text"
          },
          "constslot=slots[index===0'left-button'": {
            "enum": [],
            "type": [
              "'right-button'];"
            ],
            "title": "constslot=slots[index===0'left-button'",
            "option": true,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "number"
            ],
            "title": "",
            "option": false,
            "valueType": "digit"
          },
          "tabindex={props.disabledundefined": {
            "enum": [],
            "type": [
              "0}"
            ],
            "title": "tabindex={props.disabledundefined",
            "option": true,
            "valueType": "text"
          },
          "aria-orientation={props.vertical'vertical'": {
            "enum": [],
            "type": [
              "'horizontal'}"
            ],
            "title": "aria-orientation={props.vertical'vertical'",
            "option": true,
            "valueType": "text"
          },
          "target": {
            "enum": [],
            "type": [
              "slider"
            ],
            "title": "target",
            "option": false,
            "valueType": "text"
          },
          "{props.range[renderButton(0),renderButton(1)]": {
            "enum": [],
            "type": [
              "renderButton()}"
            ],
            "title": "{props.range[renderButton(0),renderButton(1)]",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constisRange=(val",
          "constformat=(value",
          "consthandleRangeValue=(value",
          "constupdateValue=(value",
          "constonClick=(event",
          "constonTouchStart=(event",
          "constonTouchMove=(event",
          "constonTouchEnd=(event",
          "constgetButtonClassName=(index",
          "constrenderButtonContent=(value",
          "constrenderButton=(index"
        ],
        "properties": {
          "constisRange=(val": {
            "value": "unknown): val is NumberRange =>",
            "title": "constisRange=(val",
            "description": "constisRange=(val",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constformat=(value": {
            "value": "number) => {",
            "title": "constformat=(value",
            "description": "constformat=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "consthandleRangeValue=(value": {
            "value": "NumberRange) => {",
            "title": "consthandleRangeValue=(value",
            "description": "consthandleRangeValue=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constupdateValue=(value": {
            "value": "SliderValue end?: boolean) => {",
            "title": "constupdateValue=(value",
            "description": "constupdateValue=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClick=(event": {
            "value": "MouseEvent) => {",
            "title": "constonClick=(event",
            "description": "constonClick=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonTouchStart=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchStart=(event",
            "description": "constonTouchStart=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonTouchMove=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchMove=(event",
            "description": "constonTouchMove=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonTouchEnd=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchEnd=(event",
            "description": "constonTouchEnd=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constgetButtonClassName=(index": {
            "value": "0 | 1) => {",
            "title": "constgetButtonClassName=(index",
            "description": "constgetButtonClassName=(index",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderButtonContent=(value": {
            "value": "number index?: 0 | 1) => {",
            "title": "constrenderButtonContent=(value",
            "description": "constrenderButtonContent=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderButton=(index": {
            "value": "0 | 1) => {",
            "title": "constrenderButton=(index",
            "description": "constrenderButton=(index",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "滑动输入条，用于在给定的范围内选择一个值。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Stepper",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Stepper 步进器",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Stepper",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "min",
          "max",
          "name",
          "step",
          "theme",
          "integer",
          "disabled",
          "showPlus",
          "showMinus",
          "showInput",
          "longPress",
          "autoFixed",
          "allowEmpty",
          "modelValue",
          "inputWidth",
          "buttonSize",
          "placeholder",
          "disablePlus",
          "disableMinus",
          "disableInput",
          "beforeChange",
          "defaultValue",
          "decimalLength",
          "props",
          "emits",
          "'update",
          "emit('update",
          "letactionType",
          "width",
          "height",
          "args",
          "letisLongPress",
          "letlongPressTimer",
          "//see",
          "onTouchend",
          "onTouchcancel",
          "emit('change',value,{name",
          "bem('minus',{disabled",
          "{[HAPTICS_FEEDBACK]",
          "bem('plus',{disabled"
        ],
        "properties": {
          "min": {
            "enum": [],
            "type": [
              "makeNumericProp(1)"
            ],
            "title": "min",
            "option": false,
            "valueType": "text"
          },
          "max": {
            "enum": [],
            "type": [
              "makeNumericProp(Infinity)"
            ],
            "title": "max",
            "option": false,
            "valueType": "text"
          },
          "name": {
            "enum": [],
            "type": [
              "makeNumericProp('')"
            ],
            "title": "name",
            "option": false,
            "valueType": "text"
          },
          "step": {
            "enum": [],
            "type": [
              "makeNumericProp(1)"
            ],
            "title": "step",
            "option": false,
            "valueType": "text"
          },
          "theme": {
            "enum": [],
            "type": [
              "String as PropType<StepperTheme>"
            ],
            "title": "theme",
            "option": false,
            "valueType": "text"
          },
          "integer": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "integer",
            "option": false,
            "valueType": "switch"
          },
          "disabled": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "switch"
          },
          "showPlus": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showPlus",
            "option": false,
            "valueType": "text"
          },
          "showMinus": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showMinus",
            "option": false,
            "valueType": "text"
          },
          "showInput": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showInput",
            "option": false,
            "valueType": "text"
          },
          "longPress": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "longPress",
            "option": false,
            "valueType": "text"
          },
          "autoFixed": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "autoFixed",
            "option": false,
            "valueType": "text"
          },
          "allowEmpty": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "allowEmpty",
            "option": false,
            "valueType": "switch"
          },
          "modelValue": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "text"
          },
          "inputWidth": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "inputWidth",
            "option": false,
            "valueType": "text"
          },
          "buttonSize": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "buttonSize",
            "option": false,
            "valueType": "text"
          },
          "placeholder": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "placeholder",
            "option": false,
            "valueType": "text"
          },
          "disablePlus": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disablePlus",
            "option": false,
            "valueType": "switch"
          },
          "disableMinus": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disableMinus",
            "option": false,
            "valueType": "switch"
          },
          "disableInput": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disableInput",
            "option": false,
            "valueType": "switch"
          },
          "beforeChange": {
            "enum": [],
            "type": [
              "Function as PropType<Interceptor>"
            ],
            "title": "beforeChange",
            "option": false,
            "valueType": "text"
          },
          "defaultValue": {
            "enum": [],
            "type": [
              "makeNumericProp(1)"
            ],
            "title": "defaultValue",
            "option": false,
            "valueType": "text"
          },
          "decimalLength": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "decimalLength",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "stepperProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "["
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "'update": {
            "enum": [],
            "type": [
              "modelValue'"
            ],
            "title": "'update",
            "option": false,
            "valueType": "text"
          },
          "value=value===''0": {
            "enum": [],
            "type": [
              "+value;"
            ],
            "title": "value=value===''0",
            "option": true,
            "valueType": "text"
          },
          "value=Number.isNaN(value)+min": {
            "enum": [],
            "type": [
              "value;"
            ],
            "title": "value=Number.isNaN(value)+min",
            "option": true,
            "valueType": "text"
          },
          "value=autoFixedMath.max(Math.min(+max,value),+min)": {
            "enum": [],
            "type": [
              "value;"
            ],
            "title": "value=autoFixedMath.max(Math.min(+max,value),+min)",
            "option": true,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' value);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "letactionType": {
            "enum": [
              "plus",
              "minus;"
            ],
            "type": [
              "string"
            ],
            "title": "letactionType",
            "option": false,
            "valueType": "select"
          },
          "width": {
            "enum": [],
            "type": [
              "addUnit(props.inputWidth)"
            ],
            "title": "width",
            "option": false,
            "valueType": "text"
          },
          "height": {
            "enum": [],
            "type": [
              "addUnit(props.buttonSize)"
            ],
            "title": "height",
            "option": false,
            "valueType": "text"
          },
          "args": {
            "enum": [],
            "type": [
              "[value]"
            ],
            "title": "args",
            "option": false,
            "valueType": "text"
          },
          "constdiff=actionType==='minus'-props.step": {
            "enum": [],
            "type": [
              "+props.step;"
            ],
            "title": "constdiff=actionType==='minus'-props.step",
            "option": true,
            "valueType": "text"
          },
          "setValue(isNumeric+formatted": {
            "enum": [],
            "type": [
              "formatted);"
            ],
            "title": "setValue(isNumeric+formatted",
            "option": true,
            "valueType": "text"
          },
          "letisLongPress": {
            "enum": [],
            "type": [
              "boolean;"
            ],
            "title": "letisLongPress",
            "option": false,
            "valueType": "text"
          },
          "letlongPressTimer": {
            "enum": [],
            "type": [
              "ReturnType<typeof setTimeout>;"
            ],
            "title": "letlongPressTimer",
            "option": false,
            "valueType": "text"
          },
          "//see": {
            "enum": [],
            "type": [
              "https://github.com/vant-ui/vant/issues/7690"
            ],
            "title": "//see",
            "option": false,
            "valueType": "text"
          },
          "onTouchend": {
            "enum": [],
            "type": [
              "onTouchEnd"
            ],
            "title": "onTouchend",
            "option": false,
            "valueType": "text"
          },
          "onTouchcancel": {
            "enum": [],
            "type": [
              "onTouchEnd"
            ],
            "title": "onTouchcancel",
            "option": false,
            "valueType": "text"
          },
          "emit('change',value,{name": {
            "enum": [],
            "type": [
              "props.name });"
            ],
            "title": "emit('change',value,{name",
            "option": false,
            "valueType": "text"
          },
          "bem('minus',{disabled": {
            "enum": [],
            "type": [
              "minusDisabled.value })"
            ],
            "title": "bem('minus',{disabled",
            "option": false,
            "valueType": "text"
          },
          "{[HAPTICS_FEEDBACK]": {
            "enum": [],
            "type": [
              "!plusDisabled.value }"
            ],
            "title": "{[HAPTICS_FEEDBACK]",
            "option": false,
            "valueType": "text"
          },
          "type={props.integer'tel'": {
            "enum": [],
            "type": [
              "'text'}"
            ],
            "title": "type={props.integer'tel'",
            "option": true,
            "valueType": "text"
          },
          "inputmode={props.integer'numeric'": {
            "enum": [],
            "type": [
              "'decimal'}"
            ],
            "title": "inputmode={props.integer'numeric'",
            "option": true,
            "valueType": "text"
          },
          "bem('plus',{disabled": {
            "enum": [],
            "type": [
              "plusDisabled.value })"
            ],
            "title": "bem('plus',{disabled",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constformat=(value",
          "constsetValue=(value",
          "constonInput=(event",
          "constonFocus=(event",
          "constonBlur=(event",
          "constonTouchEnd=(event",
          "constonMousedown=(event",
          "constcreateListeners=(type",
          "onClick",
          "onTouchstartPassive"
        ],
        "properties": {
          "constformat=(value": {
            "value": "Numeric autoFixed = true) => {",
            "title": "constformat=(value",
            "description": "constformat=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constsetValue=(value": {
            "value": "Numeric) => {",
            "title": "constsetValue=(value",
            "description": "constsetValue=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonInput=(event": {
            "value": "Event) => {",
            "title": "constonInput=(event",
            "description": "constonInput=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonFocus=(event": {
            "value": "Event) => {",
            "title": "constonFocus=(event",
            "description": "constonFocus=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonBlur=(event": {
            "value": "Event) => {",
            "title": "constonBlur=(event",
            "description": "constonBlur=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonTouchEnd=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchEnd=(event",
            "description": "constonTouchEnd=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonMousedown=(event": {
            "value": "MouseEvent) => {",
            "title": "constonMousedown=(event",
            "description": "constonMousedown=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constcreateListeners=(type": {
            "value": "typeof actionType) => ({",
            "title": "constcreateListeners=(type",
            "description": "constcreateListeners=(type",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "onClick": {
            "value": "(event: MouseEvent) => {",
            "title": "onClick",
            "description": "onClick",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "onTouchstartPassive": {
            "value": "() => {",
            "title": "onTouchstartPassive",
            "description": "onTouchstartPassive",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "步进器由增加按钮、减少按钮和输入框组成，用于在一定范围内输入、调整数字。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Switch",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Switch 开关",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Switch",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "size",
          "loading",
          "disabled",
          "modelValue",
          "activeColor",
          "inactiveColor",
          "activeValue",
          "type",
          "default",
          "inactiveValue",
          "props",
          "emits",
          "emit('update",
          "fontSize",
          "backgroundColor",
          "on"
        ],
        "properties": {
          "size": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "size",
            "option": false,
            "valueType": "text"
          },
          "loading": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "loading",
            "option": false,
            "valueType": "switch"
          },
          "disabled": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "switch"
          },
          "modelValue": {
            "enum": [],
            "type": [
              "unknownProp"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "text"
          },
          "activeColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "activeColor",
            "option": false,
            "valueType": "text"
          },
          "inactiveColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "inactiveColor",
            "option": false,
            "valueType": "text"
          },
          "activeValue": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "activeValue",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "unknownProp"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "false as unknown"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "inactiveValue": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "inactiveValue",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "switchProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['change' 'update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "constnewValue=isChecked()props.inactiveValue": {
            "enum": [],
            "type": [
              "props.activeValue;"
            ],
            "title": "constnewValue=isChecked()props.inactiveValue",
            "option": true,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' newValue);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "constcolor=isChecked()props.activeColor": {
            "enum": [],
            "type": [
              "props.inactiveColor;"
            ],
            "title": "constcolor=isChecked()props.activeColor",
            "option": true,
            "valueType": "text"
          },
          "fontSize": {
            "enum": [],
            "type": [
              "addUnit(size)"
            ],
            "title": "fontSize",
            "option": false,
            "valueType": "text"
          },
          "backgroundColor": {
            "enum": [],
            "type": [
              "checked ? activeColor : inactiveColor"
            ],
            "title": "backgroundColor",
            "option": false,
            "valueType": "text"
          },
          "on": {
            "enum": [],
            "type": [
              "checked"
            ],
            "title": "on",
            "option": false,
            "valueType": "text"
          },
          "tabindex={disabledundefined": {
            "enum": [],
            "type": [
              "0}"
            ],
            "title": "tabindex={disabledundefined",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于在打开和关闭状态之间进行切换。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Uploader",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Uploader 文件上传",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Uploader",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "name",
          "accept",
          "capture",
          "multiple",
          "disabled",
          "readonly",
          "lazyLoad",
          "maxCount",
          "imageFit",
          "resultType",
          "uploadIcon",
          "uploadText",
          "deletable",
          "afterRead",
          "showUpload",
          "modelValue",
          "beforeRead",
          "beforeDelete",
          "previewSize",
          "previewImage",
          "previewOptions",
          "previewFullImage",
          "maxSize",
          "type",
          "default",
          "props",
          "emits",
          "'update",
          "consturls",
          "items",
          "emit('update",
          "constresult",
          "status",
          "message",
          "file",
          "letimagePreview",
          "startPosition",
          "onClose",
          "class={bem('upload',{readonly",
          "<divclass={bem('wrapper',{disabled"
        ],
        "properties": {
          "name": {
            "enum": [],
            "type": [
              "props.name"
            ],
            "title": "name",
            "option": false,
            "valueType": "text"
          },
          "accept": {
            "enum": [],
            "type": [
              "makeStringProp('image/*')"
            ],
            "title": "accept",
            "option": false,
            "valueType": "text"
          },
          "capture": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "capture",
            "option": false,
            "valueType": "text"
          },
          "multiple": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "multiple",
            "option": false,
            "valueType": "switch"
          },
          "disabled": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "switch"
          },
          "readonly": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "readonly",
            "option": false,
            "valueType": "switch"
          },
          "lazyLoad": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "lazyLoad",
            "option": false,
            "valueType": "switch"
          },
          "maxCount": {
            "enum": [],
            "type": [
              "makeNumericProp(Infinity)"
            ],
            "title": "maxCount",
            "option": false,
            "valueType": "text"
          },
          "imageFit": {
            "enum": [],
            "type": [
              "makeStringProp<ImageFit>('cover')"
            ],
            "title": "imageFit",
            "option": false,
            "valueType": "text"
          },
          "resultType": {
            "enum": [],
            "type": [
              "makeStringProp<UploaderResultType>('dataUrl')"
            ],
            "title": "resultType",
            "option": false,
            "valueType": "text"
          },
          "uploadIcon": {
            "enum": [],
            "type": [
              "makeStringProp('photograph')"
            ],
            "title": "uploadIcon",
            "option": false,
            "valueType": "text"
          },
          "uploadText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "uploadText",
            "option": false,
            "valueType": "text"
          },
          "deletable": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "deletable",
            "option": false,
            "valueType": "text"
          },
          "afterRead": {
            "enum": [],
            "type": [
              "Function as PropType<UploaderAfterRead>"
            ],
            "title": "afterRead",
            "option": false,
            "valueType": "text"
          },
          "showUpload": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showUpload",
            "option": false,
            "valueType": "text"
          },
          "modelValue": {
            "enum": [],
            "type": [
              "makeArrayProp<UploaderFileListItem>()"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "text"
          },
          "beforeRead": {
            "enum": [],
            "type": [
              "Function as PropType<UploaderBeforeRead>"
            ],
            "title": "beforeRead",
            "option": false,
            "valueType": "text"
          },
          "beforeDelete": {
            "enum": [],
            "type": [
              "Function as PropType<Interceptor>"
            ],
            "title": "beforeDelete",
            "option": false,
            "valueType": "text"
          },
          "previewSize": {
            "enum": [],
            "type": [
              "[Number String Array] as PropType<"
            ],
            "title": "previewSize",
            "option": false,
            "valueType": "text"
          },
          "previewImage": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "previewImage",
            "option": false,
            "valueType": "text"
          },
          "previewOptions": {
            "enum": [],
            "type": [
              "Object as PropType<Partial<ImagePreviewOptions>>"
            ],
            "title": "previewOptions",
            "option": false,
            "valueType": "text"
          },
          "previewFullImage": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "previewFullImage",
            "option": false,
            "valueType": "text"
          },
          "maxSize": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "maxSize",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "[Number String Function] as PropType<UploaderMaxSize>"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "Infinity"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "uploaderProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "["
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "'update": {
            "enum": [],
            "type": [
              "modelValue'"
            ],
            "title": "'update",
            "option": false,
            "valueType": "text"
          },
          "consturls": {
            "enum": [],
            "type": [
              "string[] = [];"
            ],
            "title": "consturls",
            "option": false,
            "valueType": "text"
          },
          "items": {
            "enum": [],
            "type": [
              "UploaderFileListItem ",
              " UploaderFileListItem[]"
            ],
            "title": "items",
            "option": false,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' fileList);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "constresult": {
            "enum": [],
            "type": [
              "UploaderFileListItem = {"
            ],
            "title": "constresult",
            "option": false,
            "valueType": "text"
          },
          "status": {
            "enum": [],
            "type": [
              "''"
            ],
            "title": "status",
            "option": false,
            "valueType": "text"
          },
          "message": {
            "enum": [],
            "type": [
              "''"
            ],
            "title": "message",
            "option": false,
            "valueType": "text"
          },
          "file": {
            "enum": [],
            "type": [
              "files as File"
            ],
            "title": "file",
            "option": false,
            "valueType": "text"
          },
          "files.length===1files[0]": {
            "enum": [],
            "type": [
              "([].slice.call(files) as File[]);"
            ],
            "title": "files.length===1files[0]",
            "option": true,
            "valueType": "text"
          },
          "letimagePreview": {
            "enum": [],
            "type": [
              "ComponentInstance ",
              " undefined;"
            ],
            "title": "letimagePreview",
            "option": false,
            "valueType": "text"
          },
          "startPosition": {
            "enum": [],
            "type": [
              "imageFiles.indexOf(item)"
            ],
            "title": "startPosition",
            "option": false,
            "valueType": "text"
          },
          "onClose": {
            "enum": [],
            "type": [
              "onClosePreview"
            ],
            "title": "onClose",
            "option": false,
            "valueType": "text"
          },
          "constInput=props.readonlynull": {
            "enum": [],
            "type": [
              "("
            ],
            "title": "constInput=props.readonlynull",
            "option": true,
            "valueType": "text"
          },
          "class={bem('upload',{readonly": {
            "enum": [],
            "type": [
              "props.readonly })}"
            ],
            "title": "class={bem('upload',{readonly",
            "option": false,
            "valueType": "text"
          },
          "<divclass={bem('wrapper',{disabled": {
            "enum": [],
            "type": [
              "props.disabled })}>"
            ],
            "title": "<divclass={bem('wrapper',{disabled",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constreadFile=(files",
          "constonChange=(event",
          "constpreviewImage=(item",
          "constdeleteFile=(item",
          "constrenderPreviewItem=(item",
          "constonClickUpload=(event"
        ],
        "properties": {
          "constreadFile=(files": {
            "value": "File | File[]) => {",
            "title": "constreadFile=(files",
            "description": "constreadFile=(files",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonChange=(event": {
            "value": "Event) => {",
            "title": "constonChange=(event",
            "description": "constonChange=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constpreviewImage=(item": {
            "value": "UploaderFileListItem) => {",
            "title": "constpreviewImage=(item",
            "description": "constpreviewImage=(item",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constdeleteFile=(item": {
            "value": "UploaderFileListItem index: number) => {",
            "title": "constdeleteFile=(item",
            "description": "constdeleteFile=(item",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderPreviewItem=(item": {
            "value": "UploaderFileListItem index: number) => {",
            "title": "constrenderPreviewItem=(item",
            "description": "constrenderPreviewItem=(item",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickUpload=(event": {
            "value": "MouseEvent) => emit('clickUpload' event);",
            "title": "constonClickUpload=(event",
            "description": "constonClickUpload=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于将本地的图片或文件上传至服务器，并在上传过程中展示预览图和上传进度。目前 Uploader 组件不包含将文件上传至服务器的接口逻辑，该步骤需要自行实现。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "ActionSheet",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "ActionSheet 动作面板",
        "description": "组件名称"
      },
      "tagName": {
        "title": "ActionSheet",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "title",
          "round",
          "actions",
          "closeIcon",
          "closeable",
          "cancelText",
          "description",
          "closeOnPopstate",
          "closeOnClickAction",
          "safeAreaInsetBottom",
          "props",
          "emits",
          "",
          "onUpdate"
        ],
        "properties": {
          "title": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "title",
            "option": false,
            "valueType": "text"
          },
          "round": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "round",
            "option": false,
            "valueType": "text"
          },
          "actions": {
            "enum": [],
            "type": [
              "makeArrayProp<ActionSheetAction>()"
            ],
            "title": "actions",
            "option": false,
            "valueType": "text"
          },
          "closeIcon": {
            "enum": [],
            "type": [
              "makeStringProp('cross')"
            ],
            "title": "closeIcon",
            "option": false,
            "valueType": "text"
          },
          "closeable": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "closeable",
            "option": false,
            "valueType": "text"
          },
          "cancelText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "cancelText",
            "option": false,
            "valueType": "text"
          },
          "description": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "description",
            "option": false,
            "valueType": "text"
          },
          "closeOnPopstate": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "closeOnPopstate",
            "option": false,
            "valueType": "text"
          },
          "closeOnClickAction": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "closeOnClickAction",
            "option": false,
            "valueType": "switch"
          },
          "safeAreaInsetBottom": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "safeAreaInsetBottom",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "actionSheetProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['select' 'cancel' 'update:show']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "{slots.cancelslots.cancel()": {
            "enum": [],
            "type": [
              "props.cancelText}"
            ],
            "title": "{slots.cancelslots.cancel()",
            "option": true,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "props.description;"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          },
          "onUpdate": {
            "enum": [],
            "type": [
              "show={updateShow}"
            ],
            "title": "onUpdate",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constupdateShow=(show",
          "constrenderActionContent=(action",
          "constrenderAction=(action"
        ],
        "properties": {
          "constupdateShow=(show": {
            "value": "boolean) => emit('update:show' show);",
            "title": "constupdateShow=(show",
            "description": "constupdateShow=(show",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderActionContent=(action": {
            "value": "ActionSheetAction index: number) => {",
            "title": "constrenderActionContent=(action",
            "description": "constrenderActionContent=(action",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderAction=(action": {
            "value": "ActionSheetAction index: number) => {",
            "title": "constrenderAction=(action",
            "description": "constrenderAction=(action",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "底部弹起的模态面板，包含与当前情境相关的多个选项。",
    "groupKey": "Action Components",
    "groupName": "反馈组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Loading",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Loading 加载",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Loading",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "size",
          "type",
          "color",
          "vertical",
          "textSize",
          "textColor",
          "props",
          "extend({color",
          "fontSize"
        ],
        "properties": {
          "size": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "size",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "makeStringProp<LoadingType>('circular')"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "color": {
            "enum": [],
            "type": [
              "props.textColor ?? props.color"
            ],
            "title": "color",
            "option": false,
            "valueType": "text"
          },
          "vertical": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "vertical",
            "option": false,
            "valueType": "switch"
          },
          "textSize": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "textSize",
            "option": false,
            "valueType": "text"
          },
          "textColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "textColor",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "loadingProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "extend({color": {
            "enum": [],
            "type": [
              "props.color } getSizeStyle(props.size))"
            ],
            "title": "extend({color",
            "option": false,
            "valueType": "text"
          },
          "constDefaultIcon=props.type==='spinner'SpinIcon": {
            "enum": [],
            "type": [
              "CircularIcon;"
            ],
            "title": "constDefaultIcon=props.type==='spinner'SpinIcon",
            "option": true,
            "valueType": "text"
          },
          "{slots.iconslots.icon()": {
            "enum": [],
            "type": [
              "DefaultIcon}"
            ],
            "title": "{slots.iconslots.icon()",
            "option": true,
            "valueType": "text"
          },
          "fontSize": {
            "enum": [],
            "type": [
              "addUnit(props.textSize)"
            ],
            "title": "fontSize",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "加载图标，用于表示加载中的过渡状态。",
    "groupKey": "Action Components",
    "groupName": "反馈组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Notify",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Notify 消息提示",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Notify",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "type",
          "color",
          "message",
          "position",
          "className",
          "background",
          "lockScroll",
          "props",
          "emits",
          "onUpdate"
        ],
        "properties": {
          "type": {
            "enum": [],
            "type": [
              "makeStringProp<NotifyType>('danger')"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "color": {
            "enum": [],
            "type": [
              "props.color"
            ],
            "title": "color",
            "option": false,
            "valueType": "text"
          },
          "message": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "message",
            "option": false,
            "valueType": "text"
          },
          "position": {
            "enum": [],
            "type": [
              "makeStringProp<NotifyPosition>('top')"
            ],
            "title": "position",
            "option": false,
            "valueType": "text"
          },
          "className": {
            "enum": [],
            "type": [
              "unknownProp"
            ],
            "title": "className",
            "option": false,
            "valueType": "text"
          },
          "background": {
            "enum": [],
            "type": [
              "props.background"
            ],
            "title": "background",
            "option": false,
            "valueType": "text"
          },
          "lockScroll": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "lockScroll",
            "option": false,
            "valueType": "switch"
          },
          "props": {
            "enum": [],
            "type": [
              "notifyProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['update:show']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "onUpdate": {
            "enum": [],
            "type": [
              "show={updateShow}"
            ],
            "title": "onUpdate",
            "option": false,
            "valueType": "text"
          },
          "{slots.defaultslots.default()": {
            "enum": [],
            "type": [
              "props.message}"
            ],
            "title": "{slots.defaultslots.default()",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constupdateShow=(show"
        ],
        "properties": {
          "constupdateShow=(show": {
            "value": "boolean) => emit('update:show' show);",
            "title": "constupdateShow=(show",
            "description": "constupdateShow=(show",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "在页面顶部展示消息提示，支持组件调用和函数调用两种方式。",
    "groupKey": "Action Components",
    "groupName": "反馈组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "PullRefresh",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "PullRefresh 下拉刷新",
        "description": "组件名称"
      },
      "tagName": {
        "title": "PullRefresh",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "disabled",
          "modelValue",
          "headHeight",
          "successText",
          "pullingText",
          "loosingText",
          "loadingText",
          "pullDistance",
          "successDuration",
          "animationDuration",
          "props",
          "emits",
          "letreachTop",
          "status",
          "distance",
          "duration",
          "height",
          "constnodes",
          "v-slots={{default",
          "emit('update",
          "target",
          "transitionDuration",
          "transform",
          ""
        ],
        "properties": {
          "disabled": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "switch"
          },
          "modelValue": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "switch"
          },
          "headHeight": {
            "enum": [],
            "type": [
              "makeNumericProp(DEFAULT_HEAD_HEIGHT)"
            ],
            "title": "headHeight",
            "option": false,
            "valueType": "text"
          },
          "successText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "successText",
            "option": false,
            "valueType": "text"
          },
          "pullingText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "pullingText",
            "option": false,
            "valueType": "text"
          },
          "loosingText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "loosingText",
            "option": false,
            "valueType": "text"
          },
          "loadingText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "loadingText",
            "option": false,
            "valueType": "text"
          },
          "pullDistance": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "pullDistance",
            "option": false,
            "valueType": "text"
          },
          "successDuration": {
            "enum": [],
            "type": [
              "makeNumericProp(500)"
            ],
            "title": "successDuration",
            "option": false,
            "valueType": "text"
          },
          "animationDuration": {
            "enum": [],
            "type": [
              "makeNumericProp(300)"
            ],
            "title": "animationDuration",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "pullRefreshProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['change' 'refresh' 'update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "letreachTop": {
            "enum": [],
            "type": [
              "boolean;"
            ],
            "title": "letreachTop",
            "option": false,
            "valueType": "text"
          },
          "status": {
            "enum": [],
            "type": [
              "state.status"
            ],
            "title": "status",
            "option": false,
            "valueType": "text"
          },
          "distance": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "distance",
            "option": false,
            "valueType": "text"
          },
          "duration": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "duration",
            "option": false,
            "valueType": "text"
          },
          "height": {
            "enum": [],
            "type": [
              "`${props.headHeight}px`"
            ],
            "title": "height",
            "option": false,
            "valueType": "text"
          },
          "constnodes": {
            "enum": [],
            "type": [
              "JSX.Element[] = [];"
            ],
            "title": "constnodes",
            "option": false,
            "valueType": "text"
          },
          "v-slots={{default": {
            "enum": [],
            "type": [
              "getStatusText }}"
            ],
            "title": "v-slots={{default",
            "option": false,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' true);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "target": {
            "enum": [],
            "type": [
              "track"
            ],
            "title": "target",
            "option": false,
            "valueType": "text"
          },
          "transitionDuration": {
            "enum": [],
            "type": [
              "`${state.duration}ms`"
            ],
            "title": "transitionDuration",
            "option": false,
            "valueType": "text"
          },
          "transform": {
            "enum": [],
            "type": [
              "state.distance"
            ],
            "title": "transform",
            "option": false,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "''"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constease=(distance",
          "constsetStatus=(distance",
          "constcheckPosition=(event",
          "constonTouchStart=(event",
          "constonTouchMove=(event"
        ],
        "properties": {
          "constease=(distance": {
            "value": "number) => {",
            "title": "constease=(distance",
            "description": "constease=(distance",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constsetStatus=(distance": {
            "value": "number isLoading?: boolean) => {",
            "title": "constsetStatus=(distance",
            "description": "constsetStatus=(distance",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constcheckPosition=(event": {
            "value": "TouchEvent) => {",
            "title": "constcheckPosition=(event",
            "description": "constcheckPosition=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonTouchStart=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchStart=(event",
            "description": "constonTouchStart=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonTouchMove=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchMove=(event",
            "description": "constonTouchMove=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于提供下拉刷新的交互操作。",
    "groupKey": "Action Components",
    "groupName": "反馈组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Overlay",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Overlay 遮罩层",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Overlay",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "show",
          "zIndex",
          "duration",
          "className",
          "lockScroll",
          "lazyRender",
          "customStyle",
          "props",
          "conststyle",
          "target",
          "<Transitionv-slots={{default"
        ],
        "properties": {
          "show": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "show",
            "option": false,
            "valueType": "switch"
          },
          "zIndex": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "zIndex",
            "option": false,
            "valueType": "text"
          },
          "duration": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "duration",
            "option": false,
            "valueType": "text"
          },
          "className": {
            "enum": [],
            "type": [
              "unknownProp"
            ],
            "title": "className",
            "option": false,
            "valueType": "text"
          },
          "lockScroll": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "lockScroll",
            "option": false,
            "valueType": "text"
          },
          "lazyRender": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "lazyRender",
            "option": false,
            "valueType": "text"
          },
          "customStyle": {
            "enum": [],
            "type": [
              "Object as PropType<CSSProperties>"
            ],
            "title": "customStyle",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "overlayProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "conststyle": {
            "enum": [],
            "type": [
              "CSSProperties = extend("
            ],
            "title": "conststyle",
            "option": false,
            "valueType": "text"
          },
          "target": {
            "enum": [],
            "type": [
              "root"
            ],
            "title": "target",
            "option": false,
            "valueType": "text"
          },
          "<Transitionv-slots={{default": {
            "enum": [],
            "type": [
              "renderOverlay }} name=\"van-fade\" appear />"
            ],
            "title": "<Transitionv-slots={{default",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constonTouchMove=(event"
        ],
        "properties": {
          "constonTouchMove=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchMove=(event",
            "description": "constonTouchMove=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "创建一个遮罩层，用于强调特定的页面元素，并阻止用户进行其他操作。",
    "groupKey": "Action Components",
    "groupName": "反馈组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "SwipeCell",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "swipeCell 滑动单元格",
        "description": "组件名称"
      },
      "tagName": {
        "title": "SwipeCell",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "name",
          "disabled",
          "leftWidth",
          "rightWidth",
          "beforeClose",
          "stopPropagation",
          "props",
          "emits",
          "letopened",
          "letlockClick",
          "letstartOffset",
          "offset",
          "dragging",
          "position",
          "args",
          "side",
          "ref",
          "useClickAway(root,()=>onClick('outside'),{eventName",
          "target",
          "transform",
          "transitionDuration"
        ],
        "properties": {
          "name": {
            "enum": [],
            "type": [
              "props.name"
            ],
            "title": "name",
            "option": false,
            "valueType": "text"
          },
          "disabled": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "switch"
          },
          "leftWidth": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "leftWidth",
            "option": false,
            "valueType": "text"
          },
          "rightWidth": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "rightWidth",
            "option": false,
            "valueType": "text"
          },
          "beforeClose": {
            "enum": [],
            "type": [
              "Function as PropType<Interceptor>"
            ],
            "title": "beforeClose",
            "option": false,
            "valueType": "text"
          },
          "stopPropagation": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "stopPropagation",
            "option": false,
            "valueType": "switch"
          },
          "props": {
            "enum": [],
            "type": [
              "swipeCellProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['open' 'close' 'click']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "letopened": {
            "enum": [],
            "type": [
              "boolean;"
            ],
            "title": "letopened",
            "option": false,
            "valueType": "text"
          },
          "letlockClick": {
            "enum": [],
            "type": [
              "boolean;"
            ],
            "title": "letlockClick",
            "option": false,
            "valueType": "text"
          },
          "letstartOffset": {
            "enum": [],
            "type": [
              "number"
            ],
            "title": "letstartOffset",
            "option": false,
            "valueType": "digit"
          },
          "offset": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "offset",
            "option": false,
            "valueType": "text"
          },
          "dragging": {
            "enum": [],
            "type": [
              "false"
            ],
            "title": "dragging",
            "option": false,
            "valueType": "text"
          },
          "ref.valueuseRect(ref).width": {
            "enum": [],
            "type": [
              "0;"
            ],
            "title": "ref.valueuseRect(ref).width",
            "option": true,
            "valueType": "text"
          },
          "isDef(props.leftWidth)+props.leftWidth": {
            "enum": [],
            "type": [
              "getWidthByRef(leftRef)"
            ],
            "title": "isDef(props.leftWidth)+props.leftWidth",
            "option": true,
            "valueType": "text"
          },
          "isDef(props.rightWidth)+props.rightWidth": {
            "enum": [],
            "type": [
              "getWidthByRef(rightRef)"
            ],
            "title": "isDef(props.rightWidth)+props.rightWidth",
            "option": true,
            "valueType": "text"
          },
          "state.offset=side==='left'leftWidth.value": {
            "enum": [],
            "type": [
              "-rightWidth.value;"
            ],
            "title": "state.offset=side==='left'leftWidth.value",
            "option": true,
            "valueType": "text"
          },
          "position": {
            "enum": [],
            "type": [
              "side"
            ],
            "title": "position",
            "option": false,
            "valueType": "text"
          },
          "constthreshold=opened1-THRESHOLD": {
            "enum": [],
            "type": [
              "THRESHOLD;"
            ],
            "title": "constthreshold=opened1-THRESHOLD",
            "option": true,
            "valueType": "text"
          },
          "constwidth=side==='left'leftWidth.value": {
            "enum": [],
            "type": [
              "rightWidth.value;"
            ],
            "title": "constwidth=side==='left'leftWidth.value",
            "option": true,
            "valueType": "text"
          },
          "toggle(state.offset>0'left'": {
            "enum": [],
            "type": [
              "'right');"
            ],
            "title": "toggle(state.offset>0'left'",
            "option": true,
            "valueType": "text"
          },
          "args": {
            "enum": [],
            "type": [
              "["
            ],
            "title": "args",
            "option": false,
            "valueType": "text"
          },
          "side": {
            "enum": [],
            "type": [
              "SwipeCellSide"
            ],
            "title": "side",
            "option": false,
            "valueType": "text"
          },
          "ref": {
            "enum": [],
            "type": [
              "Ref<HTMLElement ",
              " undefined>"
            ],
            "title": "ref",
            "option": false,
            "valueType": "text"
          },
          "useClickAway(root,()=>onClick('outside'),{eventName": {
            "enum": [],
            "type": [
              "'touchstart' });"
            ],
            "title": "useClickAway(root,()=>onClick('outside'),{eventName",
            "option": false,
            "valueType": "text"
          },
          "target": {
            "enum": [],
            "type": [
              "root"
            ],
            "title": "target",
            "option": false,
            "valueType": "text"
          },
          "transform": {
            "enum": [],
            "type": [
              "`translate3d(${state.offset}px 0 0)`"
            ],
            "title": "transform",
            "option": false,
            "valueType": "text"
          },
          "transitionDuration": {
            "enum": [],
            "type": [
              "state.dragging ? '0s' : '.6s'"
            ],
            "title": "transitionDuration",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constgetWidthByRef=(ref",
          "constopen=(side",
          "constclose=(position",
          "consttoggle=(side",
          "constonTouchStart=(event",
          "constonTouchMove=(event",
          "constonClick=(position",
          "done",
          "(position"
        ],
        "properties": {
          "constgetWidthByRef=(ref": {
            "value": "Ref<HTMLElement | undefined>) =>",
            "title": "constgetWidthByRef=(ref",
            "description": "constgetWidthByRef=(ref",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constopen=(side": {
            "value": "SwipeCellSide) => {",
            "title": "constopen=(side",
            "description": "constopen=(side",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constclose=(position": {
            "value": "SwipeCellPosition) => {",
            "title": "constclose=(position",
            "description": "constclose=(position",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "consttoggle=(side": {
            "value": "SwipeCellSide) => {",
            "title": "consttoggle=(side",
            "description": "consttoggle=(side",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonTouchStart=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchStart=(event",
            "description": "constonTouchStart=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonTouchMove=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchMove=(event",
            "description": "constonTouchMove=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClick=(position": {
            "value": "SwipeCellPosition = 'outside') => {",
            "title": "constonClick=(position",
            "description": "constonClick=(position",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "done": {
            "value": "() => close(position)",
            "title": "done",
            "description": "done",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "(position": {
            "value": "SwipeCellPosition stop?: boolean) => (event: MouseEvent) => {",
            "title": "(position",
            "description": "(position",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "可以左右滑动来展示操作按钮的单元格组件。",
    "groupKey": "Action Components",
    "groupName": "反馈组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Circle",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Circle 环形进度条",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Circle",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "text",
          "size",
          "fill",
          "rate",
          "speed",
          "color",
          "clockwise",
          "layerColor",
          "currentRate",
          "strokeWidth",
          "strokeLinecap",
          "startPosition",
          "props",
          "emits",
          "constROTATE_ANGLE_MAP",
          "top",
          "right",
          "bottom",
          "left",
          "transform",
          "letrafId",
          "emit('update",
          "{immediate",
          "conststyle",
          "stroke",
          "strokeDasharray"
        ],
        "properties": {
          "text": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "text",
            "option": false,
            "valueType": "text"
          },
          "size": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "size",
            "option": false,
            "valueType": "text"
          },
          "fill": {
            "enum": [],
            "type": [
              "props.fill"
            ],
            "title": "fill",
            "option": false,
            "valueType": "text"
          },
          "rate": {
            "enum": [],
            "type": [
              "makeNumericProp(100)"
            ],
            "title": "rate",
            "option": false,
            "valueType": "text"
          },
          "speed": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "speed",
            "option": false,
            "valueType": "text"
          },
          "color": {
            "enum": [],
            "type": [
              "[String Object] as PropType<string ",
              " Record<string string>>"
            ],
            "title": "color",
            "option": false,
            "valueType": "text"
          },
          "clockwise": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "clockwise",
            "option": false,
            "valueType": "text"
          },
          "layerColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "layerColor",
            "option": false,
            "valueType": "text"
          },
          "currentRate": {
            "enum": [],
            "type": [
              "makeNumberProp(0)"
            ],
            "title": "currentRate",
            "option": false,
            "valueType": "text"
          },
          "strokeWidth": {
            "enum": [],
            "type": [
              "`${props.strokeWidth}px`"
            ],
            "title": "strokeWidth",
            "option": false,
            "valueType": "text"
          },
          "strokeLinecap": {
            "enum": [],
            "type": [
              "String as PropType<CanvasLineCap>"
            ],
            "title": "strokeLinecap",
            "option": false,
            "valueType": "text"
          },
          "startPosition": {
            "enum": [],
            "type": [
              "makeStringProp<CircleStartPosition>('top')"
            ],
            "title": "startPosition",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "circleProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['update:currentRate']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "constROTATE_ANGLE_MAP": {
            "enum": [],
            "type": [
              "number"
            ],
            "title": "constROTATE_ANGLE_MAP",
            "option": false,
            "valueType": "digit"
          },
          "top": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "top",
            "option": false,
            "valueType": "text"
          },
          "right": {
            "enum": [],
            "type": [
              "90"
            ],
            "title": "right",
            "option": false,
            "valueType": "text"
          },
          "bottom": {
            "enum": [],
            "type": [
              "180"
            ],
            "title": "bottom",
            "option": false,
            "valueType": "text"
          },
          "left": {
            "enum": [],
            "type": [
              "270"
            ],
            "title": "left",
            "option": false,
            "valueType": "text"
          },
          "transform": {
            "enum": [],
            "type": [
              "`rotate(${angleValue}deg)`"
            ],
            "title": "transform",
            "option": false,
            "valueType": "text"
          },
          "letrafId": {
            "enum": [],
            "type": [
              "number"
            ],
            "title": "letrafId",
            "option": false,
            "valueType": "digit"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "currentRate' endRate);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "if(endRate>startRaterate<endRate": {
            "enum": [],
            "type": [
              "rate > endRate) {"
            ],
            "title": "if(endRate>startRaterate<endRate",
            "option": true,
            "valueType": "text"
          },
          "{immediate": {
            "enum": [],
            "type": [
              "true }"
            ],
            "title": "{immediate",
            "option": false,
            "valueType": "text"
          },
          "constcolor=isObject(props.color)`url(#${id})`": {
            "enum": [],
            "type": [
              "props.color;"
            ],
            "title": "constcolor=isObject(props.color)`url(#${id})`",
            "option": true,
            "valueType": "text"
          },
          "conststyle": {
            "enum": [],
            "type": [
              "CSSProperties = {"
            ],
            "title": "conststyle",
            "option": false,
            "valueType": "text"
          },
          "stroke": {
            "enum": [],
            "type": [
              "props.layerColor"
            ],
            "title": "stroke",
            "option": false,
            "valueType": "text"
          },
          "strokeDasharray": {
            "enum": [],
            "type": [
              "`${offset}px ${PERIMETER}px`"
            ],
            "title": "strokeDasharray",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "圆环形的进度条组件，支持进度渐变动画。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Collapse",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Collapse 折叠面板",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Collapse",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "border",
          "accordion",
          "modelValue",
          "type",
          "default",
          "'[Vant]Collapse",
          "props",
          "emits",
          "emit('update",
          "options={expanded",
          "",
          "<divclass={[bem(),{[BORDER_TOP_BOTTOM]"
        ],
        "properties": {
          "border": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "border",
            "option": false,
            "valueType": "text"
          },
          "accordion": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "accordion",
            "option": false,
            "valueType": "text"
          },
          "modelValue": {
            "enum": [],
            "type": [
              "Numeric ",
              " Numeric[]"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "[String Number Array] as PropType<Numeric ",
              " Numeric[]>"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "''"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "'[Vant]Collapse": {
            "enum": [],
            "type": [
              "\"v-model\" should be Array in non-accordion mode'"
            ],
            "title": "'[Vant]Collapse",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "collapseProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['change' 'update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' name);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "updateName(name===modelValue''": {
            "enum": [],
            "type": [
              "name);"
            ],
            "title": "updateName(name===modelValue''",
            "option": true,
            "valueType": "text"
          },
          "options={expanded": {
            "enum": [],
            "type": [
              "options };"
            ],
            "title": "options={expanded",
            "option": false,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "(modelValue as Numeric[]).includes(name);"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          },
          "<divclass={[bem(),{[BORDER_TOP_BOTTOM]": {
            "enum": [],
            "type": [
              "props.border }]}>"
            ],
            "title": "<divclass={[bem(),{[BORDER_TOP_BOTTOM]",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "toggleAll",
          "constupdateName=(name",
          "consttoggle=(name",
          "consttoggleAll=(options",
          "constexpandedChildren=children.filter((item",
          "constisExpanded=(name"
        ],
        "properties": {
          "toggleAll": {
            "value": "(options?: boolean | CollapseToggleAllOptions) => void;",
            "title": "toggleAll",
            "description": "toggleAll",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constupdateName=(name": {
            "value": "Numeric | Numeric[]) => {",
            "title": "constupdateName=(name",
            "description": "constupdateName=(name",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "consttoggle=(name": {
            "value": "Numeric expanded: boolean) => {",
            "title": "consttoggle=(name",
            "description": "consttoggle=(name",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "consttoggleAll=(options": {
            "value": "boolean | CollapseToggleAllOptions = {}) => {",
            "title": "consttoggleAll=(options",
            "description": "consttoggleAll=(options",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constexpandedChildren=children.filter((item": {
            "value": "any) => {",
            "title": "constexpandedChildren=children.filter((item",
            "description": "constexpandedChildren=children.filter((item",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constisExpanded=(name": {
            "value": "Numeric) => {",
            "title": "constisExpanded=(name",
            "description": "constisExpanded=(name",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "将一组内容放置在多个折叠面板中，点击面板的标题可以展开或收缩其内容。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "TimePicker",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "TimePicker 时间选择",
        "description": "组件名称"
      },
      "tagName": {
        "title": "TimePicker",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "minHour",
          "maxHour",
          "minMinute",
          "maxMinute",
          "minSecond",
          "maxSecond",
          "columnsType",
          "type",
          "props",
          "emits",
          "`[Vant]DatePicker",
          "emit('update",
          "{immediate"
        ],
        "properties": {
          "minHour": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "minHour",
            "option": false,
            "valueType": "text"
          },
          "maxHour": {
            "enum": [],
            "type": [
              "makeNumericProp(23)"
            ],
            "title": "maxHour",
            "option": false,
            "valueType": "text"
          },
          "minMinute": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "minMinute",
            "option": false,
            "valueType": "text"
          },
          "maxMinute": {
            "enum": [],
            "type": [
              "makeNumericProp(59)"
            ],
            "title": "maxMinute",
            "option": false,
            "valueType": "text"
          },
          "minSecond": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "minSecond",
            "option": false,
            "valueType": "text"
          },
          "maxSecond": {
            "enum": [],
            "type": [
              "makeNumericProp(59)"
            ],
            "title": "maxSecond",
            "option": false,
            "valueType": "text"
          },
          "columnsType": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "columnsType",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "Array as PropType<TimePickerColumnType[]>"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "timePickerProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['confirm' 'cancel' 'change' 'update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "`[Vant]DatePicker": {
            "enum": [],
            "type": [
              "unsupported columns type: ${type}`"
            ],
            "title": "`[Vant]DatePicker",
            "option": false,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' newValues);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "{immediate": {
            "enum": [],
            "type": [
              "true }"
            ],
            "title": "{immediate",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "default",
          "constonChange=(...args",
          "constonCancel=(...args",
          "constonConfirm=(...args"
        ],
        "properties": {
          "default": {
            "value": "() => ['hour' 'minute']",
            "title": "default",
            "description": "default",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonChange=(...args": {
            "value": "unknown[]) => emit('change' ...args);",
            "title": "constonChange=(...args",
            "description": "constonChange=(...args",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonCancel=(...args": {
            "value": "unknown[]) => emit('cancel' ...args);",
            "title": "constonCancel=(...args",
            "description": "constonCancel=(...args",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonConfirm=(...args": {
            "value": "unknown[]) => emit('confirm' ...args);",
            "title": "constonConfirm=(...args",
            "description": "constonConfirm=(...args",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "时间选择器，通常与弹出层组件配合使用。",
    "groupKey": "Form Components",
    "groupName": "表单组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Dialog",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Dialog 弹出框",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Dialog",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "title",
          "theme",
          "width",
          "message",
          "allowHtml",
          "className",
          "transition",
          "messageAlign",
          "closeOnPopstate",
          "showCancelButton",
          "cancelButtonText",
          "cancelButtonColor",
          "cancelButtonDisabled",
          "confirmButtonText",
          "confirmButtonColor",
          "confirmButtonDisabled",
          "showConfirmButton",
          "closeOnClickOverlay",
          "props",
          "emits",
          "confirm",
          "cancel",
          "args",
          "Enter",
          "Escape",
          "isolated",
          "'has-title'",
          "[messageAlignasstring]",
          "//see",
          "class={bem('content',{isolated",
          "style={{color",
          "class={[bem('confirm'),{[BORDER_LEFT]",
          "",
          "style={{width",
          "onUpdate"
        ],
        "properties": {
          "title": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "title",
            "option": false,
            "valueType": "text"
          },
          "theme": {
            "enum": [],
            "type": [
              "String as PropType<DialogTheme>"
            ],
            "title": "theme",
            "option": false,
            "valueType": "text"
          },
          "width": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "width",
            "option": false,
            "valueType": "text"
          },
          "message": {
            "enum": [],
            "type": [
              "[String Function] as PropType<DialogMessage>"
            ],
            "title": "message",
            "option": false,
            "valueType": "text"
          },
          "allowHtml": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "allowHtml",
            "option": false,
            "valueType": "switch"
          },
          "className": {
            "enum": [],
            "type": [
              "unknownProp"
            ],
            "title": "className",
            "option": false,
            "valueType": "text"
          },
          "transition": {
            "enum": [],
            "type": [
              "makeStringProp('van-dialog-bounce')"
            ],
            "title": "transition",
            "option": false,
            "valueType": "text"
          },
          "messageAlign": {
            "enum": [],
            "type": [
              "String as PropType<DialogMessageAlign>"
            ],
            "title": "messageAlign",
            "option": false,
            "valueType": "text"
          },
          "closeOnPopstate": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "closeOnPopstate",
            "option": false,
            "valueType": "text"
          },
          "showCancelButton": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "showCancelButton",
            "option": false,
            "valueType": "switch"
          },
          "cancelButtonText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "cancelButtonText",
            "option": false,
            "valueType": "text"
          },
          "cancelButtonColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "cancelButtonColor",
            "option": false,
            "valueType": "text"
          },
          "cancelButtonDisabled": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "cancelButtonDisabled",
            "option": false,
            "valueType": "switch"
          },
          "confirmButtonText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "confirmButtonText",
            "option": false,
            "valueType": "text"
          },
          "confirmButtonColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "confirmButtonColor",
            "option": false,
            "valueType": "text"
          },
          "confirmButtonDisabled": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "confirmButtonDisabled",
            "option": false,
            "valueType": "switch"
          },
          "showConfirmButton": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showConfirmButton",
            "option": false,
            "valueType": "text"
          },
          "closeOnClickOverlay": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "closeOnClickOverlay",
            "option": false,
            "valueType": "switch"
          },
          "props": {
            "enum": [],
            "type": [
              "dialogProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['confirm' 'cancel' 'keydown' 'update:show']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "confirm": {
            "enum": [],
            "type": [
              "false"
            ],
            "title": "confirm",
            "option": false,
            "valueType": "text"
          },
          "cancel": {
            "enum": [],
            "type": [
              "false"
            ],
            "title": "cancel",
            "option": false,
            "valueType": "text"
          },
          "args": {
            "enum": [],
            "type": [
              "[action]"
            ],
            "title": "args",
            "option": false,
            "valueType": "text"
          },
          "Enter": {
            "enum": [],
            "type": [
              "props.showConfirmButton ? onConfirm : noop"
            ],
            "title": "Enter",
            "option": false,
            "valueType": "text"
          },
          "Escape": {
            "enum": [],
            "type": [
              "props.showCancelButton ? onCancel : noop"
            ],
            "title": "Escape",
            "option": false,
            "valueType": "text"
          },
          "consttitle=slots.titleslots.title()": {
            "enum": [],
            "type": [
              "props.title;"
            ],
            "title": "consttitle=slots.titleslots.title()",
            "option": true,
            "valueType": "text"
          },
          "isolated": {
            "enum": [],
            "type": [
              "!props.message && !slots.default"
            ],
            "title": "isolated",
            "option": false,
            "valueType": "text"
          },
          "'has-title'": {
            "enum": [],
            "type": [
              "hasTitle"
            ],
            "title": "'has-title'",
            "option": false,
            "valueType": "text"
          },
          "[messageAlignasstring]": {
            "enum": [],
            "type": [
              "messageAlign"
            ],
            "title": "[messageAlignasstring]",
            "option": false,
            "valueType": "text"
          },
          "constcontent=isFunction(message)message()": {
            "enum": [],
            "type": [
              "message;"
            ],
            "title": "constcontent=isFunction(message)message()",
            "option": true,
            "valueType": "text"
          },
          "//see": {
            "enum": [],
            "type": [
              "https://github.com/vant-ui/vant/issues/7963"
            ],
            "title": "//see",
            "option": false,
            "valueType": "text"
          },
          "key={allowHtml1": {
            "enum": [],
            "type": [
              "0}"
            ],
            "title": "key={allowHtml1",
            "option": true,
            "valueType": "text"
          },
          "class={bem('content',{isolated": {
            "enum": [],
            "type": [
              "!hasTitle })}"
            ],
            "title": "class={bem('content',{isolated",
            "option": false,
            "valueType": "text"
          },
          "style={{color": {
            "enum": [],
            "type": [
              "props.confirmButtonColor }}"
            ],
            "title": "style={{color",
            "option": false,
            "valueType": "text"
          },
          "class={[bem('confirm'),{[BORDER_LEFT]": {
            "enum": [],
            "type": [
              "props.showCancelButton }]}"
            ],
            "title": "class={[bem('confirm'),{[BORDER_LEFT]",
            "option": false,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "renderButtons();"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          },
          "style={{width": {
            "enum": [],
            "type": [
              "addUnit(width) }}"
            ],
            "title": "style={{width",
            "option": false,
            "valueType": "text"
          },
          "onUpdate": {
            "enum": [],
            "type": [
              "show={updateShow}"
            ],
            "title": "onUpdate",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "callback",
          "constupdateShow=(value",
          "constclose=(action",
          "constgetActionHandler=(action",
          "(event",
          "constonEventType",
          "constrenderMessage=(hasTitle"
        ],
        "properties": {
          "callback": {
            "value": "Function as PropType<(action?: DialogAction) => void>",
            "title": "callback",
            "description": "callback",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constupdateShow=(value": {
            "value": "boolean) => emit('update:show' value);",
            "title": "constupdateShow=(value",
            "description": "constupdateShow=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constclose=(action": {
            "value": "DialogAction) => {",
            "title": "constclose=(action",
            "description": "constclose=(action",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constgetActionHandler=(action": {
            "value": "DialogAction) => () => {",
            "title": "constgetActionHandler=(action",
            "description": "constgetActionHandler=(action",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "(event": {
            "value": "KeyboardEvent) => {",
            "title": "(event",
            "description": "(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonEventType": {
            "value": "Record<string () => void> = {",
            "title": "constonEventType",
            "description": "constonEventType",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderMessage=(hasTitle": {
            "value": "boolean) => {",
            "title": "constrenderMessage=(hasTitle",
            "description": "constrenderMessage=(hasTitle",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "弹出模态框，常用于消息提示、消息确认，或在当前页面内完成特定的交互操作。支持组件调用和函数调用两种方式。",
    "groupKey": "Action Components",
    "groupName": "反馈组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "DropdownMenu",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "DropdownMenu 下拉菜单",
        "description": "组件名称"
      },
      "tagName": {
        "title": "DropdownMenu",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "overlay",
          "zIndex",
          "duration",
          "direction",
          "activeColor",
          "closeOnClickOutside",
          "closeOnClickOverlay",
          "exportconstDROPDOWN_KEY",
          "props",
          "item.toggle(false,{immediate",
          "class={[bem('item',{disabled}),{[HAPTICS_FEEDBACK]",
          "down",
          "active",
          "style={{color",
          "target",
          "passive",
          "class={bem('bar',{opened"
        ],
        "properties": {
          "overlay": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "overlay",
            "option": false,
            "valueType": "text"
          },
          "zIndex": {
            "enum": [],
            "type": [
              "+props.zIndex + 1"
            ],
            "title": "zIndex",
            "option": false,
            "valueType": "text"
          },
          "duration": {
            "enum": [],
            "type": [
              "makeNumericProp(0.2)"
            ],
            "title": "duration",
            "option": false,
            "valueType": "text"
          },
          "direction": {
            "enum": [],
            "type": [
              "makeStringProp<DropdownMenuDirection>('down')"
            ],
            "title": "direction",
            "option": false,
            "valueType": "text"
          },
          "activeColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "activeColor",
            "option": false,
            "valueType": "text"
          },
          "closeOnClickOutside": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "closeOnClickOutside",
            "option": false,
            "valueType": "text"
          },
          "closeOnClickOverlay": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "closeOnClickOverlay",
            "option": false,
            "valueType": "text"
          },
          "exportconstDROPDOWN_KEY": {
            "enum": [],
            "type": [
              "InjectionKey<DropdownMenuProvide> = Symbol(name);"
            ],
            "title": "exportconstDROPDOWN_KEY",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "dropdownMenuProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "item.toggle(false,{immediate": {
            "enum": [],
            "type": [
              "true });"
            ],
            "title": "item.toggle(false,{immediate",
            "option": false,
            "valueType": "text"
          },
          "tabindex={disabledundefined": {
            "enum": [],
            "type": [
              "0}"
            ],
            "title": "tabindex={disabledundefined",
            "option": true,
            "valueType": "text"
          },
          "class={[bem('item',{disabled}),{[HAPTICS_FEEDBACK]": {
            "enum": [],
            "type": [
              "!disabled }]}"
            ],
            "title": "class={[bem('item',{disabled}),{[HAPTICS_FEEDBACK]",
            "option": false,
            "valueType": "text"
          },
          "down": {
            "enum": [],
            "type": [
              "showPopup === (props.direction === 'down')"
            ],
            "title": "down",
            "option": false,
            "valueType": "text"
          },
          "active": {
            "enum": [],
            "type": [
              "showPopup"
            ],
            "title": "active",
            "option": false,
            "valueType": "text"
          },
          "style={{color": {
            "enum": [],
            "type": [
              "showPopup ? props.activeColor : '' }}"
            ],
            "title": "style={{color",
            "option": false,
            "valueType": "text"
          },
          "target": {
            "enum": [],
            "type": [
              "scrollParent"
            ],
            "title": "target",
            "option": false,
            "valueType": "text"
          },
          "passive": {
            "enum": [],
            "type": [
              "true"
            ],
            "title": "passive",
            "option": false,
            "valueType": "text"
          },
          "class={bem('bar',{opened": {
            "enum": [],
            "type": [
              "opened.value })}"
            ],
            "title": "class={bem('bar',{opened",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "consttoggleItem=(active",
          "constrenderTitle=(item"
        ],
        "properties": {
          "consttoggleItem=(active": {
            "value": "number) => {",
            "title": "consttoggleItem=(active",
            "description": "consttoggleItem=(active",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderTitle=(item": {
            "value": "ComponentInstance index: number) => {",
            "title": "constrenderTitle=(item",
            "description": "constrenderTitle=(item",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "向下弹出的菜单列表。",
    "groupKey": "Action Components",
    "groupName": "反馈组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "CountDown",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "CountDown 倒计时",
        "description": "组件名称"
      },
      "tagName": {
        "title": "CountDown",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "time",
          "format",
          "autoStart",
          "millisecond",
          "props",
          "emits",
          "watch(()=>props.time,resetTime,{immediate",
          "reset"
        ],
        "properties": {
          "time": {
            "enum": [],
            "type": [
              "+props.time"
            ],
            "title": "time",
            "option": false,
            "valueType": "text"
          },
          "format": {
            "enum": [],
            "type": [
              "makeStringProp('HH:mm:ss')"
            ],
            "title": "format",
            "option": false,
            "valueType": "text"
          },
          "autoStart": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "autoStart",
            "option": false,
            "valueType": "text"
          },
          "millisecond": {
            "enum": [],
            "type": [
              "props.millisecond"
            ],
            "title": "millisecond",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "countDownProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['change' 'finish']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "watch(()=>props.time,resetTime,{immediate": {
            "enum": [],
            "type": [
              "true });"
            ],
            "title": "watch(()=>props.time,resetTime,{immediate",
            "option": false,
            "valueType": "text"
          },
          "reset": {
            "enum": [],
            "type": [
              "resetTime"
            ],
            "title": "reset",
            "option": false,
            "valueType": "text"
          },
          "{slots.defaultslots.default(current.value)": {
            "enum": [],
            "type": [
              "timeText.value}"
            ],
            "title": "{slots.defaultslots.default(current.value)",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "onChange",
          "onFinish"
        ],
        "properties": {
          "onChange": {
            "value": "(current) => emit('change' current)",
            "title": "onChange",
            "description": "onChange",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "onFinish": {
            "value": "() => emit('finish')",
            "title": "onFinish",
            "description": "onFinish",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "将一组内容放置在多个折叠面板中，点击面板的标题可以展开或收缩其内容。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "ImagePreview",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "ImagePreview 图片预览",
        "description": "组件名称"
      },
      "tagName": {
        "title": "ImagePreview",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "show",
          "loop",
          "images",
          "minZoom",
          "maxZoom",
          "overlay",
          "closeable",
          "showIndex",
          "className",
          "closeIcon",
          "transition",
          "beforeClose",
          "overlayClass",
          "overlayStyle",
          "swipeDuration",
          "startPosition",
          "showIndicators",
          "closeOnPopstate",
          "closeIconPosition",
          "props",
          "emits",
          "active",
          "rootWidth",
          "rootHeight",
          "args",
          "",
          "image",
          "swipeTo(+startPosition,{immediate",
          "index",
          "url",
          "onUpdate"
        ],
        "properties": {
          "show": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "show",
            "option": false,
            "valueType": "switch"
          },
          "loop": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "loop",
            "option": false,
            "valueType": "text"
          },
          "images": {
            "enum": [],
            "type": [
              "makeArrayProp<string>()"
            ],
            "title": "images",
            "option": false,
            "valueType": "text"
          },
          "minZoom": {
            "enum": [],
            "type": [
              "makeNumericProp(1 / 3)"
            ],
            "title": "minZoom",
            "option": false,
            "valueType": "text"
          },
          "maxZoom": {
            "enum": [],
            "type": [
              "makeNumericProp(3)"
            ],
            "title": "maxZoom",
            "option": false,
            "valueType": "text"
          },
          "overlay": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "overlay",
            "option": false,
            "valueType": "text"
          },
          "closeable": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "closeable",
            "option": false,
            "valueType": "switch"
          },
          "showIndex": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showIndex",
            "option": false,
            "valueType": "text"
          },
          "className": {
            "enum": [],
            "type": [
              "unknownProp"
            ],
            "title": "className",
            "option": false,
            "valueType": "text"
          },
          "closeIcon": {
            "enum": [],
            "type": [
              "makeStringProp('clear')"
            ],
            "title": "closeIcon",
            "option": false,
            "valueType": "text"
          },
          "transition": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "transition",
            "option": false,
            "valueType": "text"
          },
          "beforeClose": {
            "enum": [],
            "type": [
              "Function as PropType<Interceptor>"
            ],
            "title": "beforeClose",
            "option": false,
            "valueType": "text"
          },
          "overlayClass": {
            "enum": [],
            "type": [
              "unknownProp"
            ],
            "title": "overlayClass",
            "option": false,
            "valueType": "text"
          },
          "overlayStyle": {
            "enum": [],
            "type": [
              "Object as PropType<CSSProperties>"
            ],
            "title": "overlayStyle",
            "option": false,
            "valueType": "text"
          },
          "swipeDuration": {
            "enum": [],
            "type": [
              "makeNumericProp(300)"
            ],
            "title": "swipeDuration",
            "option": false,
            "valueType": "text"
          },
          "startPosition": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "startPosition",
            "option": false,
            "valueType": "text"
          },
          "showIndicators": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "showIndicators",
            "option": false,
            "valueType": "switch"
          },
          "closeOnPopstate": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "closeOnPopstate",
            "option": false,
            "valueType": "text"
          },
          "closeIconPosition": {
            "enum": [],
            "type": [
              "makeStringProp<PopupCloseIconPosition>('top-right')"
            ],
            "title": "closeIconPosition",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "imagePreviewProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['scale' 'close' 'closed' 'change' 'longPress' 'update:show']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "active": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "active",
            "option": false,
            "valueType": "text"
          },
          "rootWidth": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "rootWidth",
            "option": false,
            "valueType": "text"
          },
          "rootHeight": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "rootHeight",
            "option": false,
            "valueType": "text"
          },
          "args": {
            "enum": [],
            "type": [
              "[state.active]"
            ],
            "title": "args",
            "option": false,
            "valueType": "text"
          },
          "slots.index({index": {
            "enum": [],
            "type": [
              "state.active })"
            ],
            "title": "slots.index({index",
            "option": true,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "`${state.active + 1} / ${props.images.length}`}"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          },
          "image": {
            "enum": [],
            "type": [
              "slots.image"
            ],
            "title": "image",
            "option": false,
            "valueType": "text"
          },
          "swipeTo(+startPosition,{immediate": {
            "enum": [],
            "type": [
              "true });"
            ],
            "title": "swipeTo(+startPosition,{immediate",
            "option": false,
            "valueType": "text"
          },
          "index": {
            "enum": [],
            "type": [
              "state.active"
            ],
            "title": "index",
            "option": false,
            "valueType": "text"
          },
          "url": {
            "enum": [],
            "type": [
              "images[state.active]"
            ],
            "title": "url",
            "option": false,
            "valueType": "text"
          },
          "onUpdate": {
            "enum": [],
            "type": [
              "show={updateShow}"
            ],
            "title": "onUpdate",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constemitScale=(args",
          "constupdateShow=(show",
          "done",
          "constsetActive=(active",
          "constswipeTo=(index"
        ],
        "properties": {
          "constemitScale=(args": {
            "value": "ImagePreviewScaleEventParams) =>",
            "title": "constemitScale=(args",
            "description": "constemitScale=(args",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constupdateShow=(show": {
            "value": "boolean) => emit('update:show' show);",
            "title": "constupdateShow=(show",
            "description": "constupdateShow=(show",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "done": {
            "value": "() => updateShow(false)",
            "title": "done",
            "description": "done",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constsetActive=(active": {
            "value": "number) => {",
            "title": "constsetActive=(active",
            "description": "constsetActive=(active",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constswipeTo=(index": {
            "value": "number options?: SwipeToOptions) =>",
            "title": "constswipeTo=(index",
            "description": "constswipeTo=(index",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "图片放大预览，支持组件调用和函数调用两种方式。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Empty",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Empty 空状态",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Empty",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "image",
          "imageSize",
          "description",
          "props",
          "",
          "error",
          "search",
          "network",
          "default"
        ],
        "properties": {
          "image": {
            "enum": [],
            "type": [
              "makeStringProp('default')"
            ],
            "title": "image",
            "option": false,
            "valueType": "text"
          },
          "imageSize": {
            "enum": [],
            "type": [
              "[Number String Array] as PropType<Numeric ",
              " [Numeric Numeric]>"
            ],
            "title": "imageSize",
            "option": false,
            "valueType": "text"
          },
          "description": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "description",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "emptyProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "props.description;"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          },
          "error": {
            "enum": [],
            "type": [
              "renderError"
            ],
            "title": "error",
            "option": false,
            "valueType": "text"
          },
          "search": {
            "enum": [],
            "type": [
              "renderSearch"
            ],
            "title": "search",
            "option": false,
            "valueType": "text"
          },
          "network": {
            "enum": [],
            "type": [
              "renderNetwork"
            ],
            "title": "network",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "renderMaterial"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constgetId=(num",
          "constgetUrlById=(num",
          "constrenderStop=(color",
          "constrenderStops=(fromColor",
          "constrenderShadow=(id",
          "constPRESET_IMAGES"
        ],
        "properties": {
          "constgetId=(num": {
            "value": "number | string) => `${baseId}-${num}`;",
            "title": "constgetId=(num",
            "description": "constgetId=(num",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constgetUrlById=(num": {
            "value": "number | string) => `url(#${getId(num)})`;",
            "title": "constgetUrlById=(num",
            "description": "constgetUrlById=(num",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderStop=(color": {
            "value": "string offset: number opacity?: number) => (",
            "title": "constrenderStop=(color",
            "description": "constrenderStop=(color",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderStops=(fromColor": {
            "value": "string toColor: string) => [",
            "title": "constrenderStops=(fromColor",
            "description": "constrenderStops=(fromColor",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderShadow=(id": {
            "value": "string) => [",
            "title": "constrenderShadow=(id",
            "description": "constrenderShadow=(id",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constPRESET_IMAGES": {
            "value": "Record<string () => JSX.Element> = {",
            "title": "constPRESET_IMAGES",
            "description": "constPRESET_IMAGES",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "空状态时的占位提示。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Divider",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Divider 分割线",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Divider",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "dashed",
          "hairline",
          "contentPosition",
          "props",
          "[`content-${props.contentPosition}`]"
        ],
        "properties": {
          "dashed": {
            "enum": [],
            "type": [
              "props.dashed"
            ],
            "title": "dashed",
            "option": false,
            "valueType": "text"
          },
          "hairline": {
            "enum": [],
            "type": [
              "props.hairline"
            ],
            "title": "hairline",
            "option": false,
            "valueType": "text"
          },
          "contentPosition": {
            "enum": [],
            "type": [
              "makeStringProp<DividerContentPosition>('center')"
            ],
            "title": "contentPosition",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "dividerProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "[`content-${props.contentPosition}`]": {
            "enum": [],
            "type": [
              "!!slots.default"
            ],
            "title": "[`content-${props.contentPosition}`]",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于将内容分隔为多个区域。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Progress",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Progress 进度条",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Progress",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "color",
          "inactive",
          "pivotText",
          "textColor",
          "showPivot",
          "pivotColor",
          "trackColor",
          "strokeWidth",
          "percentage",
          "type",
          "default",
          "props",
          "left",
          "transform",
          "background",
          "class={bem('pivot',{inactive",
          "height",
          "width",
          "class={bem('portion',{inactive"
        ],
        "properties": {
          "color": {
            "enum": [],
            "type": [
              "textColor"
            ],
            "title": "color",
            "option": false,
            "valueType": "text"
          },
          "inactive": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "inactive",
            "option": false,
            "valueType": "switch"
          },
          "pivotText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "pivotText",
            "option": false,
            "valueType": "text"
          },
          "textColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "textColor",
            "option": false,
            "valueType": "text"
          },
          "showPivot": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showPivot",
            "option": false,
            "valueType": "text"
          },
          "pivotColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "pivotColor",
            "option": false,
            "valueType": "text"
          },
          "trackColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "trackColor",
            "option": false,
            "valueType": "text"
          },
          "strokeWidth": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "strokeWidth",
            "option": false,
            "valueType": "text"
          },
          "percentage": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "percentage",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "progressProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "props.inactiveundefined": {
            "enum": [],
            "type": [
              "props.color"
            ],
            "title": "props.inactiveundefined",
            "option": true,
            "valueType": "text"
          },
          "left": {
            "enum": [],
            "type": [
              "`${+percentage}%`"
            ],
            "title": "left",
            "option": false,
            "valueType": "text"
          },
          "transform": {
            "enum": [],
            "type": [
              "`translate(-${+percentage}%-50%)`"
            ],
            "title": "transform",
            "option": false,
            "valueType": "text"
          },
          "background": {
            "enum": [],
            "type": [
              "background.value"
            ],
            "title": "background",
            "option": false,
            "valueType": "text"
          },
          "class={bem('pivot',{inactive": {
            "enum": [],
            "type": [
              "props.inactive })}"
            ],
            "title": "class={bem('pivot',{inactive",
            "option": false,
            "valueType": "text"
          },
          "height": {
            "enum": [],
            "type": [
              "addUnit(strokeWidth)"
            ],
            "title": "height",
            "option": false,
            "valueType": "text"
          },
          "width": {
            "enum": [],
            "type": [
              "`${percentage}%`"
            ],
            "title": "width",
            "option": false,
            "valueType": "text"
          },
          "class={bem('portion',{inactive": {
            "enum": [],
            "type": [
              "props.inactive })}"
            ],
            "title": "class={bem('portion',{inactive",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "validator"
        ],
        "properties": {
          "validator": {
            "value": "(value: Numeric) => value >= 0 && value <= 100",
            "title": "validator",
            "description": "validator",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "弹出式的气泡菜单。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "List",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "List 列表",
        "description": "组件名称"
      },
      "tagName": {
        "title": "List",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "error",
          "offset",
          "loading",
          "disabled",
          "finished",
          "errorText",
          "direction",
          "loadingText",
          "finishedText",
          "immediateCheck",
          "props",
          "emits",
          "emit('update",
          ")",
          "target",
          "passive"
        ],
        "properties": {
          "error": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "error",
            "option": false,
            "valueType": "switch"
          },
          "offset": {
            "enum": [],
            "type": [
              "makeNumericProp(300)"
            ],
            "title": "offset",
            "option": false,
            "valueType": "text"
          },
          "loading": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "loading",
            "option": false,
            "valueType": "switch"
          },
          "disabled": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "switch"
          },
          "finished": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "finished",
            "option": false,
            "valueType": "switch"
          },
          "errorText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "errorText",
            "option": false,
            "valueType": "text"
          },
          "direction": {
            "enum": [],
            "type": [
              "makeStringProp<ListDirection>('down')"
            ],
            "title": "direction",
            "option": false,
            "valueType": "text"
          },
          "loadingText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "loadingText",
            "option": false,
            "valueType": "text"
          },
          "finishedText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "finishedText",
            "option": false,
            "valueType": "text"
          },
          "immediateCheck": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "immediateCheck",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "listProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['load' 'update:error' 'update:loading']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "error' false);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "consttext=slots.finishedslots.finished()": {
            "enum": [],
            "type": [
              "props.finishedText;"
            ],
            "title": "consttext=slots.finishedslots.finished()",
            "option": true,
            "valueType": "text"
          },
          "consttext=slots.errorslots.error()": {
            "enum": [],
            "type": [
              "props.errorText;"
            ],
            "title": "consttext=slots.errorslots.error()",
            "option": true,
            "valueType": "text"
          },
          ")": {
            "enum": [],
            "type": [
              "("
            ],
            "title": ")",
            "option": false,
            "valueType": "text"
          },
          "target": {
            "enum": [],
            "type": [
              "scrollParent"
            ],
            "title": "target",
            "option": false,
            "valueType": "text"
          },
          "passive": {
            "enum": [],
            "type": [
              "true"
            ],
            "title": "passive",
            "option": false,
            "valueType": "text"
          },
          "{props.direction==='down'Content": {
            "enum": [],
            "type": [
              "Placeholder}"
            ],
            "title": "{props.direction==='down'Content",
            "option": true,
            "valueType": "text"
          },
          "{props.direction==='up'Content": {
            "enum": [],
            "type": [
              "Placeholder}"
            ],
            "title": "{props.direction==='up'Content",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "瀑布流滚动加载，用于展示长列表，当列表即将滚动到底部时，会触发事件并加载更多列表项。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "NoticeBar",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "NoticeBar 通知栏",
        "description": "组件名称"
      },
      "tagName": {
        "title": "NoticeBar",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "text",
          "mode",
          "color",
          "delay",
          "speed",
          "leftIcon",
          "wrapable",
          "background",
          "scrollable",
          "type",
          "default",
          "props",
          "emits",
          "letstartTimer",
          "show",
          "offset",
          "duration",
          "transform",
          "transitionDuration",
          "class={[bem('content'),{'van-ellipsis'",
          "//see"
        ],
        "properties": {
          "text": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "text",
            "option": false,
            "valueType": "text"
          },
          "mode": {
            "enum": [],
            "type": [
              "String as PropType<NoticeBarMode>"
            ],
            "title": "mode",
            "option": false,
            "valueType": "text"
          },
          "color": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "color",
            "option": false,
            "valueType": "text"
          },
          "delay": {
            "enum": [],
            "type": [
              "makeNumericProp(1)"
            ],
            "title": "delay",
            "option": false,
            "valueType": "text"
          },
          "speed": {
            "enum": [],
            "type": [
              "makeNumericProp(60)"
            ],
            "title": "speed",
            "option": false,
            "valueType": "text"
          },
          "leftIcon": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "leftIcon",
            "option": false,
            "valueType": "text"
          },
          "wrapable": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "wrapable",
            "option": false,
            "valueType": "switch"
          },
          "background": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "background",
            "option": false,
            "valueType": "text"
          },
          "scrollable": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "scrollable",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "type",
            "option": false,
            "valueType": "switch"
          },
          "default": {
            "enum": [],
            "type": [
              "null"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "noticeBarProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['close' 'replay']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "letstartTimer": {
            "enum": [],
            "type": [
              "ReturnType<typeof setTimeout>;"
            ],
            "title": "letstartTimer",
            "option": false,
            "valueType": "text"
          },
          "show": {
            "enum": [],
            "type": [
              "true"
            ],
            "title": "show",
            "option": false,
            "valueType": "text"
          },
          "offset": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "offset",
            "option": false,
            "valueType": "text"
          },
          "duration": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "duration",
            "option": false,
            "valueType": "text"
          },
          "transform": {
            "enum": [],
            "type": [
              "state.offset ? `translateX(${state.offset}px)` : ''"
            ],
            "title": "transform",
            "option": false,
            "valueType": "text"
          },
          "transitionDuration": {
            "enum": [],
            "type": [
              "`${state.duration}s`"
            ],
            "title": "transitionDuration",
            "option": false,
            "valueType": "text"
          },
          "class={[bem('content'),{'van-ellipsis'": {
            "enum": [],
            "type": [
              "ellipsis }]}"
            ],
            "title": "class={[bem('content'),{'van-ellipsis'",
            "option": false,
            "valueType": "text"
          },
          "{slots.defaultslots.default()": {
            "enum": [],
            "type": [
              "props.text}"
            ],
            "title": "{slots.defaultslots.default()",
            "option": true,
            "valueType": "text"
          },
          "constms=isDef(delay)+delay*1000": {
            "enum": [],
            "type": [
              "0;"
            ],
            "title": "constms=isDef(delay)+delay*1000",
            "option": true,
            "valueType": "text"
          },
          "//see": {
            "enum": [],
            "type": [
              "https://guwii.com/cache-issues-with-forwards-and-back-history-in-safari/"
            ],
            "title": "//see",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constonClickRightIcon=(event"
        ],
        "properties": {
          "constonClickRightIcon=(event": {
            "value": "MouseEvent) => {",
            "title": "constonClickRightIcon=(event",
            "description": "constonClickRightIcon=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于循环播放展示一组消息通知。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Popover",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Popover 气泡弹出框",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Popover",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "show",
          "theme",
          "overlay",
          "actions",
          "trigger",
          "duration",
          "showArrow",
          "placement",
          "iconPrefix",
          "overlayClass",
          "overlayStyle",
          "closeOnClickAction",
          "closeOnClickOverlay",
          "closeOnClickOutside",
          "offset",
          "type",
          "teleport",
          "default",
          "props",
          "emits",
          "letpopper",
          "(value)=>emit('update",
          "modifiers",
          "name",
          "options",
          "adaptive",
          "gpuAcceleration",
          "class={[bem('action',{disabled,'with-icon'",
          "eventName",
          "onUpdate"
        ],
        "properties": {
          "show": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "show",
            "option": false,
            "valueType": "switch"
          },
          "theme": {
            "enum": [],
            "type": [
              "makeStringProp<PopoverTheme>('light')"
            ],
            "title": "theme",
            "option": false,
            "valueType": "text"
          },
          "overlay": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "overlay",
            "option": false,
            "valueType": "switch"
          },
          "actions": {
            "enum": [],
            "type": [
              "makeArrayProp<PopoverAction>()"
            ],
            "title": "actions",
            "option": false,
            "valueType": "text"
          },
          "trigger": {
            "enum": [],
            "type": [
              "makeStringProp<PopoverTrigger>('click')"
            ],
            "title": "trigger",
            "option": false,
            "valueType": "text"
          },
          "duration": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "duration",
            "option": false,
            "valueType": "text"
          },
          "showArrow": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showArrow",
            "option": false,
            "valueType": "text"
          },
          "placement": {
            "enum": [],
            "type": [
              "props.placement"
            ],
            "title": "placement",
            "option": false,
            "valueType": "text"
          },
          "iconPrefix": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "iconPrefix",
            "option": false,
            "valueType": "text"
          },
          "overlayClass": {
            "enum": [],
            "type": [
              "unknownProp"
            ],
            "title": "overlayClass",
            "option": false,
            "valueType": "text"
          },
          "overlayStyle": {
            "enum": [],
            "type": [
              "Object as PropType<CSSProperties>"
            ],
            "title": "overlayStyle",
            "option": false,
            "valueType": "text"
          },
          "closeOnClickAction": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "closeOnClickAction",
            "option": false,
            "valueType": "text"
          },
          "closeOnClickOverlay": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "closeOnClickOverlay",
            "option": false,
            "valueType": "text"
          },
          "closeOnClickOutside": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "closeOnClickOutside",
            "option": false,
            "valueType": "text"
          },
          "offset": {
            "enum": [],
            "type": [
              "props.offset"
            ],
            "title": "offset",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "[String Object] as PropType<TeleportProps['to']>"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "teleport": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "teleport",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "'body'"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "popoverProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['select' 'touchstart' 'update:show']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "letpopper": {
            "enum": [],
            "type": [
              "Instance ",
              " null;"
            ],
            "title": "letpopper",
            "option": false,
            "valueType": "text"
          },
          "(value)=>emit('update": {
            "enum": [],
            "type": [
              "show' value)"
            ],
            "title": "(value)=>emit('update",
            "option": false,
            "valueType": "text"
          },
          "modifiers": {
            "enum": [],
            "type": [
              "["
            ],
            "title": "modifiers",
            "option": false,
            "valueType": "text"
          },
          "name": {
            "enum": [],
            "type": [
              "'computeStyles'"
            ],
            "title": "name",
            "option": false,
            "valueType": "text"
          },
          "options": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "options",
            "option": false,
            "valueType": "text"
          },
          "adaptive": {
            "enum": [],
            "type": [
              "false"
            ],
            "title": "adaptive",
            "option": false,
            "valueType": "text"
          },
          "gpuAcceleration": {
            "enum": [],
            "type": [
              "false"
            ],
            "title": "gpuAcceleration",
            "option": false,
            "valueType": "text"
          },
          "class={[bem('action',{disabled,'with-icon'": {
            "enum": [],
            "type": [
              "icon }) className]}"
            ],
            "title": "class={[bem('action',{disabled,'with-icon'",
            "option": false,
            "valueType": "text"
          },
          "tabindex={disabledundefined": {
            "enum": [],
            "type": [
              "0}"
            ],
            "title": "tabindex={disabledundefined",
            "option": true,
            "valueType": "text"
          },
          "eventName": {
            "enum": [],
            "type": [
              "'touchstart'"
            ],
            "title": "eventName",
            "option": false,
            "valueType": "text"
          },
          "onUpdate": {
            "enum": [],
            "type": [
              "show={updateShow}"
            ],
            "title": "onUpdate",
            "option": false,
            "valueType": "text"
          },
          "{slots.defaultslots.default()": {
            "enum": [],
            "type": [
              "props.actions.map(renderAction)}"
            ],
            "title": "{slots.defaultslots.default()",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "default",
          "constupdateShow=(value",
          "constonClickAction=(action",
          "constrenderActionContent=(action",
          "constrenderAction=(action"
        ],
        "properties": {
          "default": {
            "value": "() => [0 8]",
            "title": "default",
            "description": "default",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constupdateShow=(value": {
            "value": "boolean) => {",
            "title": "constupdateShow=(value",
            "description": "constupdateShow=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickAction=(action": {
            "value": "PopoverAction index: number) => {",
            "title": "constonClickAction=(action",
            "description": "constonClickAction=(action",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderActionContent=(action": {
            "value": "PopoverAction index: number) => {",
            "title": "constrenderActionContent=(action",
            "description": "constrenderActionContent=(action",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderAction=(action": {
            "value": "PopoverAction index: number) => {",
            "title": "constrenderAction=(action",
            "description": "constrenderAction=(action",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "弹出式的气泡菜单。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Sticky",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Sticky 粘性布局",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Sticky",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "zIndex",
          "position",
          "container",
          "offsetTop",
          "offsetBottom",
          "props",
          "emits",
          "fixed",
          "width",
          "height",
          "transform",
          "conststyle",
          "[props.position]",
          "isFixed",
          "target",
          "passive",
          "<divclass={bem({fixed"
        ],
        "properties": {
          "zIndex": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "zIndex",
            "option": false,
            "valueType": "text"
          },
          "position": {
            "enum": [],
            "type": [
              "makeStringProp<StickyPosition>('top')"
            ],
            "title": "position",
            "option": false,
            "valueType": "text"
          },
          "container": {
            "enum": [],
            "type": [
              "Object as PropType<Element>"
            ],
            "title": "container",
            "option": false,
            "valueType": "text"
          },
          "offsetTop": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "offsetTop",
            "option": false,
            "valueType": "text"
          },
          "offsetBottom": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "offsetBottom",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "stickyProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['scroll' 'change']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "fixed": {
            "enum": [],
            "type": [
              "false"
            ],
            "title": "fixed",
            "option": false,
            "valueType": "text"
          },
          "width": {
            "enum": [],
            "type": [
              "`${state.width}px`"
            ],
            "title": "width",
            "option": false,
            "valueType": "text"
          },
          "height": {
            "enum": [],
            "type": [
              "`${state.height}px`"
            ],
            "title": "height",
            "option": false,
            "valueType": "text"
          },
          "transform": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "transform",
            "option": false,
            "valueType": "text"
          },
          "unitToPx(props.position==='top'props.offsetTop": {
            "enum": [],
            "type": [
              "props.offsetBottom)"
            ],
            "title": "unitToPx(props.position==='top'props.offsetTop",
            "option": true,
            "valueType": "text"
          },
          "conststyle": {
            "enum": [],
            "type": [
              "CSSProperties = extend(getZIndexStyle(props.zIndex) {"
            ],
            "title": "conststyle",
            "option": false,
            "valueType": "text"
          },
          "[props.position]": {
            "enum": [],
            "type": [
              "`${offset.value}px`"
            ],
            "title": "[props.position]",
            "option": false,
            "valueType": "text"
          },
          "isFixed": {
            "enum": [],
            "type": [
              "state.fixed"
            ],
            "title": "isFixed",
            "option": false,
            "valueType": "text"
          },
          "state.transform=difference<0difference": {
            "enum": [],
            "type": [
              "0;"
            ],
            "title": "state.transform=difference<0difference",
            "option": true,
            "valueType": "text"
          },
          "state.transform=difference<0-difference": {
            "enum": [],
            "type": [
              "0;"
            ],
            "title": "state.transform=difference<0-difference",
            "option": true,
            "valueType": "text"
          },
          "target": {
            "enum": [],
            "type": [
              "scrollParent"
            ],
            "title": "target",
            "option": false,
            "valueType": "text"
          },
          "passive": {
            "enum": [],
            "type": [
              "true"
            ],
            "title": "passive",
            "option": false,
            "valueType": "text"
          },
          "<divclass={bem({fixed": {
            "enum": [],
            "type": [
              "state.fixed })} style={stickyStyle.value}>"
            ],
            "title": "<divclass={bem({fixed",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constemitScroll=(scrollTop"
        ],
        "properties": {
          "constemitScroll=(scrollTop": {
            "value": "number) =>",
            "title": "constemitScroll=(scrollTop",
            "description": "constemitScroll=(scrollTop",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "Sticky 组件与 CSS 中 position: sticky 属性实现的效果一致，当组件在屏幕范围内时，会按照正常的布局排列，当组件滚出屏幕范围时，始终会固定在屏幕顶部。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Skeleton",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Skeleton 骨架屏",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Skeleton",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "row",
          "round",
          "title",
          "titleWidth",
          "avatar",
          "avatarSize",
          "avatarShape",
          "loading",
          "animate",
          "rowWidth",
          "type",
          "default",
          "inheritAttrs",
          "props",
          "class={bem({animate"
        ],
        "properties": {
          "row": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "row",
            "option": false,
            "valueType": "text"
          },
          "round": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "round",
            "option": false,
            "valueType": "switch"
          },
          "title": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "title",
            "option": false,
            "valueType": "switch"
          },
          "titleWidth": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "titleWidth",
            "option": false,
            "valueType": "text"
          },
          "avatar": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "avatar",
            "option": false,
            "valueType": "switch"
          },
          "avatarSize": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "avatarSize",
            "option": false,
            "valueType": "text"
          },
          "avatarShape": {
            "enum": [],
            "type": [
              "makeStringProp<SkeletonAvatarShape>('round')"
            ],
            "title": "avatarShape",
            "option": false,
            "valueType": "text"
          },
          "loading": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "loading",
            "option": false,
            "valueType": "text"
          },
          "animate": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "animate",
            "option": false,
            "valueType": "text"
          },
          "rowWidth": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "rowWidth",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "[Number String Array] as PropType<Numeric ",
              " Numeric[]>"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "DEFAULT_ROW_WIDTH"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "inheritAttrs": {
            "enum": [],
            "type": [
              "false"
            ],
            "title": "inheritAttrs",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "skeletonProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "class={bem({animate": {
            "enum": [],
            "type": [
              "props.animate round: props.round })}"
            ],
            "title": "class={bem({animate",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constgetRowWidth=(index"
        ],
        "properties": {
          "constgetRowWidth=(index": {
            "value": "number) => {",
            "title": "constgetRowWidth=(index",
            "description": "constgetRowWidth=(index",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "弹出式的气泡菜单。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Swipe",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Swipe 轮播",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Swipe",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "loop",
          "width",
          "height",
          "vertical",
          "autoplay",
          "duration",
          "touchable",
          "lazyRender",
          "initialSwipe",
          "indicatorColor",
          "showIndicators",
          "stopPropagation",
          "exportconstSWIPE_KEY",
          "props",
          "emits",
          "rect",
          "active",
          "swiping",
          "",
          "conststyle",
          "transitionDuration",
          "transform",
          "}",
          "pace",
          "emitChange",
          "move({pace",
          "letautoplayTimer",
          "//issue",
          "lettouchStartTime",
          "move({offset",
          "backgroundColor",
          "total",
          "<divclass={bem('indicators',{vertical",
          "target",
          "class={bem('track',{vertical"
        ],
        "properties": {
          "loop": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "loop",
            "option": false,
            "valueType": "text"
          },
          "width": {
            "enum": [],
            "type": [
              "root.value!.offsetWidth"
            ],
            "title": "width",
            "option": false,
            "valueType": "text"
          },
          "height": {
            "enum": [],
            "type": [
              "root.value!.offsetHeight"
            ],
            "title": "height",
            "option": false,
            "valueType": "text"
          },
          "vertical": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "vertical",
            "option": false,
            "valueType": "switch"
          },
          "autoplay": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "autoplay",
            "option": false,
            "valueType": "text"
          },
          "duration": {
            "enum": [],
            "type": [
              "makeNumericProp(500)"
            ],
            "title": "duration",
            "option": false,
            "valueType": "text"
          },
          "touchable": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "touchable",
            "option": false,
            "valueType": "text"
          },
          "lazyRender": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "lazyRender",
            "option": false,
            "valueType": "switch"
          },
          "initialSwipe": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "initialSwipe",
            "option": false,
            "valueType": "text"
          },
          "indicatorColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "indicatorColor",
            "option": false,
            "valueType": "text"
          },
          "showIndicators": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showIndicators",
            "option": false,
            "valueType": "text"
          },
          "stopPropagation": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "stopPropagation",
            "option": false,
            "valueType": "text"
          },
          "exportconstSWIPE_KEY": {
            "enum": [],
            "type": [
              "InjectionKey<SwipeProvide> = Symbol(name);"
            ],
            "title": "exportconstSWIPE_KEY",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "swipeProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['change']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "rect": {
            "enum": [],
            "type": [
              "null"
            ],
            "title": "rect",
            "option": false,
            "valueType": "text"
          },
          "offset": {
            "enum": [],
            "type": [
              "number"
            ],
            "title": "offset",
            "option": true,
            "valueType": "digit"
          },
          "active": {
            "enum": [],
            "type": [
              "activeIndicator.value"
            ],
            "title": "active",
            "option": false,
            "valueType": "text"
          },
          "swiping": {
            "enum": [],
            "type": [
              "false"
            ],
            "title": "swiping",
            "option": false,
            "valueType": "text"
          },
          "constsize=computed(()=>state[props.vertical'height'": {
            "enum": [],
            "type": [
              "'width']);"
            ],
            "title": "constsize=computed(()=>state[props.vertical'height'",
            "option": true,
            "valueType": "text"
          },
          "props.verticaltouch.deltaY.value": {
            "enum": [],
            "type": [
              "touch.deltaX.value"
            ],
            "title": "props.verticaltouch.deltaY.value",
            "option": true,
            "valueType": "text"
          },
          "constbase=props.verticalstate.rect.height": {
            "enum": [],
            "type": [
              "state.rect.width;"
            ],
            "title": "constbase=props.verticalstate.rect.height",
            "option": true,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "undefined;"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          },
          "constexpect=props.vertical'vertical'": {
            "enum": [],
            "type": [
              "'horizontal';"
            ],
            "title": "constexpect=props.vertical'vertical'",
            "option": true,
            "valueType": "text"
          },
          "conststyle": {
            "enum": [],
            "type": [
              "CSSProperties = {"
            ],
            "title": "conststyle",
            "option": false,
            "valueType": "text"
          },
          "transitionDuration": {
            "enum": [],
            "type": [
              "`${state.swiping ? 0 : props.duration}ms`"
            ],
            "title": "transitionDuration",
            "option": false,
            "valueType": "text"
          },
          "transform": {
            "enum": [],
            "type": [
              "`translate${props.vertical ? 'Y' : 'X'}(${state.offset}px)`"
            ],
            "title": "transform",
            "option": false,
            "valueType": "text"
          },
          "constmainAxis=props.vertical'height'": {
            "enum": [],
            "type": [
              "'width';"
            ],
            "title": "constmainAxis=props.vertical'height'",
            "option": true,
            "valueType": "text"
          },
          "constcrossAxis=props.vertical'width'": {
            "enum": [],
            "type": [
              "'height';"
            ],
            "title": "constcrossAxis=props.vertical'width'",
            "option": true,
            "valueType": "text"
          },
          "style[crossAxis]=props[crossAxis]`${props[crossAxis]}px`": {
            "enum": [],
            "type": [
              "'';"
            ],
            "title": "style[crossAxis]=props[crossAxis]`${props[crossAxis]}px`",
            "option": true,
            "valueType": "text"
          },
          "}": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "}",
            "option": false,
            "valueType": "text"
          },
          "pace": {
            "enum": [],
            "type": [
              "targetIndex - state.active"
            ],
            "title": "pace",
            "option": false,
            "valueType": "text"
          },
          "emitChange": {
            "enum": [],
            "type": [
              "true"
            ],
            "title": "emitChange",
            "option": false,
            "valueType": "text"
          },
          "children[0].setOffset(outRightBoundtrackSize.value": {
            "enum": [],
            "type": [
              "0);"
            ],
            "title": "children[0].setOffset(outRightBoundtrackSize.value",
            "option": true,
            "valueType": "text"
          },
          "outLeftBound-trackSize.value": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "outLeftBound-trackSize.value",
            "option": true,
            "valueType": "text"
          },
          "move({pace": {
            "enum": [],
            "type": [
              "0 });"
            ],
            "title": "move({pace",
            "option": false,
            "valueType": "text"
          },
          "letautoplayTimer": {
            "enum": [],
            "type": [
              "ReturnType<typeof setTimeout>;"
            ],
            "title": "letautoplayTimer",
            "option": false,
            "valueType": "text"
          },
          "//issue": {
            "enum": [],
            "type": [
              "https://github.com/vant-ui/vant/issues/10052"
            ],
            "title": "//issue",
            "option": false,
            "valueType": "text"
          },
          "lettouchStartTime": {
            "enum": [],
            "type": [
              "number"
            ],
            "title": "lettouchStartTime",
            "option": false,
            "valueType": "digit"
          },
          "move({offset": {
            "enum": [],
            "type": [
              "delta.value });"
            ],
            "title": "move({offset",
            "option": false,
            "valueType": "text"
          },
          "pace=offset>0(delta.value>0-1": {
            "enum": [],
            "type": [
              "1) : 0;"
            ],
            "title": "pace=offset>0(delta.value>0-1",
            "option": true,
            "valueType": "text"
          },
          "pace=-Math[delta.value>0'ceil'": {
            "enum": [],
            "type": [
              "'floor']("
            ],
            "title": "pace=-Math[delta.value>0'ceil'",
            "option": true,
            "valueType": "text"
          },
          "targetIndex=state.active===00": {
            "enum": [],
            "type": [
              "index;"
            ],
            "title": "targetIndex=state.active===00",
            "option": true,
            "valueType": "text"
          },
          "backgroundColor": {
            "enum": [],
            "type": [
              "props.indicatorColor"
            ],
            "title": "backgroundColor",
            "option": false,
            "valueType": "text"
          },
          "total": {
            "enum": [],
            "type": [
              "count.value"
            ],
            "title": "total",
            "option": false,
            "valueType": "text"
          },
          "<divclass={bem('indicators',{vertical": {
            "enum": [],
            "type": [
              "props.vertical })}>"
            ],
            "title": "<divclass={bem('indicators',{vertical",
            "option": false,
            "valueType": "text"
          },
          "target": {
            "enum": [],
            "type": [
              "track"
            ],
            "title": "target",
            "option": false,
            "valueType": "text"
          },
          "class={bem('track',{vertical": {
            "enum": [],
            "type": [
              "props.vertical })}"
            ],
            "title": "class={bem('track',{vertical",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constgetTargetActive=(pace",
          "constgetTargetOffset=(targetActive",
          "constonTouchStart=(event",
          "constonTouchMove=(event",
          "constswipeTo=(index",
          "constrenderDot=(_"
        ],
        "properties": {
          "constgetTargetActive=(pace": {
            "value": "number) => {",
            "title": "constgetTargetActive=(pace",
            "description": "constgetTargetActive=(pace",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constgetTargetOffset=(targetActive": {
            "value": "number offset = 0) => {",
            "title": "constgetTargetOffset=(targetActive",
            "description": "constgetTargetOffset=(targetActive",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonTouchStart=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchStart=(event",
            "description": "constonTouchStart=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonTouchMove=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchMove=(event",
            "description": "constonTouchMove=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constswipeTo=(index": {
            "value": "number options: SwipeToOptions = {}) => {",
            "title": "constswipeTo=(index",
            "description": "constswipeTo=(index",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderDot=(_": {
            "value": "number index: number) => {",
            "title": "constrenderDot=(_",
            "description": "constrenderDot=(_",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于循环播放一组图片或内容。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Tag",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Tag 标签",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Tag",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "size",
          "mark",
          "show",
          "type",
          "color",
          "plain",
          "round",
          "textColor",
          "closeable",
          "props",
          "emits",
          "borderColor",
          "background",
          "constclasses"
        ],
        "properties": {
          "size": {
            "enum": [],
            "type": [
              "String as PropType<TagSize>"
            ],
            "title": "size",
            "option": false,
            "valueType": "text"
          },
          "mark": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "mark",
            "option": false,
            "valueType": "switch"
          },
          "show": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "show",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "makeStringProp<TagType>('default')"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "color": {
            "enum": [],
            "type": [
              "props.textColor"
            ],
            "title": "color",
            "option": false,
            "valueType": "text"
          },
          "plain": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "plain",
            "option": false,
            "valueType": "switch"
          },
          "round": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "round",
            "option": false,
            "valueType": "switch"
          },
          "textColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "textColor",
            "option": false,
            "valueType": "text"
          },
          "closeable": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "closeable",
            "option": false,
            "valueType": "switch"
          },
          "props": {
            "enum": [],
            "type": [
              "tagProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['close']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "borderColor": {
            "enum": [],
            "type": [
              "props.color"
            ],
            "title": "borderColor",
            "option": false,
            "valueType": "text"
          },
          "background": {
            "enum": [],
            "type": [
              "props.color"
            ],
            "title": "background",
            "option": false,
            "valueType": "text"
          },
          "constclasses": {
            "enum": [],
            "type": [
              "Record<string unknown> = {"
            ],
            "title": "constclasses",
            "option": false,
            "valueType": "text"
          },
          "<Transitionname={props.closeable'van-fade'": {
            "enum": [],
            "type": [
              "undefined}>"
            ],
            "title": "<Transitionname={props.closeable'van-fade'",
            "option": true,
            "valueType": "text"
          },
          "{props.showrenderTag()": {
            "enum": [],
            "type": [
              "null}"
            ],
            "title": "{props.showrenderTag()",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constonClose=(event",
          "constgetStyle=()"
        ],
        "properties": {
          "constonClose=(event": {
            "value": "MouseEvent) => {",
            "title": "constonClose=(event",
            "description": "constonClose=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constgetStyle=()": {
            "value": "CSSProperties => {",
            "title": "constgetStyle=()",
            "description": "constgetStyle=()",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于标记关键词和概括主要内容。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "ActionBar",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "ActionBar 动作栏",
        "description": "组件名称"
      },
      "tagName": {
        "title": "ActionBar",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "placeholder",
          "safeAreaInsetBottom",
          "props",
          "class={[bem(),{'van-safe-area-bottom'"
        ],
        "properties": {
          "placeholder": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "placeholder",
            "option": false,
            "valueType": "switch"
          },
          "safeAreaInsetBottom": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "safeAreaInsetBottom",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "actionBarProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "class={[bem(),{'van-safe-area-bottom'": {
            "enum": [],
            "type": [
              "props.safeAreaInsetBottom }]}"
            ],
            "title": "class={[bem(),{'van-safe-area-bottom'",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于为页面相关操作提供便捷交互。",
    "groupKey": "Navigation Components",
    "groupName": "导航组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Grid",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Grid 宫格",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Grid",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "square",
          "center",
          "border",
          "gutter",
          "reverse",
          "iconSize",
          "direction",
          "clickable",
          "columnNum",
          "props",
          "exportconstGRID_KEY",
          "style={{paddingLeft",
          "class={[bem(),{[BORDER_TOP]"
        ],
        "properties": {
          "square": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "square",
            "option": false,
            "valueType": "switch"
          },
          "center": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "center",
            "option": false,
            "valueType": "text"
          },
          "border": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "border",
            "option": false,
            "valueType": "text"
          },
          "gutter": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "gutter",
            "option": false,
            "valueType": "text"
          },
          "reverse": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "reverse",
            "option": false,
            "valueType": "switch"
          },
          "iconSize": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "iconSize",
            "option": false,
            "valueType": "text"
          },
          "direction": {
            "enum": [],
            "type": [
              "String as PropType<GridDirection>"
            ],
            "title": "direction",
            "option": false,
            "valueType": "text"
          },
          "clickable": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "clickable",
            "option": false,
            "valueType": "switch"
          },
          "columnNum": {
            "enum": [],
            "type": [
              "makeNumericProp(4)"
            ],
            "title": "columnNum",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "gridProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "exportconstGRID_KEY": {
            "enum": [],
            "type": [
              "InjectionKey<GridProvide> = Symbol(name);"
            ],
            "title": "exportconstGRID_KEY",
            "option": false,
            "valueType": "text"
          },
          "style={{paddingLeft": {
            "enum": [],
            "type": [
              "addUnit(props.gutter) }}"
            ],
            "title": "style={{paddingLeft",
            "option": false,
            "valueType": "text"
          },
          "class={[bem(),{[BORDER_TOP]": {
            "enum": [],
            "type": [
              "props.border && !props.gutter }]}"
            ],
            "title": "class={[bem(),{[BORDER_TOP]",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "宫格可以在水平方向上把页面分隔成等宽度的区块，用于展示内容或进行页面导航。",
    "groupKey": "Navigation Components",
    "groupName": "导航组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "IndexBar",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "IndexBar 索引栏",
        "description": "组件名称"
      },
      "tagName": {
        "title": "IndexBar",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "sticky",
          "zIndex",
          "teleport",
          "highlightColor",
          "stickyOffsetTop",
          "indexList",
          "type",
          "default",
          "exportconstINDEX_BAR_KEY",
          "props",
          "emits",
          "letselectActiveIndex",
          "color",
          "scrollTop",
          "rects",
          "target",
          "passive",
          "lettouchActiveIndex",
          ")"
        ],
        "properties": {
          "sticky": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "sticky",
            "option": false,
            "valueType": "text"
          },
          "zIndex": {
            "enum": [],
            "type": [
              "+props.zIndex + 1"
            ],
            "title": "zIndex",
            "option": false,
            "valueType": "text"
          },
          "teleport": {
            "enum": [],
            "type": [
              "[String Object] as PropType<TeleportProps['to']>"
            ],
            "title": "teleport",
            "option": false,
            "valueType": "text"
          },
          "highlightColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "highlightColor",
            "option": false,
            "valueType": "text"
          },
          "stickyOffsetTop": {
            "enum": [],
            "type": [
              "makeNumberProp(0)"
            ],
            "title": "stickyOffsetTop",
            "option": false,
            "valueType": "text"
          },
          "indexList": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "indexList",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "Array as PropType<Numeric[]>"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "genAlphabet"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "exportconstINDEX_BAR_KEY": {
            "enum": [],
            "type": [
              "InjectionKey<IndexBarProvide> = Symbol(name);"
            ],
            "title": "exportconstINDEX_BAR_KEY",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "indexBarProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['select' 'change']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "letselectActiveIndex": {
            "enum": [],
            "type": [
              "string;"
            ],
            "title": "letselectActiveIndex",
            "option": false,
            "valueType": "text"
          },
          "color": {
            "enum": [],
            "type": [
              "props.highlightColor"
            ],
            "title": "color",
            "option": false,
            "valueType": "text"
          },
          "scrollTop": {
            "enum": [],
            "type": [
              "number"
            ],
            "title": "scrollTop",
            "option": false,
            "valueType": "digit"
          },
          "rects": {
            "enum": [],
            "type": [
              "number"
            ],
            "title": "rects",
            "option": false,
            "valueType": "digit"
          },
          "constprevHeight=i>0rects[i-1].height": {
            "enum": [],
            "type": [
              "0;"
            ],
            "title": "constprevHeight=i>0rects[i-1].height",
            "option": true,
            "valueType": "text"
          },
          "constreachTop=props.stickyprevHeight+props.stickyOffsetTop": {
            "enum": [],
            "type": [
              "0;"
            ],
            "title": "constreachTop=props.stickyprevHeight+props.stickyOffsetTop",
            "option": true,
            "valueType": "text"
          },
          "target": {
            "enum": [],
            "type": [
              "sidebar"
            ],
            "title": "target",
            "option": false,
            "valueType": "text"
          },
          "passive": {
            "enum": [],
            "type": [
              "true"
            ],
            "title": "passive",
            "option": false,
            "valueType": "text"
          },
          "style={activehighlightStyle.value": {
            "enum": [],
            "type": [
              "undefined}"
            ],
            "title": "style={activehighlightStyle.value",
            "option": true,
            "valueType": "text"
          },
          "lettouchActiveIndex": {
            "enum": [],
            "type": [
              "string;"
            ],
            "title": "lettouchActiveIndex",
            "option": false,
            "valueType": "text"
          },
          ")": {
            "enum": [],
            "type": [
              "("
            ],
            "title": ")",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constgetMatchAnchor=(index",
          "constscrollTo=(index",
          "constscrollToElement=(element",
          "constonClickSidebar=(event",
          "constonTouchMove=(event"
        ],
        "properties": {
          "constgetMatchAnchor=(index": {
            "value": "string) =>",
            "title": "constgetMatchAnchor=(index",
            "description": "constgetMatchAnchor=(index",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constscrollTo=(index": {
            "value": "Numeric) => {",
            "title": "constscrollTo=(index",
            "description": "constscrollTo=(index",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constscrollToElement=(element": {
            "value": "HTMLElement) => {",
            "title": "constscrollToElement=(element",
            "description": "constscrollToElement=(element",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickSidebar=(event": {
            "value": "MouseEvent) => {",
            "title": "constonClickSidebar=(event",
            "description": "constonClickSidebar=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonTouchMove=(event": {
            "value": "TouchEvent) => {",
            "title": "constonTouchMove=(event",
            "description": "constonTouchMove=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于列表的索引分类显示和快速定位。",
    "groupKey": "Navigation Components",
    "groupName": "导航组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Pagination",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Pagination 分页",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Pagination",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "mode",
          "prevText",
          "nextText",
          "pageCount",
          "modelValue",
          "totalItems",
          "showPageSize",
          "itemsPerPage",
          "forceEllipses",
          "props",
          "emits",
          "constitems",
          "emit('update",
          "",
          "bem('item',{disabled,border",
          "bem('item',{active"
        ],
        "properties": {
          "mode": {
            "enum": [],
            "type": [
              "makeStringProp<PaginationMode>('multi')"
            ],
            "title": "mode",
            "option": false,
            "valueType": "text"
          },
          "prevText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "prevText",
            "option": false,
            "valueType": "text"
          },
          "nextText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "nextText",
            "option": false,
            "valueType": "text"
          },
          "pageCount": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "pageCount",
            "option": false,
            "valueType": "text"
          },
          "modelValue": {
            "enum": [],
            "type": [
              "makeNumberProp(0)"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "text"
          },
          "totalItems": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "totalItems",
            "option": false,
            "valueType": "text"
          },
          "showPageSize": {
            "enum": [],
            "type": [
              "makeNumericProp(5)"
            ],
            "title": "showPageSize",
            "option": false,
            "valueType": "text"
          },
          "itemsPerPage": {
            "enum": [],
            "type": [
              "makeNumericProp(10)"
            ],
            "title": "itemsPerPage",
            "option": false,
            "valueType": "text"
          },
          "forceEllipses": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "forceEllipses",
            "option": false,
            "valueType": "switch"
          },
          "props": {
            "enum": [],
            "type": [
              "paginationProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['change' 'update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "constitems": {
            "enum": [],
            "type": [
              "PageItem[] = [];"
            ],
            "title": "constitems",
            "option": false,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' value);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "`${props.modelValue}/${count.value}`}"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          },
          "bem('item',{disabled,border": {
            "enum": [],
            "type": [
              "mode === 'simple' next: true })"
            ],
            "title": "bem('item',{disabled,border",
            "option": false,
            "valueType": "text"
          },
          "{slotslot()": {
            "enum": [
              "t(next)}"
            ],
            "type": [
              "string"
            ],
            "title": "{slotslot()",
            "option": true,
            "valueType": "select"
          },
          "bem('item',{active": {
            "enum": [],
            "type": [
              "page.active page: true })"
            ],
            "title": "bem('item',{active",
            "option": false,
            "valueType": "text"
          },
          "{slots.pageslots.page(page)": {
            "enum": [],
            "type": [
              "page.text}"
            ],
            "title": "{slots.pageslots.page(page)",
            "option": true,
            "valueType": "text"
          },
          "{props.mode==='simple'renderDesc()": {
            "enum": [],
            "type": [
              "renderPages()}"
            ],
            "title": "{props.mode==='simple'renderDesc()",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constupdateModelValue=(value"
        ],
        "properties": {
          "constupdateModelValue=(value": {
            "value": "number emitChange?: boolean) => {",
            "title": "constupdateModelValue=(value",
            "description": "constupdateModelValue=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "数据量过多时，采用分页的形式将数据分隔，每次只加载一个页面。",
    "groupKey": "Navigation Components",
    "groupName": "导航组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Tab",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Tab 标签页",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Tab",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "dot",
          "name",
          "badge",
          "title",
          "disabled",
          "titleClass",
          "titleStyle",
          "showZeroBadge",
          "props",
          "//https",
          "class={bem('panel-wrapper',{inactive"
        ],
        "properties": {
          "dot": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "dot",
            "option": false,
            "valueType": "switch"
          },
          "name": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "name",
            "option": false,
            "valueType": "text"
          },
          "badge": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "badge",
            "option": false,
            "valueType": "text"
          },
          "title": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "title",
            "option": false,
            "valueType": "text"
          },
          "disabled": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "switch"
          },
          "titleClass": {
            "enum": [],
            "type": [
              "unknownProp"
            ],
            "title": "titleClass",
            "option": false,
            "valueType": "text"
          },
          "titleStyle": {
            "enum": [],
            "type": [
              "[String Object] as PropType<string ",
              " CSSProperties>"
            ],
            "title": "titleStyle",
            "option": false,
            "valueType": "text"
          },
          "showZeroBadge": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showZeroBadge",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "tabProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "//https": {
            "enum": [],
            "type": [
              "//github.com/youzan/vant/issues/11050"
            ],
            "title": "//https",
            "option": false,
            "valueType": "text"
          },
          "class={bem('panel-wrapper',{inactive": {
            "enum": [],
            "type": [
              "hasInactiveClass.value })}"
            ],
            "title": "class={bem('panel-wrapper',{inactive",
            "option": false,
            "valueType": "text"
          },
          "tabindex={active.value0": {
            "enum": [],
            "type": [
              "-1}"
            ],
            "title": "tabindex={active.value0",
            "option": true,
            "valueType": "text"
          },
          "constContent=shouldRenderslots.default.()": {
            "enum": [],
            "type": [
              "null;"
            ],
            "title": "constContent=shouldRenderslots.default.()",
            "option": true,
            "valueType": "text"
          },
          "tabindex={show0": {
            "enum": [],
            "type": [
              "-1}"
            ],
            "title": "tabindex={show0",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "选项卡组件，用于在不同的内容区域之间进行切换。",
    "groupKey": "Navigation Components",
    "groupName": "导航组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Sidebar",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Sidebar 侧边导航",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Sidebar",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "modelValue",
          "props",
          "emits",
          "emit('update"
        ],
        "properties": {
          "modelValue": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "sidebarProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['change' 'update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' value);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constsetActive=(value"
        ],
        "properties": {
          "constsetActive=(value": {
            "value": "number) => {",
            "title": "constsetActive=(value",
            "description": "constsetActive=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "垂直展示的导航栏，用于在不同的内容区域之间进行切换。",
    "groupKey": "Navigation Components",
    "groupName": "导航组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "NavBar",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "NavBar 导航栏",
        "description": "组件名称"
      },
      "tagName": {
        "title": "NavBar",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "title",
          "fixed",
          "zIndex",
          "border",
          "leftText",
          "rightText",
          "leftArrow",
          "placeholder",
          "safeAreaInsetTop",
          "clickable",
          "props",
          "emits",
          "conststyle",
          "[BORDER_BOTTOM]",
          "'van-safe-area-top'"
        ],
        "properties": {
          "title": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "title",
            "option": false,
            "valueType": "text"
          },
          "fixed": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "fixed",
            "option": false,
            "valueType": "switch"
          },
          "zIndex": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "zIndex",
            "option": false,
            "valueType": "text"
          },
          "border": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "border",
            "option": false,
            "valueType": "text"
          },
          "leftText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "leftText",
            "option": false,
            "valueType": "text"
          },
          "rightText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "rightText",
            "option": false,
            "valueType": "text"
          },
          "leftArrow": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "leftArrow",
            "option": false,
            "valueType": "switch"
          },
          "placeholder": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "placeholder",
            "option": false,
            "valueType": "switch"
          },
          "safeAreaInsetTop": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "safeAreaInsetTop",
            "option": false,
            "valueType": "switch"
          },
          "clickable": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "clickable",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "navBarProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['clickLeft' 'clickRight']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "conststyle": {
            "enum": [],
            "type": [
              "CSSProperties = getZIndexStyle(zIndex);"
            ],
            "title": "conststyle",
            "option": false,
            "valueType": "text"
          },
          "[BORDER_BOTTOM]": {
            "enum": [],
            "type": [
              "border"
            ],
            "title": "[BORDER_BOTTOM]",
            "option": false,
            "valueType": "text"
          },
          "'van-safe-area-top'": {
            "enum": [],
            "type": [
              "props.safeAreaInsetTop"
            ],
            "title": "'van-safe-area-top'",
            "option": false,
            "valueType": "text"
          },
          "class={[bem('left'),props.clickableHAPTICS_FEEDBACK": {
            "enum": [],
            "type": [
              "'']}"
            ],
            "title": "class={[bem('left'),props.clickableHAPTICS_FEEDBACK",
            "option": true,
            "valueType": "text"
          },
          "{slots.titleslots.title()": {
            "enum": [],
            "type": [
              "title}"
            ],
            "title": "{slots.titleslots.title()",
            "option": true,
            "valueType": "text"
          },
          "class={[bem('right'),props.clickableHAPTICS_FEEDBACK": {
            "enum": [],
            "type": [
              "'']}"
            ],
            "title": "class={[bem('right'),props.clickableHAPTICS_FEEDBACK",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constonClickLeft=(event",
          "constonClickRight=(event"
        ],
        "properties": {
          "constonClickLeft=(event": {
            "value": "MouseEvent) => emit('clickLeft' event);",
            "title": "constonClickLeft=(event",
            "description": "constonClickLeft=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickRight=(event": {
            "value": "MouseEvent) => emit('clickRight' event);",
            "title": "constonClickRight=(event",
            "description": "constonClickRight=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "为页面提供导航功能，常用于页面顶部。",
    "groupKey": "Navigation Components",
    "groupName": "导航组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Tabbar",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Tabbar 标签栏",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Tabbar",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "route",
          "fixed",
          "border",
          "zIndex",
          "placeholder",
          "activeColor",
          "beforeChange",
          "inactiveColor",
          "modelValue",
          "safeAreaInsetBottom",
          "type",
          "default",
          "props",
          "exportconstTABBAR_KEY",
          "emits",
          "[BORDER_TOP_BOTTOM]",
          "'van-safe-area-bottom'",
          "args",
          "emit('update"
        ],
        "properties": {
          "route": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "route",
            "option": false,
            "valueType": "switch"
          },
          "fixed": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "fixed",
            "option": false,
            "valueType": "text"
          },
          "border": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "border",
            "option": false,
            "valueType": "text"
          },
          "zIndex": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "zIndex",
            "option": false,
            "valueType": "text"
          },
          "placeholder": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "placeholder",
            "option": false,
            "valueType": "switch"
          },
          "activeColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "activeColor",
            "option": false,
            "valueType": "text"
          },
          "beforeChange": {
            "enum": [],
            "type": [
              "Function as PropType<Interceptor>"
            ],
            "title": "beforeChange",
            "option": false,
            "valueType": "text"
          },
          "inactiveColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "inactiveColor",
            "option": false,
            "valueType": "text"
          },
          "modelValue": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "text"
          },
          "safeAreaInsetBottom": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "safeAreaInsetBottom",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "type",
            "option": false,
            "valueType": "switch"
          },
          "default": {
            "enum": [],
            "type": [
              "null"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "tabbarProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "exportconstTABBAR_KEY": {
            "enum": [],
            "type": [
              "InjectionKey<TabbarProvide> = Symbol(name);"
            ],
            "title": "exportconstTABBAR_KEY",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['change' 'update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "[BORDER_TOP_BOTTOM]": {
            "enum": [],
            "type": [
              "border"
            ],
            "title": "[BORDER_TOP_BOTTOM]",
            "option": false,
            "valueType": "text"
          },
          "'van-safe-area-bottom'": {
            "enum": [],
            "type": [
              "enableSafeArea()"
            ],
            "title": "'van-safe-area-bottom'",
            "option": false,
            "valueType": "text"
          },
          "args": {
            "enum": [],
            "type": [
              "[active]"
            ],
            "title": "args",
            "option": false,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' active);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "setActive",
          "constsetActive=(active"
        ],
        "properties": {
          "setActive": {
            "value": "(active: Numeric afterChange: () => void) => void;",
            "title": "setActive",
            "description": "setActive",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constsetActive=(active": {
            "value": "Numeric afterChange: () => void) => {",
            "title": "constsetActive=(active",
            "description": "constsetActive=(active",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "底部导航栏，用于在不同页面之间进行切换。",
    "groupKey": "Navigation Components",
    "groupName": "导航组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "TreeSelect",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "TreeSelect 分类选择",
        "description": "组件名称"
      },
      "tagName": {
        "title": "TreeSelect",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "max",
          "items",
          "height",
          "selectedIcon",
          "mainActiveIndex",
          "activeId",
          "type",
          "default",
          "props",
          "emits",
          "",
          "emit('update",
          "active",
          "disabled",
          "<divclass={bem()}style={{height"
        ],
        "properties": {
          "max": {
            "enum": [],
            "type": [
              "makeNumericProp(Infinity)"
            ],
            "title": "max",
            "option": false,
            "valueType": "text"
          },
          "items": {
            "enum": [],
            "type": [
              "makeArrayProp<TreeSelectItem>()"
            ],
            "title": "items",
            "option": false,
            "valueType": "text"
          },
          "height": {
            "enum": [],
            "type": [
              "makeNumericProp(300)"
            ],
            "title": "height",
            "option": false,
            "valueType": "text"
          },
          "selectedIcon": {
            "enum": [],
            "type": [
              "makeStringProp('success')"
            ],
            "title": "selectedIcon",
            "option": false,
            "valueType": "text"
          },
          "mainActiveIndex": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "mainActiveIndex",
            "option": false,
            "valueType": "text"
          },
          "activeId": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "activeId",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "[Number String Array] as PropType<Numeric ",
              " Numeric[]>"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "treeSelectProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['clickNav' 'clickItem' 'update:activeId' 'update:mainActiveIndex']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "props.activeId === id;"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "mainActiveIndex' index);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "active": {
            "enum": [],
            "type": [
              "isActiveItem(item.id)"
            ],
            "title": "active",
            "option": false,
            "valueType": "text"
          },
          "disabled": {
            "enum": [],
            "type": [
              "item.disabled"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "text"
          },
          "<divclass={bem()}style={{height": {
            "enum": [],
            "type": [
              "addUnit(props.height) }}>"
            ],
            "title": "<divclass={bem()}style={{height",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constisActiveItem=(id",
          "constrenderSubItem=(item",
          "constonSidebarChange=(index",
          "constonClickSidebarItem=(index"
        ],
        "properties": {
          "constisActiveItem=(id": {
            "value": "Numeric) =>",
            "title": "constisActiveItem=(id",
            "description": "constisActiveItem=(id",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constrenderSubItem=(item": {
            "value": "TreeSelectChild) => {",
            "title": "constrenderSubItem=(item",
            "description": "constrenderSubItem=(item",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonSidebarChange=(index": {
            "value": "number) => {",
            "title": "constonSidebarChange=(index",
            "description": "constonSidebarChange=(index",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickSidebarItem=(index": {
            "value": "number) => emit('clickNav' index);",
            "title": "constonClickSidebarItem=(index",
            "description": "constonClickSidebarItem=(index",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于从一组相关联的数据集合中进行选择。",
    "groupKey": "Navigation Components",
    "groupName": "导航组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "BackTop",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "BackTop 回到顶部",
        "description": "组件名称"
      },
      "tagName": {
        "title": "BackTop",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "right",
          "bottom",
          "target",
          "offset",
          "teleport",
          "type",
          "default",
          "inheritAttrs",
          "props",
          "emits",
          "top",
          "behavior",
          "",
          "`[Vant]BackTop",
          "useEventListener('scroll',throttle(scroll,100),{target",
          "class={bem({active",
          ")"
        ],
        "properties": {
          "right": {
            "enum": [],
            "type": [
              "addUnit(props.right)"
            ],
            "title": "right",
            "option": false,
            "valueType": "text"
          },
          "bottom": {
            "enum": [],
            "type": [
              "addUnit(props.bottom)"
            ],
            "title": "bottom",
            "option": false,
            "valueType": "text"
          },
          "target": {
            "enum": [],
            "type": [
              "[String Object] as PropType<TeleportProps['to']>"
            ],
            "title": "target",
            "option": false,
            "valueType": "text"
          },
          "offset": {
            "enum": [],
            "type": [
              "makeNumericProp(200)"
            ],
            "title": "offset",
            "option": false,
            "valueType": "text"
          },
          "teleport": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "teleport",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "[String Object] as PropType<TeleportProps['to']>"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "'body'"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "inheritAttrs": {
            "enum": [],
            "type": [
              "false"
            ],
            "title": "inheritAttrs",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "backTopProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['click']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "top": {
            "enum": [],
            "type": [
              "0"
            ],
            "title": "top",
            "option": false,
            "valueType": "text"
          },
          "behavior": {
            "enum": [],
            "type": [
              "'smooth'"
            ],
            "title": "behavior",
            "option": false,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "getScrollParent(root.value!);"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          },
          "`[Vant]BackTop": {
            "enum": [],
            "type": [
              "target element \"${target}\" was not found the BackTop component will not be rendered.`"
            ],
            "title": "`[Vant]BackTop",
            "option": false,
            "valueType": "text"
          },
          "useEventListener('scroll',throttle(scroll,100),{target": {
            "enum": [],
            "type": [
              "scrollParent });"
            ],
            "title": "useEventListener('scroll',throttle(scroll,100),{target",
            "option": false,
            "valueType": "text"
          },
          "class={bem({active": {
            "enum": [],
            "type": [
              "show.value })}"
            ],
            "title": "class={bem({active",
            "option": false,
            "valueType": "text"
          },
          ")": {
            "enum": [],
            "type": [
              "("
            ],
            "title": ")",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constonClick=(event"
        ],
        "properties": {
          "constonClick=(event": {
            "value": "MouseEvent) => {",
            "title": "constonClick=(event",
            "description": "constonClick=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于从一组相关联的数据集合中进行选择。",
    "groupKey": "Navigation Components",
    "groupName": "导航组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "AddressEdit",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "AddressEdit 地址编辑",
        "description": "组件名称"
      },
      "tagName": {
        "title": "AddressEdit",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "areaList",
          "isSaving",
          "isDeleting",
          "validator",
          "showArea",
          "showDetail",
          "showDelete",
          "disableArea",
          "searchResult",
          "telMaxlength",
          "showSetDefault",
          "saveButtonText",
          "areaPlaceholder",
          "deleteButtonText",
          "showSearchResult",
          "detailRows",
          "detailMaxlength",
          "areaColumnsPlaceholder",
          "addressInfo",
          "type",
          "telValidator",
          "default",
          "props",
          "emits",
          "name",
          "tel",
          "{validator",
          "areaCode",
          "addressDetail",
          "deep",
          "immediate",
          "v-model"
        ],
        "properties": {
          "areaList": {
            "enum": [],
            "type": [
              "Object as PropType<AreaList>"
            ],
            "title": "areaList",
            "option": false,
            "valueType": "text"
          },
          "isSaving": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "isSaving",
            "option": false,
            "valueType": "switch"
          },
          "isDeleting": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "isDeleting",
            "option": false,
            "valueType": "switch"
          },
          "validator": {
            "enum": [],
            "type": [
              "Function as PropType<"
            ],
            "title": "validator",
            "option": false,
            "valueType": "text"
          },
          "showArea": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showArea",
            "option": false,
            "valueType": "text"
          },
          "showDetail": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "showDetail",
            "option": false,
            "valueType": "text"
          },
          "showDelete": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "showDelete",
            "option": false,
            "valueType": "switch"
          },
          "disableArea": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disableArea",
            "option": false,
            "valueType": "switch"
          },
          "searchResult": {
            "enum": [],
            "type": [
              "Array as PropType<AddressEditSearchItem[]>"
            ],
            "title": "searchResult",
            "option": false,
            "valueType": "text"
          },
          "telMaxlength": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "telMaxlength",
            "option": false,
            "valueType": "text"
          },
          "showSetDefault": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "showSetDefault",
            "option": false,
            "valueType": "switch"
          },
          "saveButtonText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "saveButtonText",
            "option": false,
            "valueType": "text"
          },
          "areaPlaceholder": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "areaPlaceholder",
            "option": false,
            "valueType": "text"
          },
          "deleteButtonText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "deleteButtonText",
            "option": false,
            "valueType": "text"
          },
          "showSearchResult": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "showSearchResult",
            "option": false,
            "valueType": "switch"
          },
          "detailRows": {
            "enum": [],
            "type": [
              "makeNumericProp(1)"
            ],
            "title": "detailRows",
            "option": false,
            "valueType": "text"
          },
          "detailMaxlength": {
            "enum": [],
            "type": [
              "makeNumericProp(200)"
            ],
            "title": "detailMaxlength",
            "option": false,
            "valueType": "text"
          },
          "areaColumnsPlaceholder": {
            "enum": [],
            "type": [
              "makeArrayProp<string>()"
            ],
            "title": "areaColumnsPlaceholder",
            "option": false,
            "valueType": "text"
          },
          "addressInfo": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "addressInfo",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "Object as PropType<Partial<AddressEditInfo>>"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "telValidator": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "telValidator",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "isMobile"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "addressEditProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "["
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "name": {
            "enum": [],
            "type": [
              "[makeRule('name' t('nameEmpty'))]"
            ],
            "title": "name",
            "option": false,
            "valueType": "text"
          },
          "tel": {
            "enum": [],
            "type": [
              "["
            ],
            "title": "tel",
            "option": false,
            "valueType": "text"
          },
          "{validator": {
            "enum": [],
            "type": [
              "telValidator message: t('telInvalid') }"
            ],
            "title": "{validator",
            "option": false,
            "valueType": "text"
          },
          "areaCode": {
            "enum": [],
            "type": [
              "[makeRule('areaCode' t('areaEmpty'))]"
            ],
            "title": "areaCode",
            "option": false,
            "valueType": "text"
          },
          "addressDetail": {
            "enum": [],
            "type": [
              "[makeRule('addressDetail' t('addressEmpty'))]"
            ],
            "title": "addressDetail",
            "option": false,
            "valueType": "text"
          },
          "deep": {
            "enum": [],
            "type": [
              "true"
            ],
            "title": "deep",
            "option": false,
            "valueType": "text"
          },
          "immediate": {
            "enum": [],
            "type": [
              "true"
            ],
            "title": "immediate",
            "option": false,
            "valueType": "text"
          },
          "v-model": {
            "enum": [],
            "type": [
              "show={showAreaPopup.value}"
            ],
            "title": "v-model",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "(key",
          "default",
          "type",
          "constonFocus=(key",
          "constmakeRule=(name",
          "validator",
          "constonChangeDetail=(val",
          "constassignAreaText=(options",
          "}",
          "constsetAreaCode=(code",
          "constsetAddressDetail=(value",
          "'right-icon'",
          "onSelectSearch={(event"
        ],
        "properties": {
          "(key": {
            "value": "string value: string) => string | undefined",
            "title": "(key",
            "description": "(key",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "default": {
            "value": "() => extend({} DEFAULT_DATA)",
            "title": "default",
            "description": "default",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "type": {
            "value": "Function as PropType<(val: string) => boolean>",
            "title": "type",
            "description": "type",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonFocus=(key": {
            "value": "string) => {",
            "title": "constonFocus=(key",
            "description": "constonFocus=(key",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constmakeRule=(name": {
            "value": "string emptyMessage: string): FieldRule => ({",
            "title": "constmakeRule=(name",
            "description": "constmakeRule=(name",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "validator": {
            "value": "(value) => {",
            "title": "validator",
            "description": "validator",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonChangeDetail=(val": {
            "value": "string) => {",
            "title": "constonChangeDetail=(val",
            "description": "constonChangeDetail=(val",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constassignAreaText=(options": {
            "value": "PickerOption[]) => {",
            "title": "constassignAreaText=(options",
            "description": "constassignAreaText=(options",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "}": {
            "value": "PickerConfirmEventParams) => {",
            "title": "}",
            "description": "}",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constsetAreaCode=(code": {
            "value": "string) => {",
            "title": "constsetAreaCode=(code",
            "description": "constsetAreaCode=(code",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constsetAddressDetail=(value": {
            "value": "string) => {",
            "title": "constsetAddressDetail=(value",
            "description": "constsetAddressDetail=(value",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "'right-icon'": {
            "value": "() => (",
            "title": "'right-icon'",
            "description": "'right-icon'",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "onSelectSearch={(event": {
            "value": "Event) => emit('selectSearch' event)}",
            "title": "onSelectSearch={(event",
            "description": "onSelectSearch={(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "地址编辑组件，用于新建、更新、删除地址信息。",
    "groupKey": "Business Components",
    "groupName": "业务组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Steps",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Steps 步骤条",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Steps",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "active",
          "direction",
          "activeIcon",
          "iconPrefix",
          "finishIcon",
          "activeColor",
          "inactiveIcon",
          "inactiveColor",
          "props",
          "exportconstSTEPS_KEY",
          "emits"
        ],
        "properties": {
          "active": {
            "enum": [],
            "type": [
              "makeNumericProp(0)"
            ],
            "title": "active",
            "option": false,
            "valueType": "text"
          },
          "direction": {
            "enum": [],
            "type": [
              "makeStringProp<StepsDirection>('horizontal')"
            ],
            "title": "direction",
            "option": false,
            "valueType": "text"
          },
          "activeIcon": {
            "enum": [],
            "type": [
              "makeStringProp('checked')"
            ],
            "title": "activeIcon",
            "option": false,
            "valueType": "text"
          },
          "iconPrefix": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "iconPrefix",
            "option": false,
            "valueType": "text"
          },
          "finishIcon": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "finishIcon",
            "option": false,
            "valueType": "text"
          },
          "activeColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "activeColor",
            "option": false,
            "valueType": "text"
          },
          "inactiveIcon": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "inactiveIcon",
            "option": false,
            "valueType": "text"
          },
          "inactiveColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "inactiveColor",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "stepsProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "exportconstSTEPS_KEY": {
            "enum": [],
            "type": [
              "InjectionKey<StepsProvide> = Symbol(name);"
            ],
            "title": "exportconstSTEPS_KEY",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['clickStep']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "onClickStep",
          "constonClickStep=(index"
        ],
        "properties": {
          "onClickStep": {
            "value": "(index: number) => void;",
            "title": "onClickStep",
            "description": "onClickStep",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonClickStep=(index": {
            "value": "number) => emit('clickStep' index);",
            "title": "constonClickStep=(index",
            "description": "constonClickStep=(index",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于展示操作流程的各个环节，让用户了解当前的操作在整体流程中的位置。",
    "groupKey": "Display Components",
    "groupName": "展示组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "AddressList",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "AddressList 地址列表",
        "description": "组件名称"
      },
      "tagName": {
        "title": "AddressList",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "list",
          "modelValue",
          "switchable",
          "disabledText",
          "disabledList",
          "addButtonText",
          "defaultTagText",
          "props",
          "emits",
          "'update",
          "item",
          "index",
          "emit('update",
          "bottom",
          "tag"
        ],
        "properties": {
          "list": {
            "enum": [],
            "type": [
              "makeArrayProp<AddressListAddress>()"
            ],
            "title": "list",
            "option": false,
            "valueType": "text"
          },
          "modelValue": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "text"
          },
          "switchable": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "switchable",
            "option": false,
            "valueType": "text"
          },
          "disabledText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "disabledText",
            "option": false,
            "valueType": "text"
          },
          "disabledList": {
            "enum": [],
            "type": [
              "makeArrayProp<AddressListAddress>()"
            ],
            "title": "disabledList",
            "option": false,
            "valueType": "text"
          },
          "addButtonText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "addButtonText",
            "option": false,
            "valueType": "text"
          },
          "defaultTagText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "defaultTagText",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "addressListProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "["
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "'update": {
            "enum": [],
            "type": [
              "modelValue'"
            ],
            "title": "'update",
            "option": false,
            "valueType": "text"
          },
          "item": {
            "enum": [],
            "type": [
              "AddressListAddress"
            ],
            "title": "item",
            "option": false,
            "valueType": "text"
          },
          "index": {
            "enum": [],
            "type": [
              "number"
            ],
            "title": "index",
            "option": false,
            "valueType": "digit"
          },
          "disabled": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disabled",
            "option": true,
            "valueType": "text"
          },
          "emit(disabled'editDisabled'": {
            "enum": [],
            "type": [
              "'edit' item index);"
            ],
            "title": "emit(disabled'editDisabled'",
            "option": true,
            "valueType": "text"
          },
          "emit(disabled'selectDisabled'": {
            "enum": [],
            "type": [
              "'select' item index);"
            ],
            "title": "emit(disabled'selectDisabled'",
            "option": true,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' item.id);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "bottom": {
            "enum": [],
            "type": [
              "slots['item-bottom']"
            ],
            "title": "bottom",
            "option": false,
            "valueType": "text"
          },
          "tag": {
            "enum": [],
            "type": [
              "slots.tag"
            ],
            "title": "tag",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constrenderList=(list"
        ],
        "properties": {
          "constrenderList=(list": {
            "value": "AddressListAddress[] disabled?: boolean) => {",
            "title": "constrenderList=(list",
            "description": "constrenderList=(list",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "展示地址信息列表。",
    "groupKey": "Business Components",
    "groupName": "业务组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Card",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Card 卡片",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Card",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "tag",
          "num",
          "desc",
          "thumb",
          "title",
          "price",
          "centered",
          "lazyLoad",
          "currency",
          "thumbLink",
          "originPrice",
          "props",
          "emits",
          ")",
          "",
          "<divclass={bem('content',{centered"
        ],
        "properties": {
          "tag": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "tag",
            "option": false,
            "valueType": "text"
          },
          "num": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "num",
            "option": false,
            "valueType": "text"
          },
          "desc": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "desc",
            "option": false,
            "valueType": "text"
          },
          "thumb": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "thumb",
            "option": false,
            "valueType": "text"
          },
          "title": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "title",
            "option": false,
            "valueType": "text"
          },
          "price": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "price",
            "option": false,
            "valueType": "text"
          },
          "centered": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "centered",
            "option": false,
            "valueType": "switch"
          },
          "lazyLoad": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "lazyLoad",
            "option": false,
            "valueType": "switch"
          },
          "currency": {
            "enum": [],
            "type": [
              "makeStringProp('¥')"
            ],
            "title": "currency",
            "option": false,
            "valueType": "text"
          },
          "thumbLink": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "thumbLink",
            "option": false,
            "valueType": "text"
          },
          "originPrice": {
            "enum": [],
            "type": [
              "numericProp"
            ],
            "title": "originPrice",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "cardProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['clickThumb']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          ")": {
            "enum": [],
            "type": [
              "("
            ],
            "title": ")",
            "option": false,
            "valueType": "text"
          },
          "{slots.priceslots.price()": {
            "enum": [],
            "type": [
              "renderPriceText()}"
            ],
            "title": "{slots.priceslots.price()",
            "option": true,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "`${props.currency} ${props.originPrice}`}"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          },
          "{slots.numslots.num()": {
            "enum": [],
            "type": [
              "`x${props.num}`}"
            ],
            "title": "{slots.numslots.num()",
            "option": true,
            "valueType": "text"
          },
          "<divclass={bem('content',{centered": {
            "enum": [],
            "type": [
              "props.centered })}>"
            ],
            "title": "<divclass={bem('content',{centered",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "onClick={(event"
        ],
        "properties": {
          "onClick={(event": {
            "value": "MouseEvent) => emit('clickThumb' event)}",
            "title": "onClick={(event",
            "description": "onClick={(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "商品卡片，用于展示商品的图片、价格等信息。",
    "groupKey": "Business Components",
    "groupName": "业务组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "ContactCard",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "ContactCard 联系人卡片",
        "description": "组件名称"
      },
      "tagName": {
        "title": "ContactCard",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "tel",
          "name",
          "type",
          "addText",
          "editable",
          "props",
          "emits",
          "v-slots={{title"
        ],
        "properties": {
          "tel": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "tel",
            "option": false,
            "valueType": "text"
          },
          "name": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "name",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "makeStringProp<ContactCardType>('add')"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "addText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "addText",
            "option": false,
            "valueType": "text"
          },
          "editable": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "editable",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "contactCardProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['click']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "v-slots={{title": {
            "enum": [],
            "type": [
              "renderContent }}"
            ],
            "title": "v-slots={{title",
            "option": false,
            "valueType": "text"
          },
          "icon={props.type==='edit''contact'": {
            "enum": [],
            "type": [
              "'add-square'}"
            ],
            "title": "icon={props.type==='edit''contact'",
            "option": true,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "constonClick=(event"
        ],
        "properties": {
          "constonClick=(event": {
            "value": "MouseEvent) => {",
            "title": "constonClick=(event",
            "description": "constonClick=(event",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "以卡片的形式展示联系人信息。",
    "groupKey": "Business Components",
    "groupName": "业务组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Area",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Area 省市区选择",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Area",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "modelValue",
          "columnsNum",
          "columnsPlaceholder",
          "areaList",
          "type",
          "props",
          "emits",
          "emit('update",
          "{deep",
          "",
          "{immediate"
        ],
        "properties": {
          "modelValue": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "modelValue",
            "option": false,
            "valueType": "text"
          },
          "columnsNum": {
            "enum": [],
            "type": [
              "makeNumericProp(3)"
            ],
            "title": "columnsNum",
            "option": false,
            "valueType": "text"
          },
          "columnsPlaceholder": {
            "enum": [],
            "type": [
              "makeArrayProp<string>()"
            ],
            "title": "columnsPlaceholder",
            "option": false,
            "valueType": "text"
          },
          "areaList": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "areaList",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "Object as PropType<AreaList>"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "areaProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['change' 'confirm' 'cancel' 'update:modelValue']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "constlastCode=newCodes.lengthnewCodes[newCodes.length-1]": {
            "enum": [],
            "type": [
              "'';"
            ],
            "title": "constlastCode=newCodes.lengthnewCodes[newCodes.length-1]",
            "option": true,
            "valueType": "text"
          },
          "emit('update": {
            "enum": [],
            "type": [
              "modelValue' lastCode);"
            ],
            "title": "emit('update",
            "option": false,
            "valueType": "text"
          },
          "{deep": {
            "enum": [],
            "type": [
              "true }"
            ],
            "title": "{deep",
            "option": false,
            "valueType": "text"
          },
          "": {
            "enum": [],
            "type": [
              "'';"
            ],
            "title": "",
            "option": false,
            "valueType": "text"
          },
          "{immediate": {
            "enum": [],
            "type": [
              "true }"
            ],
            "title": "{immediate",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "default",
          "constonChange=(...args",
          "constonCancel=(...args",
          "constonConfirm=(...args",
          "confirm",
          "getSelectedOptions"
        ],
        "properties": {
          "default": {
            "value": "() => ({})",
            "title": "default",
            "description": "default",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonChange=(...args": {
            "value": "unknown[]) => emit('change' ...args);",
            "title": "constonChange=(...args",
            "description": "constonChange=(...args",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonCancel=(...args": {
            "value": "unknown[]) => emit('cancel' ...args);",
            "title": "constonCancel=(...args",
            "description": "constonCancel=(...args",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "constonConfirm=(...args": {
            "value": "unknown[]) => emit('confirm' ...args);",
            "title": "constonConfirm=(...args",
            "description": "constonConfirm=(...args",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "confirm": {
            "value": "() => picker.value?.confirm()",
            "title": "confirm",
            "description": "confirm",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "getSelectedOptions": {
            "value": "() => picker.value?.getSelectedOptions() || []",
            "title": "getSelectedOptions",
            "description": "getSelectedOptions",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "省市区三级联动选择，通常与弹出层组件配合使用。",
    "groupKey": "Business Components",
    "groupName": "业务组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "Coupon",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "Coupon 优惠券选择器",
        "description": "组件名称"
      },
      "tagName": {
        "title": "Coupon",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [],
        "properties": {}
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于优惠券的兑换和选择。",
    "groupKey": "Business Components",
    "groupName": "业务组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "ContactEdit",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "ContactEdit 联系人编辑",
        "description": "组件名称"
      },
      "tagName": {
        "title": "ContactEdit",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "isEdit",
          "isSaving",
          "isDeleting",
          "showSetDefault",
          "setDefaultLabel",
          "contactInfo",
          "type",
          "telValidator",
          "default",
          "props",
          "emits",
          "v-slots={{'right-icon'",
          "rules={[{required",
          "{validator"
        ],
        "properties": {
          "isEdit": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "isEdit",
            "option": false,
            "valueType": "switch"
          },
          "isSaving": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "isSaving",
            "option": false,
            "valueType": "switch"
          },
          "isDeleting": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "isDeleting",
            "option": false,
            "valueType": "switch"
          },
          "showSetDefault": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "showSetDefault",
            "option": false,
            "valueType": "switch"
          },
          "setDefaultLabel": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "setDefaultLabel",
            "option": false,
            "valueType": "text"
          },
          "contactInfo": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "contactInfo",
            "option": false,
            "valueType": "text"
          },
          "type": {
            "enum": [],
            "type": [
              "Object as PropType<ContactEditInfo>"
            ],
            "title": "type",
            "option": false,
            "valueType": "text"
          },
          "telValidator": {
            "enum": [],
            "type": [
              "{"
            ],
            "title": "telValidator",
            "option": false,
            "valueType": "text"
          },
          "default": {
            "enum": [],
            "type": [
              "isMobile"
            ],
            "title": "default",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "contactEditProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['save' 'delete' 'changeDefault']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "v-slots={{'right-icon'": {
            "enum": [],
            "type": [
              "renderSwitch }}"
            ],
            "title": "v-slots={{'right-icon'",
            "option": false,
            "valueType": "text"
          },
          "rules={[{required": {
            "enum": [],
            "type": [
              "true message: t('nameEmpty') }]}"
            ],
            "title": "rules={[{required",
            "option": false,
            "valueType": "text"
          },
          "{validator": {
            "enum": [],
            "type": [
              "props.telValidator message: t('telInvalid') }"
            ],
            "title": "{validator",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "events": {
        "type": "object",
        "title": "交互行为",
        "description": "组件动作事件",
        "required": [
          "default",
          "type",
          "onChange={(checked"
        ],
        "properties": {
          "default": {
            "value": "() => extend({} DEFAULT_CONTACT)",
            "title": "default",
            "description": "default",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "type": {
            "value": "Function as PropType<(val: string) => boolean>",
            "title": "type",
            "description": "type",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          },
          "onChange={(checked": {
            "value": "boolean) => emit('changeDefault' checked)}",
            "title": "onChange={(checked",
            "description": "onChange={(checked",
            "type": "object",
            "properties": {
              "name": {
                "description": "函数名",
                "title": "函数名",
                "type": "string"
              }
            }
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "以卡片的形式展示联系人信息。",
    "groupKey": "Business Components",
    "groupName": "业务组件",
    "isHidden": 0,
    "framework": "vue"
  },
  {
    "tagName": "SubmitBar",
    "pkgId": "vant",
    "type": "object",
    "properties": {
      "name": {
        "title": "SubmitBar 提交订单栏",
        "description": "组件名称"
      },
      "tagName": {
        "title": "SubmitBar",
        "description": "组件标签"
      },
      "advanceProps": {
        "title": "高级属性",
        "description": "高级属性",
        "type": "object",
        "properties": {
          "condition": {
            "title": "是否渲染",
            "description": "是否渲染",
            "type": "string",
            "valueType": "switch",
            "default": true
          }
        }
      },
      "hasChild": {
        "type": "boolean",
        "const": true,
        "title": "支持调用子组件",
        "description": "true:支持;false:不支持"
      },
      "props": {
        "type": "object",
        "title": "组件属性",
        "description": "组件属性",
        "required": [
          "tip",
          "label",
          "price",
          "tipIcon",
          "loading",
          "currency",
          "disabled",
          "textAlign",
          "buttonText",
          "buttonType",
          "buttonColor",
          "suffixLabel",
          "placeholder",
          "decimalLength",
          "safeAreaInsetBottom",
          "props",
          "emits",
          "class={[bem(),{'van-safe-area-bottom'"
        ],
        "properties": {
          "tip": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "tip",
            "option": false,
            "valueType": "text"
          },
          "label": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "label",
            "option": false,
            "valueType": "text"
          },
          "price": {
            "enum": [],
            "type": [
              "Number"
            ],
            "title": "price",
            "option": false,
            "valueType": "text"
          },
          "tipIcon": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "tipIcon",
            "option": false,
            "valueType": "text"
          },
          "loading": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "loading",
            "option": false,
            "valueType": "switch"
          },
          "currency": {
            "enum": [],
            "type": [
              "makeStringProp('¥')"
            ],
            "title": "currency",
            "option": false,
            "valueType": "text"
          },
          "disabled": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "disabled",
            "option": false,
            "valueType": "switch"
          },
          "textAlign": {
            "enum": [],
            "type": [
              "String as PropType<SubmitBarTextAlign>"
            ],
            "title": "textAlign",
            "option": false,
            "valueType": "text"
          },
          "buttonText": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "buttonText",
            "option": false,
            "valueType": "text"
          },
          "buttonType": {
            "enum": [],
            "type": [
              "makeStringProp<ButtonType>('danger')"
            ],
            "title": "buttonType",
            "option": false,
            "valueType": "text"
          },
          "buttonColor": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "buttonColor",
            "option": false,
            "valueType": "text"
          },
          "suffixLabel": {
            "enum": [],
            "type": [
              "String"
            ],
            "title": "suffixLabel",
            "option": false,
            "valueType": "text"
          },
          "placeholder": {
            "enum": [],
            "type": [
              "boolean"
            ],
            "title": "placeholder",
            "option": false,
            "valueType": "switch"
          },
          "decimalLength": {
            "enum": [],
            "type": [
              "makeNumericProp(2)"
            ],
            "title": "decimalLength",
            "option": false,
            "valueType": "text"
          },
          "safeAreaInsetBottom": {
            "enum": [],
            "type": [
              "truthProp"
            ],
            "title": "safeAreaInsetBottom",
            "option": false,
            "valueType": "text"
          },
          "props": {
            "enum": [],
            "type": [
              "submitBarProps"
            ],
            "title": "props",
            "option": false,
            "valueType": "text"
          },
          "emits": {
            "enum": [],
            "type": [
              "['submit']"
            ],
            "title": "emits",
            "option": false,
            "valueType": "text"
          },
          "constdecimal=decimalLength`.${pricePair[1]}`": {
            "enum": [],
            "type": [
              "'';"
            ],
            "title": "constdecimal=decimalLength`.${pricePair[1]}`",
            "option": true,
            "valueType": "text"
          },
          "class={[bem(),{'van-safe-area-bottom'": {
            "enum": [],
            "type": [
              "props.safeAreaInsetBottom }]}"
            ],
            "title": "class={[bem(),{'van-safe-area-bottom'",
            "option": false,
            "valueType": "text"
          }
        }
      },
      "pkgId": {
        "title": "vant",
        "description": "组件库包名称"
      },
      "version": {
        "title": "4.0.2",
        "description": "组件库包版本"
      },
      "protoProps": {
        "type": "object",
        "title": "原生属性",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "title": "唯一id",
            "valueType": "text",
            "description": "元素唯一标识"
          },
          "ref": {
            "type": "string",
            "title": "ref",
            "valueType": "text",
            "description": "组件ref名称，可在this.[ref名称]来获取组件实例this对象"
          },
          "style": {
            "type": "object",
            "title": "内联样式",
            "valueType": "object",
            "description": "组件内联样式(JSON格式)"
          },
          "className": {
            "type": "string",
            "title": "样式名",
            "valueType": "textarea",
            "description": "组件样式名"
          }
        },
        "description": "原生属性"
      },
      "lastModifyTime": {
        "type": "string",
        "title": "最后一次修改时间",
        "description": "2022-12-13"
      }
    },
    "lastModifyTime": "2022-12-13",
    "version": "4.0.2",
    "required": [
      null
    ],
    "description": "用于展示订单金额与提交订单。",
    "groupKey": "Business Components",
    "groupName": "业务组件",
    "isHidden": 0,
    "framework": "vue"
  }
]